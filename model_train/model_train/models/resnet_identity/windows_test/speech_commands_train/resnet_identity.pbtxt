node {
  name: "input_batch"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1428571492433548
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_layer_c0_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_layer_c0_w/Assign"
  op: "Assign"
  input: "input_layer_c0_w"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_layer_c0_w/read"
  op: "Identity"
  input: "input_layer_c0_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
}
node {
  name: "truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_1/mul"
  op: "Mul"
  input: "truncated_normal_1/TruncatedNormal"
  input: "truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_1"
  op: "Add"
  input: "truncated_normal_1/mul"
  input: "truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_layer_c0_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_layer_c0_b/Assign"
  op: "Assign"
  input: "input_layer_c0_b"
  input: "truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_layer_c0_b/read"
  op: "Identity"
  input: "input_layer_c0_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
}
node {
  name: "Conv2D"
  op: "Conv2D"
  input: "input_batch"
  input: "input_layer_c0_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Conv2D"
  input: "input_layer_c0_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/sub"
  op: "Sub"
  input: "dropout/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/random_uniform/max"
  input: "dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/random_uniform/RandomUniform"
  input: "dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/random_uniform"
  op: "Add"
  input: "dropout/random_uniform/mul"
  input: "dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/add"
  op: "Add"
  input: "dropout/sub"
  input: "dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Floor"
  op: "Floor"
  input: "dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul"
  op: "Mul"
  input: "add"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/sub_1"
  op: "Sub"
  input: "dropout/sub_1/x"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_1"
  op: "Mul"
  input: "dropout/alpha"
  input: "dropout/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/add_1"
  op: "Add"
  input: "dropout/mul"
  input: "dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/sub_2"
  op: "Sub"
  input: "dropout/sub_2/x"
  input: "dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/sub_3"
  op: "Sub"
  input: "dropout/alpha"
  input: "dropout/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout/Pow"
  op: "Pow"
  input: "dropout/sub_3"
  input: "dropout/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_2"
  op: "Mul"
  input: "dropout/sub_2"
  input: "dropout/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/add_2"
  op: "Add"
  input: "dropout/mul_2"
  input: "dropout/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_3"
  op: "Mul"
  input: "dropout/sub"
  input: "dropout/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/truediv"
  op: "RealDiv"
  input: "dropout/truediv/x"
  input: "dropout/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Sqrt"
  op: "Sqrt"
  input: "dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/mul_4"
  op: "Mul"
  input: "dropout/sub"
  input: "dropout/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/sub_4"
  op: "Sub"
  input: "dropout/sub_4/x"
  input: "dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_5"
  op: "Mul"
  input: "dropout/sub_4"
  input: "dropout/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/add_3"
  op: "Add"
  input: "dropout/mul_4"
  input: "dropout/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_6"
  op: "Mul"
  input: "dropout/Sqrt"
  input: "dropout/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/sub_5"
  op: "Sub"
  input: "dropout/sub_5/x"
  input: "dropout/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul_7"
  op: "Mul"
  input: "dropout/Sqrt"
  input: "dropout/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/add_4"
  op: "Add"
  input: "dropout/mul_7"
  input: "dropout/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_2/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_2/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_2/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_2/mul"
  op: "Mul"
  input: "truncated_normal_2/TruncatedNormal"
  input: "truncated_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_2"
  op: "Add"
  input: "truncated_normal_2/mul"
  input: "truncated_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block1_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c1_w/Assign"
  op: "Assign"
  input: "stage1_block1_c1_w"
  input: "truncated_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c1_w/read"
  op: "Identity"
  input: "stage1_block1_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_3/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_3/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_3/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_3/mul"
  op: "Mul"
  input: "truncated_normal_3/TruncatedNormal"
  input: "truncated_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_3"
  op: "Add"
  input: "truncated_normal_3/mul"
  input: "truncated_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block1_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c1_b/Assign"
  op: "Assign"
  input: "stage1_block1_c1_b"
  input: "truncated_normal_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c1_b/read"
  op: "Identity"
  input: "stage1_block1_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_1"
  op: "Conv2D"
  input: "dropout/add_4"
  input: "stage1_block1_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "Conv2D_1"
  input: "stage1_block1_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/gamma"
    }
  }
}
node {
  name: "batch_normalization/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/gamma"
}
node {
  name: "batch_normalization/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/beta"
    }
  }
}
node {
  name: "batch_normalization/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/beta"
}
node {
  name: "batch_normalization/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/moving_mean"
    }
  }
}
node {
  name: "batch_normalization/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/moving_mean"
}
node {
  name: "batch_normalization/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/moving_variance"
    }
  }
}
node {
  name: "batch_normalization/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/moving_variance"
}
node {
  name: "batch_normalization/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/switch_t"
  op: "Identity"
  input: "batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/switch_f"
  op: "Identity"
  input: "batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization/gamma"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization/beta"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Const"
  op: "Const"
  input: "^batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Const_1"
  op: "Const"
  input: "^batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization/cond/ReadVariableOp"
  input: "batch_normalization/cond/ReadVariableOp_1"
  input: "batch_normalization/cond/Const"
  input: "batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_1"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization/gamma"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization/beta"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization/cond/ReadVariableOp_2"
  input: "batch_normalization/cond/ReadVariableOp_3"
  input: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_1"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1"
      }
    }
  }
}
node {
  name: "batch_normalization/cond/Merge"
  op: "Merge"
  input: "batch_normalization/cond/FusedBatchNorm_1"
  input: "batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization/cond/FusedBatchNorm_1:1"
  input: "batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization/cond/FusedBatchNorm_1:2"
  input: "batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization/cond_1/Const"
  op: "Const"
  input: "^batch_normalization/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization/cond_1/Const_1"
  input: "batch_normalization/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg/sub/x"
  input: "batch_normalization/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg/sub_1"
  input: "batch_normalization/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_mean"
  input: "^batch_normalization/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg_1/sub/x"
  input: "batch_normalization/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg_1/sub_1"
  input: "batch_normalization/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization/moving_variance"
  input: "^batch_normalization/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu"
  op: "Selu"
  input: "batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_4/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_4/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_4/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_4/mul"
  op: "Mul"
  input: "truncated_normal_4/TruncatedNormal"
  input: "truncated_normal_4/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_4"
  op: "Add"
  input: "truncated_normal_4/mul"
  input: "truncated_normal_4/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block1_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c2_w/Assign"
  op: "Assign"
  input: "stage1_block1_c2_w"
  input: "truncated_normal_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c2_w/read"
  op: "Identity"
  input: "stage1_block1_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_5/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_5/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_5/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_5/mul"
  op: "Mul"
  input: "truncated_normal_5/TruncatedNormal"
  input: "truncated_normal_5/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_5"
  op: "Add"
  input: "truncated_normal_5/mul"
  input: "truncated_normal_5/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block1_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c2_b/Assign"
  op: "Assign"
  input: "stage1_block1_c2_b"
  input: "truncated_normal_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c2_b/read"
  op: "Identity"
  input: "stage1_block1_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_2"
  op: "Conv2D"
  input: "Selu"
  input: "stage1_block1_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "Conv2D_2"
  input: "stage1_block1_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/gamma"
    }
  }
}
node {
  name: "batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma"
}
node {
  name: "batch_normalization_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/beta"
    }
  }
}
node {
  name: "batch_normalization_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta"
}
node {
  name: "batch_normalization_1/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_mean"
}
node {
  name: "batch_normalization_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_variance"
}
node {
  name: "batch_normalization_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Const"
  op: "Const"
  input: "^batch_normalization_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_1/cond/ReadVariableOp"
  input: "batch_normalization_1/cond/ReadVariableOp_1"
  input: "batch_normalization_1/cond/Const"
  input: "batch_normalization_1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_2"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_1/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_1/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_1/cond/ReadVariableOp_2"
  input: "batch_normalization_1/cond/ReadVariableOp_3"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_2"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_1/cond/FusedBatchNorm_1"
  input: "batch_normalization_1/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_1/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_1/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_1/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_1/cond_1/Const_1"
  input: "batch_normalization_1/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg/sub/x"
  input: "batch_normalization_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_1/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg/sub_1"
  input: "batch_normalization_1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "^batch_normalization_1/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_1/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "^batch_normalization_1/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_1"
  op: "Selu"
  input: "batch_normalization_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_3"
  op: "Add"
  input: "dropout/add_4"
  input: "Selu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "Add_3"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/sub"
  op: "Sub"
  input: "dropout_1/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_1/Shape"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/random_uniform/max"
  input: "dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/random_uniform/RandomUniform"
  input: "dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/random_uniform"
  op: "Add"
  input: "dropout_1/random_uniform/mul"
  input: "dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/add"
  op: "Add"
  input: "dropout_1/sub"
  input: "dropout_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Floor"
  op: "Floor"
  input: "dropout_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul"
  op: "Mul"
  input: "mul"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/sub_1"
  op: "Sub"
  input: "dropout_1/sub_1/x"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_1"
  op: "Mul"
  input: "dropout_1/alpha"
  input: "dropout_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/add_1"
  op: "Add"
  input: "dropout_1/mul"
  input: "dropout_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/sub_2"
  op: "Sub"
  input: "dropout_1/sub_2/x"
  input: "dropout_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/sub_3"
  op: "Sub"
  input: "dropout_1/alpha"
  input: "dropout_1/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_1/Pow"
  op: "Pow"
  input: "dropout_1/sub_3"
  input: "dropout_1/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_2"
  op: "Mul"
  input: "dropout_1/sub_2"
  input: "dropout_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/add_2"
  op: "Add"
  input: "dropout_1/mul_2"
  input: "dropout_1/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_3"
  op: "Mul"
  input: "dropout_1/sub"
  input: "dropout_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/truediv"
  op: "RealDiv"
  input: "dropout_1/truediv/x"
  input: "dropout_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Sqrt"
  op: "Sqrt"
  input: "dropout_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/mul_4"
  op: "Mul"
  input: "dropout_1/sub"
  input: "dropout_1/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/sub_4"
  op: "Sub"
  input: "dropout_1/sub_4/x"
  input: "dropout_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_5"
  op: "Mul"
  input: "dropout_1/sub_4"
  input: "dropout_1/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/add_3"
  op: "Add"
  input: "dropout_1/mul_4"
  input: "dropout_1/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_6"
  op: "Mul"
  input: "dropout_1/Sqrt"
  input: "dropout_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/sub_5"
  op: "Sub"
  input: "dropout_1/sub_5/x"
  input: "dropout_1/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul_7"
  op: "Mul"
  input: "dropout_1/Sqrt"
  input: "dropout_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/add_4"
  op: "Add"
  input: "dropout_1/mul_7"
  input: "dropout_1/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_6/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_6/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_6/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_6/mul"
  op: "Mul"
  input: "truncated_normal_6/TruncatedNormal"
  input: "truncated_normal_6/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_6"
  op: "Add"
  input: "truncated_normal_6/mul"
  input: "truncated_normal_6/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block2_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c1_w/Assign"
  op: "Assign"
  input: "stage1_block2_c1_w"
  input: "truncated_normal_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c1_w/read"
  op: "Identity"
  input: "stage1_block2_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_7/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_7/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_7/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_7/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_7/mul"
  op: "Mul"
  input: "truncated_normal_7/TruncatedNormal"
  input: "truncated_normal_7/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_7"
  op: "Add"
  input: "truncated_normal_7/mul"
  input: "truncated_normal_7/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block2_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c1_b/Assign"
  op: "Assign"
  input: "stage1_block2_c1_b"
  input: "truncated_normal_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c1_b/read"
  op: "Identity"
  input: "stage1_block2_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_3"
  op: "Conv2D"
  input: "dropout_1/add_4"
  input: "stage1_block2_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "Conv2D_3"
  input: "stage1_block2_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/gamma"
    }
  }
}
node {
  name: "batch_normalization_2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/gamma"
}
node {
  name: "batch_normalization_2/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/beta"
    }
  }
}
node {
  name: "batch_normalization_2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/beta"
}
node {
  name: "batch_normalization_2/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/moving_mean"
}
node {
  name: "batch_normalization_2/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/moving_variance"
}
node {
  name: "batch_normalization_2/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_2/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/Const"
  op: "Const"
  input: "^batch_normalization_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_2/cond/ReadVariableOp"
  input: "batch_normalization_2/cond/ReadVariableOp_1"
  input: "batch_normalization_2/cond/Const"
  input: "batch_normalization_2/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_4"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_4"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_2/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_2/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_2/cond/ReadVariableOp_2"
  input: "batch_normalization_2/cond/ReadVariableOp_3"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_4"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_4"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge"
  op: "Merge"
  input: "batch_normalization_2/cond/FusedBatchNorm_1"
  input: "batch_normalization_2/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_2/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_2/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_2/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_2/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_2/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_2/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_2/cond_1/Const_1"
  input: "batch_normalization_2/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg/sub/x"
  input: "batch_normalization_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_2/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg/sub_1"
  input: "batch_normalization_2/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "^batch_normalization_2/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_2/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_2/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "^batch_normalization_2/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_2"
  op: "Selu"
  input: "batch_normalization_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_8/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_8/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_8/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_8/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_8/mul"
  op: "Mul"
  input: "truncated_normal_8/TruncatedNormal"
  input: "truncated_normal_8/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_8"
  op: "Add"
  input: "truncated_normal_8/mul"
  input: "truncated_normal_8/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block2_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c2_w/Assign"
  op: "Assign"
  input: "stage1_block2_c2_w"
  input: "truncated_normal_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c2_w/read"
  op: "Identity"
  input: "stage1_block2_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_9/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_9/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_9/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_9/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_9/mul"
  op: "Mul"
  input: "truncated_normal_9/TruncatedNormal"
  input: "truncated_normal_9/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_9"
  op: "Add"
  input: "truncated_normal_9/mul"
  input: "truncated_normal_9/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block2_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c2_b/Assign"
  op: "Assign"
  input: "stage1_block2_c2_b"
  input: "truncated_normal_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c2_b/read"
  op: "Identity"
  input: "stage1_block2_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_4"
  op: "Conv2D"
  input: "Selu_2"
  input: "stage1_block2_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "Conv2D_4"
  input: "stage1_block2_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/gamma"
    }
  }
}
node {
  name: "batch_normalization_3/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/gamma"
}
node {
  name: "batch_normalization_3/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/beta"
    }
  }
}
node {
  name: "batch_normalization_3/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/beta"
}
node {
  name: "batch_normalization_3/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/moving_mean"
}
node {
  name: "batch_normalization_3/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/moving_variance"
}
node {
  name: "batch_normalization_3/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_3/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/Const"
  op: "Const"
  input: "^batch_normalization_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_3/cond/ReadVariableOp"
  input: "batch_normalization_3/cond/ReadVariableOp_1"
  input: "batch_normalization_3/cond/Const"
  input: "batch_normalization_3/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_5"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_5"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_3/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_3/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_3/cond/ReadVariableOp_2"
  input: "batch_normalization_3/cond/ReadVariableOp_3"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_5"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_5"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge"
  op: "Merge"
  input: "batch_normalization_3/cond/FusedBatchNorm_1"
  input: "batch_normalization_3/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_3/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_3/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_3/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_3/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_3/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_3/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_3/cond_1/Const_1"
  input: "batch_normalization_3/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg/sub/x"
  input: "batch_normalization_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_3/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg/sub_1"
  input: "batch_normalization_3/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "^batch_normalization_3/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_3/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_3/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "^batch_normalization_3/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_3"
  op: "Selu"
  input: "batch_normalization_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_6"
  op: "Add"
  input: "dropout_1/add_4"
  input: "Selu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "Add_6"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/sub"
  op: "Sub"
  input: "dropout_2/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_2/Shape"
  op: "Shape"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_2/random_uniform/sub"
  op: "Sub"
  input: "dropout_2/random_uniform/max"
  input: "dropout_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/random_uniform/mul"
  op: "Mul"
  input: "dropout_2/random_uniform/RandomUniform"
  input: "dropout_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/random_uniform"
  op: "Add"
  input: "dropout_2/random_uniform/mul"
  input: "dropout_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/add"
  op: "Add"
  input: "dropout_2/sub"
  input: "dropout_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Floor"
  op: "Floor"
  input: "dropout_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul"
  op: "Mul"
  input: "mul_1"
  input: "dropout_2/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/sub_1"
  op: "Sub"
  input: "dropout_2/sub_1/x"
  input: "dropout_2/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_1"
  op: "Mul"
  input: "dropout_2/alpha"
  input: "dropout_2/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/add_1"
  op: "Add"
  input: "dropout_2/mul"
  input: "dropout_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/sub_2"
  op: "Sub"
  input: "dropout_2/sub_2/x"
  input: "dropout_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/sub_3"
  op: "Sub"
  input: "dropout_2/alpha"
  input: "dropout_2/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_2/Pow"
  op: "Pow"
  input: "dropout_2/sub_3"
  input: "dropout_2/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_2"
  op: "Mul"
  input: "dropout_2/sub_2"
  input: "dropout_2/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/add_2"
  op: "Add"
  input: "dropout_2/mul_2"
  input: "dropout_2/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_3"
  op: "Mul"
  input: "dropout_2/sub"
  input: "dropout_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/truediv"
  op: "RealDiv"
  input: "dropout_2/truediv/x"
  input: "dropout_2/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Sqrt"
  op: "Sqrt"
  input: "dropout_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/mul_4"
  op: "Mul"
  input: "dropout_2/sub"
  input: "dropout_2/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/sub_4"
  op: "Sub"
  input: "dropout_2/sub_4/x"
  input: "dropout_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_5"
  op: "Mul"
  input: "dropout_2/sub_4"
  input: "dropout_2/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/add_3"
  op: "Add"
  input: "dropout_2/mul_4"
  input: "dropout_2/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_6"
  op: "Mul"
  input: "dropout_2/Sqrt"
  input: "dropout_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/sub_5"
  op: "Sub"
  input: "dropout_2/sub_5/x"
  input: "dropout_2/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/mul_7"
  op: "Mul"
  input: "dropout_2/Sqrt"
  input: "dropout_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/add_4"
  op: "Add"
  input: "dropout_2/mul_7"
  input: "dropout_2/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_10/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_10/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_10/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_10/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_10/mul"
  op: "Mul"
  input: "truncated_normal_10/TruncatedNormal"
  input: "truncated_normal_10/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_10"
  op: "Add"
  input: "truncated_normal_10/mul"
  input: "truncated_normal_10/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block3_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c1_w/Assign"
  op: "Assign"
  input: "stage1_block3_c1_w"
  input: "truncated_normal_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c1_w/read"
  op: "Identity"
  input: "stage1_block3_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_11/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_11/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_11/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_11/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_11/mul"
  op: "Mul"
  input: "truncated_normal_11/TruncatedNormal"
  input: "truncated_normal_11/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_11"
  op: "Add"
  input: "truncated_normal_11/mul"
  input: "truncated_normal_11/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block3_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c1_b/Assign"
  op: "Assign"
  input: "stage1_block3_c1_b"
  input: "truncated_normal_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c1_b/read"
  op: "Identity"
  input: "stage1_block3_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_5"
  op: "Conv2D"
  input: "dropout_2/add_4"
  input: "stage1_block3_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "Conv2D_5"
  input: "stage1_block3_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/gamma"
    }
  }
}
node {
  name: "batch_normalization_4/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/gamma"
}
node {
  name: "batch_normalization_4/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/beta"
    }
  }
}
node {
  name: "batch_normalization_4/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/beta"
}
node {
  name: "batch_normalization_4/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/moving_mean"
}
node {
  name: "batch_normalization_4/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/moving_variance"
}
node {
  name: "batch_normalization_4/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_4/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/Const"
  op: "Const"
  input: "^batch_normalization_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_4/cond/ReadVariableOp"
  input: "batch_normalization_4/cond/ReadVariableOp_1"
  input: "batch_normalization_4/cond/Const"
  input: "batch_normalization_4/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_7"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_7"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_4/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_4/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_4/cond/ReadVariableOp_2"
  input: "batch_normalization_4/cond/ReadVariableOp_3"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_7"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_7"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge"
  op: "Merge"
  input: "batch_normalization_4/cond/FusedBatchNorm_1"
  input: "batch_normalization_4/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_4/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_4/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_4/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_4/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_4/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_4/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_4/cond_1/Const_1"
  input: "batch_normalization_4/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg/sub/x"
  input: "batch_normalization_4/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_4/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg/sub_1"
  input: "batch_normalization_4/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "^batch_normalization_4/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_4/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_4/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_4/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "^batch_normalization_4/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_4"
  op: "Selu"
  input: "batch_normalization_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_12/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_12/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_12/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_12/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_12/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_12/mul"
  op: "Mul"
  input: "truncated_normal_12/TruncatedNormal"
  input: "truncated_normal_12/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_12"
  op: "Add"
  input: "truncated_normal_12/mul"
  input: "truncated_normal_12/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block3_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c2_w/Assign"
  op: "Assign"
  input: "stage1_block3_c2_w"
  input: "truncated_normal_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c2_w/read"
  op: "Identity"
  input: "stage1_block3_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_13/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_13/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_13/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_13/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_13/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_13/mul"
  op: "Mul"
  input: "truncated_normal_13/TruncatedNormal"
  input: "truncated_normal_13/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_13"
  op: "Add"
  input: "truncated_normal_13/mul"
  input: "truncated_normal_13/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block3_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c2_b/Assign"
  op: "Assign"
  input: "stage1_block3_c2_b"
  input: "truncated_normal_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c2_b/read"
  op: "Identity"
  input: "stage1_block3_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_6"
  op: "Conv2D"
  input: "Selu_4"
  input: "stage1_block3_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "Conv2D_6"
  input: "stage1_block3_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/gamma"
    }
  }
}
node {
  name: "batch_normalization_5/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/gamma"
}
node {
  name: "batch_normalization_5/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/beta"
    }
  }
}
node {
  name: "batch_normalization_5/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/beta"
}
node {
  name: "batch_normalization_5/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/moving_mean"
}
node {
  name: "batch_normalization_5/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/moving_variance"
}
node {
  name: "batch_normalization_5/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_5/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/Const"
  op: "Const"
  input: "^batch_normalization_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_5/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_5/cond/ReadVariableOp"
  input: "batch_normalization_5/cond/ReadVariableOp_1"
  input: "batch_normalization_5/cond/Const"
  input: "batch_normalization_5/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_8"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_8"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_5/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_5/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_5/cond/ReadVariableOp_2"
  input: "batch_normalization_5/cond/ReadVariableOp_3"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_8"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_8"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/Merge"
  op: "Merge"
  input: "batch_normalization_5/cond/FusedBatchNorm_1"
  input: "batch_normalization_5/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_5/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_5/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_5/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_5/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_5/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_5/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_5/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_5/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_5/cond_1/Const_1"
  input: "batch_normalization_5/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_5/AssignMovingAvg/sub/x"
  input: "batch_normalization_5/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_5/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_5/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_5/AssignMovingAvg/sub_1"
  input: "batch_normalization_5/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "^batch_normalization_5/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_5/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_5/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_5/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_5/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_5/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_5/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "^batch_normalization_5/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_5"
  op: "Selu"
  input: "batch_normalization_5/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_9"
  op: "Add"
  input: "dropout_2/add_4"
  input: "Selu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "Add_9"
  input: "mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/sub"
  op: "Sub"
  input: "dropout_3/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_3/Shape"
  op: "Shape"
  input: "mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_3/random_uniform/sub"
  op: "Sub"
  input: "dropout_3/random_uniform/max"
  input: "dropout_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/random_uniform/mul"
  op: "Mul"
  input: "dropout_3/random_uniform/RandomUniform"
  input: "dropout_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/random_uniform"
  op: "Add"
  input: "dropout_3/random_uniform/mul"
  input: "dropout_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/add"
  op: "Add"
  input: "dropout_3/sub"
  input: "dropout_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/Floor"
  op: "Floor"
  input: "dropout_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul"
  op: "Mul"
  input: "mul_2"
  input: "dropout_3/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/sub_1"
  op: "Sub"
  input: "dropout_3/sub_1/x"
  input: "dropout_3/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_1"
  op: "Mul"
  input: "dropout_3/alpha"
  input: "dropout_3/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/add_1"
  op: "Add"
  input: "dropout_3/mul"
  input: "dropout_3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/sub_2"
  op: "Sub"
  input: "dropout_3/sub_2/x"
  input: "dropout_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/sub_3"
  op: "Sub"
  input: "dropout_3/alpha"
  input: "dropout_3/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_3/Pow"
  op: "Pow"
  input: "dropout_3/sub_3"
  input: "dropout_3/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_2"
  op: "Mul"
  input: "dropout_3/sub_2"
  input: "dropout_3/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/add_2"
  op: "Add"
  input: "dropout_3/mul_2"
  input: "dropout_3/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_3"
  op: "Mul"
  input: "dropout_3/sub"
  input: "dropout_3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/truediv"
  op: "RealDiv"
  input: "dropout_3/truediv/x"
  input: "dropout_3/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/Sqrt"
  op: "Sqrt"
  input: "dropout_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/mul_4"
  op: "Mul"
  input: "dropout_3/sub"
  input: "dropout_3/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/sub_4"
  op: "Sub"
  input: "dropout_3/sub_4/x"
  input: "dropout_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_5"
  op: "Mul"
  input: "dropout_3/sub_4"
  input: "dropout_3/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/add_3"
  op: "Add"
  input: "dropout_3/mul_4"
  input: "dropout_3/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_6"
  op: "Mul"
  input: "dropout_3/Sqrt"
  input: "dropout_3/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/sub_5"
  op: "Sub"
  input: "dropout_3/sub_5/x"
  input: "dropout_3/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/mul_7"
  op: "Mul"
  input: "dropout_3/Sqrt"
  input: "dropout_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/add_4"
  op: "Add"
  input: "dropout_3/mul_7"
  input: "dropout_3/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_14/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_14/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_14/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_14/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_14/mul"
  op: "Mul"
  input: "truncated_normal_14/TruncatedNormal"
  input: "truncated_normal_14/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_14"
  op: "Add"
  input: "truncated_normal_14/mul"
  input: "truncated_normal_14/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block4_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c1_w/Assign"
  op: "Assign"
  input: "stage1_block4_c1_w"
  input: "truncated_normal_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c1_w/read"
  op: "Identity"
  input: "stage1_block4_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_15/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_15/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_15/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_15/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_15/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_15/mul"
  op: "Mul"
  input: "truncated_normal_15/TruncatedNormal"
  input: "truncated_normal_15/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_15"
  op: "Add"
  input: "truncated_normal_15/mul"
  input: "truncated_normal_15/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block4_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c1_b/Assign"
  op: "Assign"
  input: "stage1_block4_c1_b"
  input: "truncated_normal_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c1_b/read"
  op: "Identity"
  input: "stage1_block4_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_7"
  op: "Conv2D"
  input: "dropout_3/add_4"
  input: "stage1_block4_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_10"
  op: "Add"
  input: "Conv2D_7"
  input: "stage1_block4_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/gamma"
    }
  }
}
node {
  name: "batch_normalization_6/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/gamma"
}
node {
  name: "batch_normalization_6/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/beta"
    }
  }
}
node {
  name: "batch_normalization_6/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/beta"
}
node {
  name: "batch_normalization_6/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/moving_mean"
}
node {
  name: "batch_normalization_6/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/moving_variance"
}
node {
  name: "batch_normalization_6/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_6/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_6/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_6/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/Const"
  op: "Const"
  input: "^batch_normalization_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_6/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_6/cond/ReadVariableOp"
  input: "batch_normalization_6/cond/ReadVariableOp_1"
  input: "batch_normalization_6/cond/Const"
  input: "batch_normalization_6/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_10"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_10"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_6/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_6/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_6/cond/ReadVariableOp_2"
  input: "batch_normalization_6/cond/ReadVariableOp_3"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_6/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_10"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_10"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/Merge"
  op: "Merge"
  input: "batch_normalization_6/cond/FusedBatchNorm_1"
  input: "batch_normalization_6/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_6/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_6/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_6/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_6/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_6/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_6/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_6/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_6/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_6/cond_1/Const_1"
  input: "batch_normalization_6/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_6/AssignMovingAvg/sub/x"
  input: "batch_normalization_6/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_6/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_6/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_6/AssignMovingAvg/sub_1"
  input: "batch_normalization_6/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_6/moving_mean"
  input: "^batch_normalization_6/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_6/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_6/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_6/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_6/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_6/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_6/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_6/moving_variance"
  input: "^batch_normalization_6/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_6"
  op: "Selu"
  input: "batch_normalization_6/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_16/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_16/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_16/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_16/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_16/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_16/mul"
  op: "Mul"
  input: "truncated_normal_16/TruncatedNormal"
  input: "truncated_normal_16/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_16"
  op: "Add"
  input: "truncated_normal_16/mul"
  input: "truncated_normal_16/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block4_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c2_w/Assign"
  op: "Assign"
  input: "stage1_block4_c2_w"
  input: "truncated_normal_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c2_w/read"
  op: "Identity"
  input: "stage1_block4_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_17/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_17/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_17/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_17/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_17/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_17/mul"
  op: "Mul"
  input: "truncated_normal_17/TruncatedNormal"
  input: "truncated_normal_17/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_17"
  op: "Add"
  input: "truncated_normal_17/mul"
  input: "truncated_normal_17/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block4_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c2_b/Assign"
  op: "Assign"
  input: "stage1_block4_c2_b"
  input: "truncated_normal_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c2_b/read"
  op: "Identity"
  input: "stage1_block4_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_8"
  op: "Conv2D"
  input: "Selu_6"
  input: "stage1_block4_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_11"
  op: "Add"
  input: "Conv2D_8"
  input: "stage1_block4_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/gamma"
    }
  }
}
node {
  name: "batch_normalization_7/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/gamma"
}
node {
  name: "batch_normalization_7/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/beta"
    }
  }
}
node {
  name: "batch_normalization_7/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/beta"
}
node {
  name: "batch_normalization_7/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/moving_mean"
}
node {
  name: "batch_normalization_7/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/moving_variance"
}
node {
  name: "batch_normalization_7/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_7/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_7/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_7/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/Const"
  op: "Const"
  input: "^batch_normalization_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_7/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_7/cond/ReadVariableOp"
  input: "batch_normalization_7/cond/ReadVariableOp_1"
  input: "batch_normalization_7/cond/Const"
  input: "batch_normalization_7/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_11"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_11"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_7/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_7/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_7/cond/ReadVariableOp_2"
  input: "batch_normalization_7/cond/ReadVariableOp_3"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_7/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_11"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_11"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/Merge"
  op: "Merge"
  input: "batch_normalization_7/cond/FusedBatchNorm_1"
  input: "batch_normalization_7/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_7/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_7/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_7/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_7/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_7/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_7/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_7/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_7/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_7/cond_1/Const_1"
  input: "batch_normalization_7/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_7/AssignMovingAvg/sub/x"
  input: "batch_normalization_7/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_7/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_7/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_7/AssignMovingAvg/sub_1"
  input: "batch_normalization_7/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_7/moving_mean"
  input: "^batch_normalization_7/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_7/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_7/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_7/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_7/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_7/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_7/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_7/moving_variance"
  input: "^batch_normalization_7/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_7"
  op: "Selu"
  input: "batch_normalization_7/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_12"
  op: "Add"
  input: "dropout_3/add_4"
  input: "Selu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "Add_12"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/sub"
  op: "Sub"
  input: "dropout_4/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_4/Shape"
  op: "Shape"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_4/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_4/random_uniform/sub"
  op: "Sub"
  input: "dropout_4/random_uniform/max"
  input: "dropout_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/random_uniform/mul"
  op: "Mul"
  input: "dropout_4/random_uniform/RandomUniform"
  input: "dropout_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/random_uniform"
  op: "Add"
  input: "dropout_4/random_uniform/mul"
  input: "dropout_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/add"
  op: "Add"
  input: "dropout_4/sub"
  input: "dropout_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/Floor"
  op: "Floor"
  input: "dropout_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul"
  op: "Mul"
  input: "mul_3"
  input: "dropout_4/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/sub_1"
  op: "Sub"
  input: "dropout_4/sub_1/x"
  input: "dropout_4/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_1"
  op: "Mul"
  input: "dropout_4/alpha"
  input: "dropout_4/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/add_1"
  op: "Add"
  input: "dropout_4/mul"
  input: "dropout_4/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/sub_2"
  op: "Sub"
  input: "dropout_4/sub_2/x"
  input: "dropout_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_4/sub_3"
  op: "Sub"
  input: "dropout_4/alpha"
  input: "dropout_4/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_4/Pow"
  op: "Pow"
  input: "dropout_4/sub_3"
  input: "dropout_4/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_2"
  op: "Mul"
  input: "dropout_4/sub_2"
  input: "dropout_4/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/add_2"
  op: "Add"
  input: "dropout_4/mul_2"
  input: "dropout_4/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_3"
  op: "Mul"
  input: "dropout_4/sub"
  input: "dropout_4/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/truediv"
  op: "RealDiv"
  input: "dropout_4/truediv/x"
  input: "dropout_4/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/Sqrt"
  op: "Sqrt"
  input: "dropout_4/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_4/mul_4"
  op: "Mul"
  input: "dropout_4/sub"
  input: "dropout_4/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/sub_4"
  op: "Sub"
  input: "dropout_4/sub_4/x"
  input: "dropout_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_5"
  op: "Mul"
  input: "dropout_4/sub_4"
  input: "dropout_4/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/add_3"
  op: "Add"
  input: "dropout_4/mul_4"
  input: "dropout_4/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_6"
  op: "Mul"
  input: "dropout_4/Sqrt"
  input: "dropout_4/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_4/sub_5"
  op: "Sub"
  input: "dropout_4/sub_5/x"
  input: "dropout_4/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/mul_7"
  op: "Mul"
  input: "dropout_4/Sqrt"
  input: "dropout_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/add_4"
  op: "Add"
  input: "dropout_4/mul_7"
  input: "dropout_4/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d/MaxPool"
  op: "MaxPool"
  input: "dropout_4/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "truncated_normal_18/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_18/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_18/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_18/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_18/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_18/mul"
  op: "Mul"
  input: "truncated_normal_18/TruncatedNormal"
  input: "truncated_normal_18/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_18"
  op: "Add"
  input: "truncated_normal_18/mul"
  input: "truncated_normal_18/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block1_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c1_w/Assign"
  op: "Assign"
  input: "stage2_block1_c1_w"
  input: "truncated_normal_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c1_w/read"
  op: "Identity"
  input: "stage2_block1_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_19/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_19/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_19/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_19/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_19/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_19/mul"
  op: "Mul"
  input: "truncated_normal_19/TruncatedNormal"
  input: "truncated_normal_19/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_19"
  op: "Add"
  input: "truncated_normal_19/mul"
  input: "truncated_normal_19/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block1_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c1_b/Assign"
  op: "Assign"
  input: "stage2_block1_c1_b"
  input: "truncated_normal_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c1_b/read"
  op: "Identity"
  input: "stage2_block1_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_9"
  op: "Conv2D"
  input: "max_pooling2d/MaxPool"
  input: "stage2_block1_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_13"
  op: "Add"
  input: "Conv2D_9"
  input: "stage2_block1_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/gamma"
    }
  }
}
node {
  name: "batch_normalization_8/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/gamma"
}
node {
  name: "batch_normalization_8/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/beta"
    }
  }
}
node {
  name: "batch_normalization_8/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/beta"
}
node {
  name: "batch_normalization_8/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/moving_mean"
}
node {
  name: "batch_normalization_8/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/moving_variance"
}
node {
  name: "batch_normalization_8/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_8/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_8/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_8/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/Const"
  op: "Const"
  input: "^batch_normalization_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_8/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_8/cond/ReadVariableOp"
  input: "batch_normalization_8/cond/ReadVariableOp_1"
  input: "batch_normalization_8/cond/Const"
  input: "batch_normalization_8/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_13"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_13"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_8/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_8/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_8/cond/ReadVariableOp_2"
  input: "batch_normalization_8/cond/ReadVariableOp_3"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_8/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_13"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_13"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/Merge"
  op: "Merge"
  input: "batch_normalization_8/cond/FusedBatchNorm_1"
  input: "batch_normalization_8/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_8/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_8/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_8/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_8/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_8/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_8/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_8/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_8/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_8/cond_1/Const_1"
  input: "batch_normalization_8/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_8/AssignMovingAvg/sub/x"
  input: "batch_normalization_8/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_8/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_8/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_8/AssignMovingAvg/sub_1"
  input: "batch_normalization_8/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_8/moving_mean"
  input: "^batch_normalization_8/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_8/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_8/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_8/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_8/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_8/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_8/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_8/moving_variance"
  input: "^batch_normalization_8/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_8"
  op: "Selu"
  input: "batch_normalization_8/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_20/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_20/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_20/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_20/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_20/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_20/mul"
  op: "Mul"
  input: "truncated_normal_20/TruncatedNormal"
  input: "truncated_normal_20/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_20"
  op: "Add"
  input: "truncated_normal_20/mul"
  input: "truncated_normal_20/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block1_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c2_w/Assign"
  op: "Assign"
  input: "stage2_block1_c2_w"
  input: "truncated_normal_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c2_w/read"
  op: "Identity"
  input: "stage2_block1_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_21/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_21/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_21/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_21/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_21/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_21/mul"
  op: "Mul"
  input: "truncated_normal_21/TruncatedNormal"
  input: "truncated_normal_21/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_21"
  op: "Add"
  input: "truncated_normal_21/mul"
  input: "truncated_normal_21/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block1_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c2_b/Assign"
  op: "Assign"
  input: "stage2_block1_c2_b"
  input: "truncated_normal_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c2_b/read"
  op: "Identity"
  input: "stage2_block1_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_10"
  op: "Conv2D"
  input: "Selu_8"
  input: "stage2_block1_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_14"
  op: "Add"
  input: "Conv2D_10"
  input: "stage2_block1_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/gamma"
    }
  }
}
node {
  name: "batch_normalization_9/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/gamma"
}
node {
  name: "batch_normalization_9/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/beta"
    }
  }
}
node {
  name: "batch_normalization_9/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/beta"
}
node {
  name: "batch_normalization_9/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/moving_mean"
}
node {
  name: "batch_normalization_9/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/moving_variance"
}
node {
  name: "batch_normalization_9/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_9/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_9/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_9/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/Const"
  op: "Const"
  input: "^batch_normalization_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_9/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_9/cond/ReadVariableOp"
  input: "batch_normalization_9/cond/ReadVariableOp_1"
  input: "batch_normalization_9/cond/Const"
  input: "batch_normalization_9/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_14"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_14"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_9/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_9/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_9/cond/ReadVariableOp_2"
  input: "batch_normalization_9/cond/ReadVariableOp_3"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_9/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_14"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_14"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/Merge"
  op: "Merge"
  input: "batch_normalization_9/cond/FusedBatchNorm_1"
  input: "batch_normalization_9/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_9/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_9/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_9/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_9/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_9/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_9/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_9/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_9/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_9/cond_1/Const_1"
  input: "batch_normalization_9/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_9/AssignMovingAvg/sub/x"
  input: "batch_normalization_9/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_9/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_9/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_9/AssignMovingAvg/sub_1"
  input: "batch_normalization_9/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_9/moving_mean"
  input: "^batch_normalization_9/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_9/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_9/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_9/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_9/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_9/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_9/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_9/moving_variance"
  input: "^batch_normalization_9/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_9"
  op: "Selu"
  input: "batch_normalization_9/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_15"
  op: "Add"
  input: "max_pooling2d/MaxPool"
  input: "Selu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "Add_15"
  input: "mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/sub"
  op: "Sub"
  input: "dropout_5/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_5/Shape"
  op: "Shape"
  input: "mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_5/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_5/random_uniform/sub"
  op: "Sub"
  input: "dropout_5/random_uniform/max"
  input: "dropout_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/random_uniform/mul"
  op: "Mul"
  input: "dropout_5/random_uniform/RandomUniform"
  input: "dropout_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/random_uniform"
  op: "Add"
  input: "dropout_5/random_uniform/mul"
  input: "dropout_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/add"
  op: "Add"
  input: "dropout_5/sub"
  input: "dropout_5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/Floor"
  op: "Floor"
  input: "dropout_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul"
  op: "Mul"
  input: "mul_4"
  input: "dropout_5/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/sub_1"
  op: "Sub"
  input: "dropout_5/sub_1/x"
  input: "dropout_5/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_1"
  op: "Mul"
  input: "dropout_5/alpha"
  input: "dropout_5/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/add_1"
  op: "Add"
  input: "dropout_5/mul"
  input: "dropout_5/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/sub_2"
  op: "Sub"
  input: "dropout_5/sub_2/x"
  input: "dropout_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_5/sub_3"
  op: "Sub"
  input: "dropout_5/alpha"
  input: "dropout_5/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_5/Pow"
  op: "Pow"
  input: "dropout_5/sub_3"
  input: "dropout_5/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_2"
  op: "Mul"
  input: "dropout_5/sub_2"
  input: "dropout_5/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/add_2"
  op: "Add"
  input: "dropout_5/mul_2"
  input: "dropout_5/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_3"
  op: "Mul"
  input: "dropout_5/sub"
  input: "dropout_5/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/truediv"
  op: "RealDiv"
  input: "dropout_5/truediv/x"
  input: "dropout_5/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/Sqrt"
  op: "Sqrt"
  input: "dropout_5/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_5/mul_4"
  op: "Mul"
  input: "dropout_5/sub"
  input: "dropout_5/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/sub_4"
  op: "Sub"
  input: "dropout_5/sub_4/x"
  input: "dropout_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_5"
  op: "Mul"
  input: "dropout_5/sub_4"
  input: "dropout_5/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/add_3"
  op: "Add"
  input: "dropout_5/mul_4"
  input: "dropout_5/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_6"
  op: "Mul"
  input: "dropout_5/Sqrt"
  input: "dropout_5/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_5/sub_5"
  op: "Sub"
  input: "dropout_5/sub_5/x"
  input: "dropout_5/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/mul_7"
  op: "Mul"
  input: "dropout_5/Sqrt"
  input: "dropout_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/add_4"
  op: "Add"
  input: "dropout_5/mul_7"
  input: "dropout_5/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_22/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_22/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_22/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_22/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_22/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_22/mul"
  op: "Mul"
  input: "truncated_normal_22/TruncatedNormal"
  input: "truncated_normal_22/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_22"
  op: "Add"
  input: "truncated_normal_22/mul"
  input: "truncated_normal_22/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block2_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c1_w/Assign"
  op: "Assign"
  input: "stage2_block2_c1_w"
  input: "truncated_normal_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c1_w/read"
  op: "Identity"
  input: "stage2_block2_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_23/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_23/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_23/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_23/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_23/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_23/mul"
  op: "Mul"
  input: "truncated_normal_23/TruncatedNormal"
  input: "truncated_normal_23/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_23"
  op: "Add"
  input: "truncated_normal_23/mul"
  input: "truncated_normal_23/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block2_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c1_b/Assign"
  op: "Assign"
  input: "stage2_block2_c1_b"
  input: "truncated_normal_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c1_b/read"
  op: "Identity"
  input: "stage2_block2_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_11"
  op: "Conv2D"
  input: "dropout_5/add_4"
  input: "stage2_block2_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_16"
  op: "Add"
  input: "Conv2D_11"
  input: "stage2_block2_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/gamma"
    }
  }
}
node {
  name: "batch_normalization_10/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/gamma"
}
node {
  name: "batch_normalization_10/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/beta"
    }
  }
}
node {
  name: "batch_normalization_10/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/beta"
}
node {
  name: "batch_normalization_10/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/moving_mean"
}
node {
  name: "batch_normalization_10/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/moving_variance"
}
node {
  name: "batch_normalization_10/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_10/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_10/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_10/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/Const"
  op: "Const"
  input: "^batch_normalization_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_10/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_10/cond/ReadVariableOp"
  input: "batch_normalization_10/cond/ReadVariableOp_1"
  input: "batch_normalization_10/cond/Const"
  input: "batch_normalization_10/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_16"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_16"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_10/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_10/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_10/cond/ReadVariableOp_2"
  input: "batch_normalization_10/cond/ReadVariableOp_3"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_10/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_16"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_16"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/Merge"
  op: "Merge"
  input: "batch_normalization_10/cond/FusedBatchNorm_1"
  input: "batch_normalization_10/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_10/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_10/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_10/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_10/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_10/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_10/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_10/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_10/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_10/cond_1/Const_1"
  input: "batch_normalization_10/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_10/AssignMovingAvg/sub/x"
  input: "batch_normalization_10/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_10/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_10/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_10/AssignMovingAvg/sub_1"
  input: "batch_normalization_10/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_10/moving_mean"
  input: "^batch_normalization_10/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_10/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_10/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_10/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_10/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_10/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_10/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_10/moving_variance"
  input: "^batch_normalization_10/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_10"
  op: "Selu"
  input: "batch_normalization_10/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_24/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_24/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_24/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_24/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_24/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_24/mul"
  op: "Mul"
  input: "truncated_normal_24/TruncatedNormal"
  input: "truncated_normal_24/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_24"
  op: "Add"
  input: "truncated_normal_24/mul"
  input: "truncated_normal_24/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block2_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c2_w/Assign"
  op: "Assign"
  input: "stage2_block2_c2_w"
  input: "truncated_normal_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c2_w/read"
  op: "Identity"
  input: "stage2_block2_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_25/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_25/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_25/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_25/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_25/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_25/mul"
  op: "Mul"
  input: "truncated_normal_25/TruncatedNormal"
  input: "truncated_normal_25/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_25"
  op: "Add"
  input: "truncated_normal_25/mul"
  input: "truncated_normal_25/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block2_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c2_b/Assign"
  op: "Assign"
  input: "stage2_block2_c2_b"
  input: "truncated_normal_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c2_b/read"
  op: "Identity"
  input: "stage2_block2_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_12"
  op: "Conv2D"
  input: "Selu_10"
  input: "stage2_block2_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_17"
  op: "Add"
  input: "Conv2D_12"
  input: "stage2_block2_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/gamma"
    }
  }
}
node {
  name: "batch_normalization_11/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/gamma"
}
node {
  name: "batch_normalization_11/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/beta"
    }
  }
}
node {
  name: "batch_normalization_11/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/beta"
}
node {
  name: "batch_normalization_11/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/moving_mean"
}
node {
  name: "batch_normalization_11/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/moving_variance"
}
node {
  name: "batch_normalization_11/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_11/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_11/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_11/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/Const"
  op: "Const"
  input: "^batch_normalization_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_11/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_11/cond/ReadVariableOp"
  input: "batch_normalization_11/cond/ReadVariableOp_1"
  input: "batch_normalization_11/cond/Const"
  input: "batch_normalization_11/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_17"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_17"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_11/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_11/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_11/cond/ReadVariableOp_2"
  input: "batch_normalization_11/cond/ReadVariableOp_3"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_11/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_17"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_17"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/Merge"
  op: "Merge"
  input: "batch_normalization_11/cond/FusedBatchNorm_1"
  input: "batch_normalization_11/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_11/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_11/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_11/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_11/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_11/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_11/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_11/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_11/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_11/cond_1/Const_1"
  input: "batch_normalization_11/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_11/AssignMovingAvg/sub/x"
  input: "batch_normalization_11/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_11/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_11/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_11/AssignMovingAvg/sub_1"
  input: "batch_normalization_11/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_11/moving_mean"
  input: "^batch_normalization_11/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_11/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_11/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_11/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_11/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_11/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_11/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_11/moving_variance"
  input: "^batch_normalization_11/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_11"
  op: "Selu"
  input: "batch_normalization_11/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_18"
  op: "Add"
  input: "dropout_5/add_4"
  input: "Selu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "Add_18"
  input: "mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/sub"
  op: "Sub"
  input: "dropout_6/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_6/Shape"
  op: "Shape"
  input: "mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_6/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_6/random_uniform/sub"
  op: "Sub"
  input: "dropout_6/random_uniform/max"
  input: "dropout_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/random_uniform/mul"
  op: "Mul"
  input: "dropout_6/random_uniform/RandomUniform"
  input: "dropout_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/random_uniform"
  op: "Add"
  input: "dropout_6/random_uniform/mul"
  input: "dropout_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/add"
  op: "Add"
  input: "dropout_6/sub"
  input: "dropout_6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/Floor"
  op: "Floor"
  input: "dropout_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul"
  op: "Mul"
  input: "mul_5"
  input: "dropout_6/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/sub_1"
  op: "Sub"
  input: "dropout_6/sub_1/x"
  input: "dropout_6/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_1"
  op: "Mul"
  input: "dropout_6/alpha"
  input: "dropout_6/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/add_1"
  op: "Add"
  input: "dropout_6/mul"
  input: "dropout_6/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/sub_2"
  op: "Sub"
  input: "dropout_6/sub_2/x"
  input: "dropout_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_6/sub_3"
  op: "Sub"
  input: "dropout_6/alpha"
  input: "dropout_6/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_6/Pow"
  op: "Pow"
  input: "dropout_6/sub_3"
  input: "dropout_6/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_2"
  op: "Mul"
  input: "dropout_6/sub_2"
  input: "dropout_6/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/add_2"
  op: "Add"
  input: "dropout_6/mul_2"
  input: "dropout_6/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_3"
  op: "Mul"
  input: "dropout_6/sub"
  input: "dropout_6/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/truediv"
  op: "RealDiv"
  input: "dropout_6/truediv/x"
  input: "dropout_6/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/Sqrt"
  op: "Sqrt"
  input: "dropout_6/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_6/mul_4"
  op: "Mul"
  input: "dropout_6/sub"
  input: "dropout_6/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/sub_4"
  op: "Sub"
  input: "dropout_6/sub_4/x"
  input: "dropout_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_5"
  op: "Mul"
  input: "dropout_6/sub_4"
  input: "dropout_6/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/add_3"
  op: "Add"
  input: "dropout_6/mul_4"
  input: "dropout_6/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_6"
  op: "Mul"
  input: "dropout_6/Sqrt"
  input: "dropout_6/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_6/sub_5"
  op: "Sub"
  input: "dropout_6/sub_5/x"
  input: "dropout_6/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/mul_7"
  op: "Mul"
  input: "dropout_6/Sqrt"
  input: "dropout_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/add_4"
  op: "Add"
  input: "dropout_6/mul_7"
  input: "dropout_6/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_26/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_26/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_26/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_26/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_26/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_26/mul"
  op: "Mul"
  input: "truncated_normal_26/TruncatedNormal"
  input: "truncated_normal_26/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_26"
  op: "Add"
  input: "truncated_normal_26/mul"
  input: "truncated_normal_26/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block3_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c1_w/Assign"
  op: "Assign"
  input: "stage2_block3_c1_w"
  input: "truncated_normal_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c1_w/read"
  op: "Identity"
  input: "stage2_block3_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_27/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_27/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_27/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_27/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_27/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_27/mul"
  op: "Mul"
  input: "truncated_normal_27/TruncatedNormal"
  input: "truncated_normal_27/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_27"
  op: "Add"
  input: "truncated_normal_27/mul"
  input: "truncated_normal_27/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block3_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c1_b/Assign"
  op: "Assign"
  input: "stage2_block3_c1_b"
  input: "truncated_normal_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c1_b/read"
  op: "Identity"
  input: "stage2_block3_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_13"
  op: "Conv2D"
  input: "dropout_6/add_4"
  input: "stage2_block3_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_19"
  op: "Add"
  input: "Conv2D_13"
  input: "stage2_block3_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/gamma"
    }
  }
}
node {
  name: "batch_normalization_12/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/gamma"
}
node {
  name: "batch_normalization_12/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/beta"
    }
  }
}
node {
  name: "batch_normalization_12/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/beta"
}
node {
  name: "batch_normalization_12/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/moving_mean"
}
node {
  name: "batch_normalization_12/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/moving_variance"
}
node {
  name: "batch_normalization_12/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_12/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_12/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_12/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/Const"
  op: "Const"
  input: "^batch_normalization_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_12/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_12/cond/ReadVariableOp"
  input: "batch_normalization_12/cond/ReadVariableOp_1"
  input: "batch_normalization_12/cond/Const"
  input: "batch_normalization_12/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_19"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_19"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_12/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_12/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_12/cond/ReadVariableOp_2"
  input: "batch_normalization_12/cond/ReadVariableOp_3"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_12/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_19"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_19"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/Merge"
  op: "Merge"
  input: "batch_normalization_12/cond/FusedBatchNorm_1"
  input: "batch_normalization_12/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_12/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_12/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_12/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_12/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_12/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_12/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_12/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_12/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_12/cond_1/Const_1"
  input: "batch_normalization_12/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_12/AssignMovingAvg/sub/x"
  input: "batch_normalization_12/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_12/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_12/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_12/AssignMovingAvg/sub_1"
  input: "batch_normalization_12/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_12/moving_mean"
  input: "^batch_normalization_12/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_12/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_12/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_12/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_12/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_12/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_12/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_12/moving_variance"
  input: "^batch_normalization_12/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_12"
  op: "Selu"
  input: "batch_normalization_12/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_28/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_28/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_28/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_28/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_28/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_28/mul"
  op: "Mul"
  input: "truncated_normal_28/TruncatedNormal"
  input: "truncated_normal_28/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_28"
  op: "Add"
  input: "truncated_normal_28/mul"
  input: "truncated_normal_28/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block3_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c2_w/Assign"
  op: "Assign"
  input: "stage2_block3_c2_w"
  input: "truncated_normal_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c2_w/read"
  op: "Identity"
  input: "stage2_block3_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_29/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_29/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_29/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_29/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_29/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_29/mul"
  op: "Mul"
  input: "truncated_normal_29/TruncatedNormal"
  input: "truncated_normal_29/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_29"
  op: "Add"
  input: "truncated_normal_29/mul"
  input: "truncated_normal_29/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block3_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c2_b/Assign"
  op: "Assign"
  input: "stage2_block3_c2_b"
  input: "truncated_normal_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c2_b/read"
  op: "Identity"
  input: "stage2_block3_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_14"
  op: "Conv2D"
  input: "Selu_12"
  input: "stage2_block3_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_20"
  op: "Add"
  input: "Conv2D_14"
  input: "stage2_block3_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/gamma"
    }
  }
}
node {
  name: "batch_normalization_13/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/gamma"
}
node {
  name: "batch_normalization_13/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/beta"
    }
  }
}
node {
  name: "batch_normalization_13/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/beta"
}
node {
  name: "batch_normalization_13/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/moving_mean"
}
node {
  name: "batch_normalization_13/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/moving_variance"
}
node {
  name: "batch_normalization_13/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_13/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_13/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_13/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/Const"
  op: "Const"
  input: "^batch_normalization_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_13/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_13/cond/ReadVariableOp"
  input: "batch_normalization_13/cond/ReadVariableOp_1"
  input: "batch_normalization_13/cond/Const"
  input: "batch_normalization_13/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_20"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_20"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_13/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_13/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_13/cond/ReadVariableOp_2"
  input: "batch_normalization_13/cond/ReadVariableOp_3"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_13/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_20"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_20"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/Merge"
  op: "Merge"
  input: "batch_normalization_13/cond/FusedBatchNorm_1"
  input: "batch_normalization_13/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_13/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_13/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_13/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_13/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_13/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_13/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_13/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_13/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_13/cond_1/Const_1"
  input: "batch_normalization_13/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_13/AssignMovingAvg/sub/x"
  input: "batch_normalization_13/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_13/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_13/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_13/AssignMovingAvg/sub_1"
  input: "batch_normalization_13/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_13/moving_mean"
  input: "^batch_normalization_13/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_13/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_13/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_13/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_13/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_13/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_13/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_13/moving_variance"
  input: "^batch_normalization_13/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_13"
  op: "Selu"
  input: "batch_normalization_13/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_21"
  op: "Add"
  input: "dropout_6/add_4"
  input: "Selu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "Add_21"
  input: "mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/sub"
  op: "Sub"
  input: "dropout_7/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_7/Shape"
  op: "Shape"
  input: "mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_7/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_7/random_uniform/sub"
  op: "Sub"
  input: "dropout_7/random_uniform/max"
  input: "dropout_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/random_uniform/mul"
  op: "Mul"
  input: "dropout_7/random_uniform/RandomUniform"
  input: "dropout_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/random_uniform"
  op: "Add"
  input: "dropout_7/random_uniform/mul"
  input: "dropout_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/add"
  op: "Add"
  input: "dropout_7/sub"
  input: "dropout_7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/Floor"
  op: "Floor"
  input: "dropout_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul"
  op: "Mul"
  input: "mul_6"
  input: "dropout_7/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/sub_1"
  op: "Sub"
  input: "dropout_7/sub_1/x"
  input: "dropout_7/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_1"
  op: "Mul"
  input: "dropout_7/alpha"
  input: "dropout_7/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/add_1"
  op: "Add"
  input: "dropout_7/mul"
  input: "dropout_7/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/sub_2"
  op: "Sub"
  input: "dropout_7/sub_2/x"
  input: "dropout_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_7/sub_3"
  op: "Sub"
  input: "dropout_7/alpha"
  input: "dropout_7/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_7/Pow"
  op: "Pow"
  input: "dropout_7/sub_3"
  input: "dropout_7/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_2"
  op: "Mul"
  input: "dropout_7/sub_2"
  input: "dropout_7/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/add_2"
  op: "Add"
  input: "dropout_7/mul_2"
  input: "dropout_7/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_3"
  op: "Mul"
  input: "dropout_7/sub"
  input: "dropout_7/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/truediv"
  op: "RealDiv"
  input: "dropout_7/truediv/x"
  input: "dropout_7/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/Sqrt"
  op: "Sqrt"
  input: "dropout_7/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_7/mul_4"
  op: "Mul"
  input: "dropout_7/sub"
  input: "dropout_7/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/sub_4"
  op: "Sub"
  input: "dropout_7/sub_4/x"
  input: "dropout_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_5"
  op: "Mul"
  input: "dropout_7/sub_4"
  input: "dropout_7/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/add_3"
  op: "Add"
  input: "dropout_7/mul_4"
  input: "dropout_7/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_6"
  op: "Mul"
  input: "dropout_7/Sqrt"
  input: "dropout_7/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_7/sub_5"
  op: "Sub"
  input: "dropout_7/sub_5/x"
  input: "dropout_7/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/mul_7"
  op: "Mul"
  input: "dropout_7/Sqrt"
  input: "dropout_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/add_4"
  op: "Add"
  input: "dropout_7/mul_7"
  input: "dropout_7/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_30/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_30/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_30/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_30/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_30/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_30/mul"
  op: "Mul"
  input: "truncated_normal_30/TruncatedNormal"
  input: "truncated_normal_30/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_30"
  op: "Add"
  input: "truncated_normal_30/mul"
  input: "truncated_normal_30/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block4_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c1_w/Assign"
  op: "Assign"
  input: "stage2_block4_c1_w"
  input: "truncated_normal_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c1_w/read"
  op: "Identity"
  input: "stage2_block4_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_31/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_31/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_31/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_31/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_31/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_31/mul"
  op: "Mul"
  input: "truncated_normal_31/TruncatedNormal"
  input: "truncated_normal_31/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_31"
  op: "Add"
  input: "truncated_normal_31/mul"
  input: "truncated_normal_31/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block4_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c1_b/Assign"
  op: "Assign"
  input: "stage2_block4_c1_b"
  input: "truncated_normal_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c1_b/read"
  op: "Identity"
  input: "stage2_block4_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_15"
  op: "Conv2D"
  input: "dropout_7/add_4"
  input: "stage2_block4_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_22"
  op: "Add"
  input: "Conv2D_15"
  input: "stage2_block4_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/gamma"
    }
  }
}
node {
  name: "batch_normalization_14/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/gamma"
}
node {
  name: "batch_normalization_14/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/beta"
    }
  }
}
node {
  name: "batch_normalization_14/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/beta"
}
node {
  name: "batch_normalization_14/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/moving_mean"
}
node {
  name: "batch_normalization_14/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/moving_variance"
}
node {
  name: "batch_normalization_14/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_14/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_14/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_14/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/Const"
  op: "Const"
  input: "^batch_normalization_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_14/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_14/cond/ReadVariableOp"
  input: "batch_normalization_14/cond/ReadVariableOp_1"
  input: "batch_normalization_14/cond/Const"
  input: "batch_normalization_14/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_22"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_22"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_14/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_14/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_14/cond/ReadVariableOp_2"
  input: "batch_normalization_14/cond/ReadVariableOp_3"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_14/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_22"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_22"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/Merge"
  op: "Merge"
  input: "batch_normalization_14/cond/FusedBatchNorm_1"
  input: "batch_normalization_14/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_14/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_14/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_14/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_14/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_14/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_14/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_14/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_14/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_14/cond_1/Const_1"
  input: "batch_normalization_14/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_14/AssignMovingAvg/sub/x"
  input: "batch_normalization_14/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_14/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_14/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_14/AssignMovingAvg/sub_1"
  input: "batch_normalization_14/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_14/moving_mean"
  input: "^batch_normalization_14/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_14/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_14/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_14/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_14/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_14/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_14/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_14/moving_variance"
  input: "^batch_normalization_14/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_14"
  op: "Selu"
  input: "batch_normalization_14/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_32/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_32/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_32/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_32/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_32/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_32/mul"
  op: "Mul"
  input: "truncated_normal_32/TruncatedNormal"
  input: "truncated_normal_32/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_32"
  op: "Add"
  input: "truncated_normal_32/mul"
  input: "truncated_normal_32/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block4_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c2_w/Assign"
  op: "Assign"
  input: "stage2_block4_c2_w"
  input: "truncated_normal_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c2_w/read"
  op: "Identity"
  input: "stage2_block4_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_33/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_33/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_33/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_33/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_33/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_33/mul"
  op: "Mul"
  input: "truncated_normal_33/TruncatedNormal"
  input: "truncated_normal_33/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_33"
  op: "Add"
  input: "truncated_normal_33/mul"
  input: "truncated_normal_33/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block4_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c2_b/Assign"
  op: "Assign"
  input: "stage2_block4_c2_b"
  input: "truncated_normal_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c2_b/read"
  op: "Identity"
  input: "stage2_block4_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_16"
  op: "Conv2D"
  input: "Selu_14"
  input: "stage2_block4_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_23"
  op: "Add"
  input: "Conv2D_16"
  input: "stage2_block4_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/gamma"
    }
  }
}
node {
  name: "batch_normalization_15/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/gamma"
}
node {
  name: "batch_normalization_15/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/beta"
    }
  }
}
node {
  name: "batch_normalization_15/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/beta"
}
node {
  name: "batch_normalization_15/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/moving_mean"
}
node {
  name: "batch_normalization_15/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/moving_variance"
}
node {
  name: "batch_normalization_15/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_15/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_15/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_15/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/Const"
  op: "Const"
  input: "^batch_normalization_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_15/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_15/cond/ReadVariableOp"
  input: "batch_normalization_15/cond/ReadVariableOp_1"
  input: "batch_normalization_15/cond/Const"
  input: "batch_normalization_15/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_23"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_23"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_15/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_15/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_15/cond/ReadVariableOp_2"
  input: "batch_normalization_15/cond/ReadVariableOp_3"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_15/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_23"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_23"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/Merge"
  op: "Merge"
  input: "batch_normalization_15/cond/FusedBatchNorm_1"
  input: "batch_normalization_15/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_15/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_15/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_15/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_15/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_15/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_15/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_15/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_15/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_15/cond_1/Const_1"
  input: "batch_normalization_15/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_15/AssignMovingAvg/sub/x"
  input: "batch_normalization_15/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_15/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_15/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_15/AssignMovingAvg/sub_1"
  input: "batch_normalization_15/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_15/moving_mean"
  input: "^batch_normalization_15/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_15/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_15/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_15/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_15/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_15/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_15/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_15/moving_variance"
  input: "^batch_normalization_15/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_15"
  op: "Selu"
  input: "batch_normalization_15/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_24"
  op: "Add"
  input: "dropout_7/add_4"
  input: "Selu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "Add_24"
  input: "mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/sub"
  op: "Sub"
  input: "dropout_8/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_8/Shape"
  op: "Shape"
  input: "mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_8/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_8/random_uniform/sub"
  op: "Sub"
  input: "dropout_8/random_uniform/max"
  input: "dropout_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/random_uniform/mul"
  op: "Mul"
  input: "dropout_8/random_uniform/RandomUniform"
  input: "dropout_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/random_uniform"
  op: "Add"
  input: "dropout_8/random_uniform/mul"
  input: "dropout_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/add"
  op: "Add"
  input: "dropout_8/sub"
  input: "dropout_8/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/Floor"
  op: "Floor"
  input: "dropout_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul"
  op: "Mul"
  input: "mul_7"
  input: "dropout_8/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/sub_1"
  op: "Sub"
  input: "dropout_8/sub_1/x"
  input: "dropout_8/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_1"
  op: "Mul"
  input: "dropout_8/alpha"
  input: "dropout_8/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/add_1"
  op: "Add"
  input: "dropout_8/mul"
  input: "dropout_8/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/sub_2"
  op: "Sub"
  input: "dropout_8/sub_2/x"
  input: "dropout_8/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_8/sub_3"
  op: "Sub"
  input: "dropout_8/alpha"
  input: "dropout_8/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_8/Pow"
  op: "Pow"
  input: "dropout_8/sub_3"
  input: "dropout_8/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_2"
  op: "Mul"
  input: "dropout_8/sub_2"
  input: "dropout_8/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/add_2"
  op: "Add"
  input: "dropout_8/mul_2"
  input: "dropout_8/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_3"
  op: "Mul"
  input: "dropout_8/sub"
  input: "dropout_8/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/truediv"
  op: "RealDiv"
  input: "dropout_8/truediv/x"
  input: "dropout_8/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/Sqrt"
  op: "Sqrt"
  input: "dropout_8/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_8/mul_4"
  op: "Mul"
  input: "dropout_8/sub"
  input: "dropout_8/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/sub_4"
  op: "Sub"
  input: "dropout_8/sub_4/x"
  input: "dropout_8/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_5"
  op: "Mul"
  input: "dropout_8/sub_4"
  input: "dropout_8/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/add_3"
  op: "Add"
  input: "dropout_8/mul_4"
  input: "dropout_8/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_6"
  op: "Mul"
  input: "dropout_8/Sqrt"
  input: "dropout_8/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_8/sub_5"
  op: "Sub"
  input: "dropout_8/sub_5/x"
  input: "dropout_8/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/mul_7"
  op: "Mul"
  input: "dropout_8/Sqrt"
  input: "dropout_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/add_4"
  op: "Add"
  input: "dropout_8/mul_7"
  input: "dropout_8/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "dropout_8/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "truncated_normal_34/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_34/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_34/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_34/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_34/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_34/mul"
  op: "Mul"
  input: "truncated_normal_34/TruncatedNormal"
  input: "truncated_normal_34/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_34"
  op: "Add"
  input: "truncated_normal_34/mul"
  input: "truncated_normal_34/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block1_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c1_w/Assign"
  op: "Assign"
  input: "stage3_block1_c1_w"
  input: "truncated_normal_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c1_w/read"
  op: "Identity"
  input: "stage3_block1_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_35/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_35/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_35/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_35/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_35/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_35/mul"
  op: "Mul"
  input: "truncated_normal_35/TruncatedNormal"
  input: "truncated_normal_35/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_35"
  op: "Add"
  input: "truncated_normal_35/mul"
  input: "truncated_normal_35/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block1_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c1_b/Assign"
  op: "Assign"
  input: "stage3_block1_c1_b"
  input: "truncated_normal_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c1_b/read"
  op: "Identity"
  input: "stage3_block1_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_17"
  op: "Conv2D"
  input: "max_pooling2d_1/MaxPool"
  input: "stage3_block1_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_25"
  op: "Add"
  input: "Conv2D_17"
  input: "stage3_block1_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/gamma"
    }
  }
}
node {
  name: "batch_normalization_16/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/gamma"
}
node {
  name: "batch_normalization_16/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/beta"
    }
  }
}
node {
  name: "batch_normalization_16/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/beta"
}
node {
  name: "batch_normalization_16/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/moving_mean"
}
node {
  name: "batch_normalization_16/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/moving_variance"
}
node {
  name: "batch_normalization_16/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_16/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_16/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_16/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/Const"
  op: "Const"
  input: "^batch_normalization_16/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_16/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_16/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_16/cond/ReadVariableOp"
  input: "batch_normalization_16/cond/ReadVariableOp_1"
  input: "batch_normalization_16/cond/Const"
  input: "batch_normalization_16/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_25"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_25"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_16/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_16/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_16/cond/ReadVariableOp_2"
  input: "batch_normalization_16/cond/ReadVariableOp_3"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_16/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_25"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_25"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/Merge"
  op: "Merge"
  input: "batch_normalization_16/cond/FusedBatchNorm_1"
  input: "batch_normalization_16/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_16/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_16/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_16/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_16/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_16/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_16/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_16/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_16/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_16/cond_1/Const_1"
  input: "batch_normalization_16/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_16/AssignMovingAvg/sub/x"
  input: "batch_normalization_16/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_16/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_16/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_16/AssignMovingAvg/sub_1"
  input: "batch_normalization_16/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_16/moving_mean"
  input: "^batch_normalization_16/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_16/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_16/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_16/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_16/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_16/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_16/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_16/moving_variance"
  input: "^batch_normalization_16/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_16"
  op: "Selu"
  input: "batch_normalization_16/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_36/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_36/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_36/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_36/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_36/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_36/mul"
  op: "Mul"
  input: "truncated_normal_36/TruncatedNormal"
  input: "truncated_normal_36/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_36"
  op: "Add"
  input: "truncated_normal_36/mul"
  input: "truncated_normal_36/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block1_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c2_w/Assign"
  op: "Assign"
  input: "stage3_block1_c2_w"
  input: "truncated_normal_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c2_w/read"
  op: "Identity"
  input: "stage3_block1_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_37/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_37/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_37/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_37/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_37/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_37/mul"
  op: "Mul"
  input: "truncated_normal_37/TruncatedNormal"
  input: "truncated_normal_37/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_37"
  op: "Add"
  input: "truncated_normal_37/mul"
  input: "truncated_normal_37/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block1_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c2_b/Assign"
  op: "Assign"
  input: "stage3_block1_c2_b"
  input: "truncated_normal_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c2_b/read"
  op: "Identity"
  input: "stage3_block1_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_18"
  op: "Conv2D"
  input: "Selu_16"
  input: "stage3_block1_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_26"
  op: "Add"
  input: "Conv2D_18"
  input: "stage3_block1_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/gamma"
    }
  }
}
node {
  name: "batch_normalization_17/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/gamma"
}
node {
  name: "batch_normalization_17/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/beta"
    }
  }
}
node {
  name: "batch_normalization_17/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/beta"
}
node {
  name: "batch_normalization_17/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/moving_mean"
}
node {
  name: "batch_normalization_17/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/moving_variance"
}
node {
  name: "batch_normalization_17/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_17/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_17/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_17/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/Const"
  op: "Const"
  input: "^batch_normalization_17/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_17/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_17/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_17/cond/ReadVariableOp"
  input: "batch_normalization_17/cond/ReadVariableOp_1"
  input: "batch_normalization_17/cond/Const"
  input: "batch_normalization_17/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_26"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_26"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_17/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_17/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_17/cond/ReadVariableOp_2"
  input: "batch_normalization_17/cond/ReadVariableOp_3"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_17/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_26"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_26"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/Merge"
  op: "Merge"
  input: "batch_normalization_17/cond/FusedBatchNorm_1"
  input: "batch_normalization_17/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_17/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_17/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_17/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_17/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_17/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_17/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_17/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_17/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_17/cond_1/Const_1"
  input: "batch_normalization_17/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_17/AssignMovingAvg/sub/x"
  input: "batch_normalization_17/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_17/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_17/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_17/AssignMovingAvg/sub_1"
  input: "batch_normalization_17/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_17/moving_mean"
  input: "^batch_normalization_17/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_17/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_17/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_17/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_17/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_17/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_17/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_17/moving_variance"
  input: "^batch_normalization_17/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_17"
  op: "Selu"
  input: "batch_normalization_17/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_27"
  op: "Add"
  input: "max_pooling2d_1/MaxPool"
  input: "Selu_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "Add_27"
  input: "mul_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/sub"
  op: "Sub"
  input: "dropout_9/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_9/Shape"
  op: "Shape"
  input: "mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_9/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_9/random_uniform/sub"
  op: "Sub"
  input: "dropout_9/random_uniform/max"
  input: "dropout_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/random_uniform/mul"
  op: "Mul"
  input: "dropout_9/random_uniform/RandomUniform"
  input: "dropout_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/random_uniform"
  op: "Add"
  input: "dropout_9/random_uniform/mul"
  input: "dropout_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/add"
  op: "Add"
  input: "dropout_9/sub"
  input: "dropout_9/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/Floor"
  op: "Floor"
  input: "dropout_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul"
  op: "Mul"
  input: "mul_8"
  input: "dropout_9/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/sub_1"
  op: "Sub"
  input: "dropout_9/sub_1/x"
  input: "dropout_9/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_1"
  op: "Mul"
  input: "dropout_9/alpha"
  input: "dropout_9/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/add_1"
  op: "Add"
  input: "dropout_9/mul"
  input: "dropout_9/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/sub_2"
  op: "Sub"
  input: "dropout_9/sub_2/x"
  input: "dropout_9/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_9/sub_3"
  op: "Sub"
  input: "dropout_9/alpha"
  input: "dropout_9/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_9/Pow"
  op: "Pow"
  input: "dropout_9/sub_3"
  input: "dropout_9/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_2"
  op: "Mul"
  input: "dropout_9/sub_2"
  input: "dropout_9/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/add_2"
  op: "Add"
  input: "dropout_9/mul_2"
  input: "dropout_9/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_3"
  op: "Mul"
  input: "dropout_9/sub"
  input: "dropout_9/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/truediv"
  op: "RealDiv"
  input: "dropout_9/truediv/x"
  input: "dropout_9/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/Sqrt"
  op: "Sqrt"
  input: "dropout_9/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_9/mul_4"
  op: "Mul"
  input: "dropout_9/sub"
  input: "dropout_9/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/sub_4"
  op: "Sub"
  input: "dropout_9/sub_4/x"
  input: "dropout_9/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_5"
  op: "Mul"
  input: "dropout_9/sub_4"
  input: "dropout_9/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/add_3"
  op: "Add"
  input: "dropout_9/mul_4"
  input: "dropout_9/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_6"
  op: "Mul"
  input: "dropout_9/Sqrt"
  input: "dropout_9/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_9/sub_5"
  op: "Sub"
  input: "dropout_9/sub_5/x"
  input: "dropout_9/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/mul_7"
  op: "Mul"
  input: "dropout_9/Sqrt"
  input: "dropout_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/add_4"
  op: "Add"
  input: "dropout_9/mul_7"
  input: "dropout_9/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_38/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_38/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_38/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_38/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_38/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_38/mul"
  op: "Mul"
  input: "truncated_normal_38/TruncatedNormal"
  input: "truncated_normal_38/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_38"
  op: "Add"
  input: "truncated_normal_38/mul"
  input: "truncated_normal_38/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block2_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c1_w/Assign"
  op: "Assign"
  input: "stage3_block2_c1_w"
  input: "truncated_normal_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c1_w/read"
  op: "Identity"
  input: "stage3_block2_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_39/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_39/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_39/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_39/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_39/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_39/mul"
  op: "Mul"
  input: "truncated_normal_39/TruncatedNormal"
  input: "truncated_normal_39/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_39"
  op: "Add"
  input: "truncated_normal_39/mul"
  input: "truncated_normal_39/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block2_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c1_b/Assign"
  op: "Assign"
  input: "stage3_block2_c1_b"
  input: "truncated_normal_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c1_b/read"
  op: "Identity"
  input: "stage3_block2_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_19"
  op: "Conv2D"
  input: "dropout_9/add_4"
  input: "stage3_block2_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_28"
  op: "Add"
  input: "Conv2D_19"
  input: "stage3_block2_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/gamma"
    }
  }
}
node {
  name: "batch_normalization_18/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/gamma"
}
node {
  name: "batch_normalization_18/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/beta"
    }
  }
}
node {
  name: "batch_normalization_18/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/beta"
}
node {
  name: "batch_normalization_18/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/moving_mean"
}
node {
  name: "batch_normalization_18/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/moving_variance"
}
node {
  name: "batch_normalization_18/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_18/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_18/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_18/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/Const"
  op: "Const"
  input: "^batch_normalization_18/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_18/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_18/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_18/cond/ReadVariableOp"
  input: "batch_normalization_18/cond/ReadVariableOp_1"
  input: "batch_normalization_18/cond/Const"
  input: "batch_normalization_18/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_28"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_28"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_18/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_18/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_18/cond/ReadVariableOp_2"
  input: "batch_normalization_18/cond/ReadVariableOp_3"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_18/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_28"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_28"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/Merge"
  op: "Merge"
  input: "batch_normalization_18/cond/FusedBatchNorm_1"
  input: "batch_normalization_18/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_18/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_18/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_18/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_18/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_18/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_18/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_18/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_18/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_18/cond_1/Const_1"
  input: "batch_normalization_18/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_18/AssignMovingAvg/sub/x"
  input: "batch_normalization_18/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_18/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_18/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_18/AssignMovingAvg/sub_1"
  input: "batch_normalization_18/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_18/moving_mean"
  input: "^batch_normalization_18/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_18/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_18/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_18/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_18/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_18/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_18/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_18/moving_variance"
  input: "^batch_normalization_18/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_18"
  op: "Selu"
  input: "batch_normalization_18/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_40/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_40/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_40/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_40/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_40/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_40/mul"
  op: "Mul"
  input: "truncated_normal_40/TruncatedNormal"
  input: "truncated_normal_40/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_40"
  op: "Add"
  input: "truncated_normal_40/mul"
  input: "truncated_normal_40/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block2_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c2_w/Assign"
  op: "Assign"
  input: "stage3_block2_c2_w"
  input: "truncated_normal_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c2_w/read"
  op: "Identity"
  input: "stage3_block2_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_41/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_41/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_41/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_41/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_41/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_41/mul"
  op: "Mul"
  input: "truncated_normal_41/TruncatedNormal"
  input: "truncated_normal_41/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_41"
  op: "Add"
  input: "truncated_normal_41/mul"
  input: "truncated_normal_41/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block2_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c2_b/Assign"
  op: "Assign"
  input: "stage3_block2_c2_b"
  input: "truncated_normal_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c2_b/read"
  op: "Identity"
  input: "stage3_block2_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_20"
  op: "Conv2D"
  input: "Selu_18"
  input: "stage3_block2_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_29"
  op: "Add"
  input: "Conv2D_20"
  input: "stage3_block2_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/gamma"
    }
  }
}
node {
  name: "batch_normalization_19/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/gamma"
}
node {
  name: "batch_normalization_19/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/beta"
    }
  }
}
node {
  name: "batch_normalization_19/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/beta"
}
node {
  name: "batch_normalization_19/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/moving_mean"
}
node {
  name: "batch_normalization_19/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/moving_variance"
}
node {
  name: "batch_normalization_19/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_19/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_19/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_19/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/Const"
  op: "Const"
  input: "^batch_normalization_19/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_19/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_19/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_19/cond/ReadVariableOp"
  input: "batch_normalization_19/cond/ReadVariableOp_1"
  input: "batch_normalization_19/cond/Const"
  input: "batch_normalization_19/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_29"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_29"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_19/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_19/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_19/cond/ReadVariableOp_2"
  input: "batch_normalization_19/cond/ReadVariableOp_3"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_19/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_29"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_29"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/Merge"
  op: "Merge"
  input: "batch_normalization_19/cond/FusedBatchNorm_1"
  input: "batch_normalization_19/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_19/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_19/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_19/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_19/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_19/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_19/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_19/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_19/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_19/cond_1/Const_1"
  input: "batch_normalization_19/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_19/AssignMovingAvg/sub/x"
  input: "batch_normalization_19/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_19/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_19/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_19/AssignMovingAvg/sub_1"
  input: "batch_normalization_19/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_19/moving_mean"
  input: "^batch_normalization_19/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_19/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_19/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_19/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_19/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_19/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_19/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_19/moving_variance"
  input: "^batch_normalization_19/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_19"
  op: "Selu"
  input: "batch_normalization_19/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_30"
  op: "Add"
  input: "dropout_9/add_4"
  input: "Selu_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_9"
  op: "Mul"
  input: "Add_30"
  input: "mul_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/sub"
  op: "Sub"
  input: "dropout_10/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_10/Shape"
  op: "Shape"
  input: "mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_10/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_10/random_uniform/sub"
  op: "Sub"
  input: "dropout_10/random_uniform/max"
  input: "dropout_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/random_uniform/mul"
  op: "Mul"
  input: "dropout_10/random_uniform/RandomUniform"
  input: "dropout_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/random_uniform"
  op: "Add"
  input: "dropout_10/random_uniform/mul"
  input: "dropout_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/add"
  op: "Add"
  input: "dropout_10/sub"
  input: "dropout_10/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/Floor"
  op: "Floor"
  input: "dropout_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul"
  op: "Mul"
  input: "mul_9"
  input: "dropout_10/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/sub_1"
  op: "Sub"
  input: "dropout_10/sub_1/x"
  input: "dropout_10/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_1"
  op: "Mul"
  input: "dropout_10/alpha"
  input: "dropout_10/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/add_1"
  op: "Add"
  input: "dropout_10/mul"
  input: "dropout_10/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/sub_2"
  op: "Sub"
  input: "dropout_10/sub_2/x"
  input: "dropout_10/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_10/sub_3"
  op: "Sub"
  input: "dropout_10/alpha"
  input: "dropout_10/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_10/Pow"
  op: "Pow"
  input: "dropout_10/sub_3"
  input: "dropout_10/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_2"
  op: "Mul"
  input: "dropout_10/sub_2"
  input: "dropout_10/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/add_2"
  op: "Add"
  input: "dropout_10/mul_2"
  input: "dropout_10/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_3"
  op: "Mul"
  input: "dropout_10/sub"
  input: "dropout_10/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/truediv"
  op: "RealDiv"
  input: "dropout_10/truediv/x"
  input: "dropout_10/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/Sqrt"
  op: "Sqrt"
  input: "dropout_10/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_10/mul_4"
  op: "Mul"
  input: "dropout_10/sub"
  input: "dropout_10/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/sub_4"
  op: "Sub"
  input: "dropout_10/sub_4/x"
  input: "dropout_10/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_5"
  op: "Mul"
  input: "dropout_10/sub_4"
  input: "dropout_10/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/add_3"
  op: "Add"
  input: "dropout_10/mul_4"
  input: "dropout_10/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_6"
  op: "Mul"
  input: "dropout_10/Sqrt"
  input: "dropout_10/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_10/sub_5"
  op: "Sub"
  input: "dropout_10/sub_5/x"
  input: "dropout_10/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/mul_7"
  op: "Mul"
  input: "dropout_10/Sqrt"
  input: "dropout_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/add_4"
  op: "Add"
  input: "dropout_10/mul_7"
  input: "dropout_10/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_42/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_42/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_42/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_42/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_42/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_42/mul"
  op: "Mul"
  input: "truncated_normal_42/TruncatedNormal"
  input: "truncated_normal_42/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_42"
  op: "Add"
  input: "truncated_normal_42/mul"
  input: "truncated_normal_42/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block3_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c1_w/Assign"
  op: "Assign"
  input: "stage3_block3_c1_w"
  input: "truncated_normal_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c1_w/read"
  op: "Identity"
  input: "stage3_block3_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_43/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_43/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_43/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_43/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_43/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_43/mul"
  op: "Mul"
  input: "truncated_normal_43/TruncatedNormal"
  input: "truncated_normal_43/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_43"
  op: "Add"
  input: "truncated_normal_43/mul"
  input: "truncated_normal_43/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block3_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c1_b/Assign"
  op: "Assign"
  input: "stage3_block3_c1_b"
  input: "truncated_normal_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c1_b/read"
  op: "Identity"
  input: "stage3_block3_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_21"
  op: "Conv2D"
  input: "dropout_10/add_4"
  input: "stage3_block3_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_31"
  op: "Add"
  input: "Conv2D_21"
  input: "stage3_block3_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/gamma"
    }
  }
}
node {
  name: "batch_normalization_20/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/gamma"
}
node {
  name: "batch_normalization_20/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/beta"
    }
  }
}
node {
  name: "batch_normalization_20/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/beta"
}
node {
  name: "batch_normalization_20/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/moving_mean"
}
node {
  name: "batch_normalization_20/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/moving_variance"
}
node {
  name: "batch_normalization_20/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_20/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_20/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_20/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/Const"
  op: "Const"
  input: "^batch_normalization_20/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_20/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_20/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_20/cond/ReadVariableOp"
  input: "batch_normalization_20/cond/ReadVariableOp_1"
  input: "batch_normalization_20/cond/Const"
  input: "batch_normalization_20/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_31"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_31"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_20/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_20/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_20/cond/ReadVariableOp_2"
  input: "batch_normalization_20/cond/ReadVariableOp_3"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_20/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_31"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_31"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/Merge"
  op: "Merge"
  input: "batch_normalization_20/cond/FusedBatchNorm_1"
  input: "batch_normalization_20/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_20/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_20/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_20/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_20/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_20/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_20/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_20/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_20/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_20/cond_1/Const_1"
  input: "batch_normalization_20/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_20/AssignMovingAvg/sub/x"
  input: "batch_normalization_20/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_20/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_20/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_20/AssignMovingAvg/sub_1"
  input: "batch_normalization_20/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_20/moving_mean"
  input: "^batch_normalization_20/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_20/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_20/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_20/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_20/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_20/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_20/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_20/moving_variance"
  input: "^batch_normalization_20/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_20"
  op: "Selu"
  input: "batch_normalization_20/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_44/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_44/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_44/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_44/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_44/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_44/mul"
  op: "Mul"
  input: "truncated_normal_44/TruncatedNormal"
  input: "truncated_normal_44/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_44"
  op: "Add"
  input: "truncated_normal_44/mul"
  input: "truncated_normal_44/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block3_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c2_w/Assign"
  op: "Assign"
  input: "stage3_block3_c2_w"
  input: "truncated_normal_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c2_w/read"
  op: "Identity"
  input: "stage3_block3_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_45/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_45/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_45/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_45/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_45/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_45/mul"
  op: "Mul"
  input: "truncated_normal_45/TruncatedNormal"
  input: "truncated_normal_45/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_45"
  op: "Add"
  input: "truncated_normal_45/mul"
  input: "truncated_normal_45/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block3_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c2_b/Assign"
  op: "Assign"
  input: "stage3_block3_c2_b"
  input: "truncated_normal_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c2_b/read"
  op: "Identity"
  input: "stage3_block3_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_22"
  op: "Conv2D"
  input: "Selu_20"
  input: "stage3_block3_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_32"
  op: "Add"
  input: "Conv2D_22"
  input: "stage3_block3_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/gamma"
    }
  }
}
node {
  name: "batch_normalization_21/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/gamma"
}
node {
  name: "batch_normalization_21/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/beta"
    }
  }
}
node {
  name: "batch_normalization_21/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/beta"
}
node {
  name: "batch_normalization_21/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/moving_mean"
}
node {
  name: "batch_normalization_21/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/moving_variance"
}
node {
  name: "batch_normalization_21/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_21/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_21/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_21/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/Const"
  op: "Const"
  input: "^batch_normalization_21/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_21/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_21/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_21/cond/ReadVariableOp"
  input: "batch_normalization_21/cond/ReadVariableOp_1"
  input: "batch_normalization_21/cond/Const"
  input: "batch_normalization_21/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_32"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_32"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_21/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_21/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_21/cond/ReadVariableOp_2"
  input: "batch_normalization_21/cond/ReadVariableOp_3"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_21/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_32"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_32"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/Merge"
  op: "Merge"
  input: "batch_normalization_21/cond/FusedBatchNorm_1"
  input: "batch_normalization_21/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_21/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_21/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_21/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_21/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_21/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_21/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_21/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_21/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_21/cond_1/Const_1"
  input: "batch_normalization_21/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_21/AssignMovingAvg/sub/x"
  input: "batch_normalization_21/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_21/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_21/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_21/AssignMovingAvg/sub_1"
  input: "batch_normalization_21/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_21/moving_mean"
  input: "^batch_normalization_21/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_21/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_21/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_21/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_21/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_21/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_21/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_21/moving_variance"
  input: "^batch_normalization_21/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_21"
  op: "Selu"
  input: "batch_normalization_21/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_33"
  op: "Add"
  input: "dropout_10/add_4"
  input: "Selu_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_10"
  op: "Mul"
  input: "Add_33"
  input: "mul_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/sub"
  op: "Sub"
  input: "dropout_11/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_11/Shape"
  op: "Shape"
  input: "mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_11/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_11/random_uniform/sub"
  op: "Sub"
  input: "dropout_11/random_uniform/max"
  input: "dropout_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/random_uniform/mul"
  op: "Mul"
  input: "dropout_11/random_uniform/RandomUniform"
  input: "dropout_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/random_uniform"
  op: "Add"
  input: "dropout_11/random_uniform/mul"
  input: "dropout_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/add"
  op: "Add"
  input: "dropout_11/sub"
  input: "dropout_11/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/Floor"
  op: "Floor"
  input: "dropout_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul"
  op: "Mul"
  input: "mul_10"
  input: "dropout_11/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/sub_1"
  op: "Sub"
  input: "dropout_11/sub_1/x"
  input: "dropout_11/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_1"
  op: "Mul"
  input: "dropout_11/alpha"
  input: "dropout_11/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/add_1"
  op: "Add"
  input: "dropout_11/mul"
  input: "dropout_11/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/sub_2"
  op: "Sub"
  input: "dropout_11/sub_2/x"
  input: "dropout_11/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_11/sub_3"
  op: "Sub"
  input: "dropout_11/alpha"
  input: "dropout_11/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_11/Pow"
  op: "Pow"
  input: "dropout_11/sub_3"
  input: "dropout_11/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_2"
  op: "Mul"
  input: "dropout_11/sub_2"
  input: "dropout_11/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/add_2"
  op: "Add"
  input: "dropout_11/mul_2"
  input: "dropout_11/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_3"
  op: "Mul"
  input: "dropout_11/sub"
  input: "dropout_11/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/truediv"
  op: "RealDiv"
  input: "dropout_11/truediv/x"
  input: "dropout_11/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/Sqrt"
  op: "Sqrt"
  input: "dropout_11/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_11/mul_4"
  op: "Mul"
  input: "dropout_11/sub"
  input: "dropout_11/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/sub_4"
  op: "Sub"
  input: "dropout_11/sub_4/x"
  input: "dropout_11/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_5"
  op: "Mul"
  input: "dropout_11/sub_4"
  input: "dropout_11/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/add_3"
  op: "Add"
  input: "dropout_11/mul_4"
  input: "dropout_11/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_6"
  op: "Mul"
  input: "dropout_11/Sqrt"
  input: "dropout_11/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_11/sub_5"
  op: "Sub"
  input: "dropout_11/sub_5/x"
  input: "dropout_11/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/mul_7"
  op: "Mul"
  input: "dropout_11/Sqrt"
  input: "dropout_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/add_4"
  op: "Add"
  input: "dropout_11/mul_7"
  input: "dropout_11/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_46/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_46/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_46/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_46/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_46/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_46/mul"
  op: "Mul"
  input: "truncated_normal_46/TruncatedNormal"
  input: "truncated_normal_46/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_46"
  op: "Add"
  input: "truncated_normal_46/mul"
  input: "truncated_normal_46/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block4_c1_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c1_w/Assign"
  op: "Assign"
  input: "stage3_block4_c1_w"
  input: "truncated_normal_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c1_w/read"
  op: "Identity"
  input: "stage3_block4_c1_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
}
node {
  name: "truncated_normal_47/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_47/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_47/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_47/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_47/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_47/mul"
  op: "Mul"
  input: "truncated_normal_47/TruncatedNormal"
  input: "truncated_normal_47/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_47"
  op: "Add"
  input: "truncated_normal_47/mul"
  input: "truncated_normal_47/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block4_c1_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c1_b/Assign"
  op: "Assign"
  input: "stage3_block4_c1_b"
  input: "truncated_normal_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c1_b/read"
  op: "Identity"
  input: "stage3_block4_c1_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
}
node {
  name: "Conv2D_23"
  op: "Conv2D"
  input: "dropout_11/add_4"
  input: "stage3_block4_c1_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_34"
  op: "Add"
  input: "Conv2D_23"
  input: "stage3_block4_c1_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/gamma"
    }
  }
}
node {
  name: "batch_normalization_22/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/gamma"
}
node {
  name: "batch_normalization_22/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/beta"
    }
  }
}
node {
  name: "batch_normalization_22/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/beta"
}
node {
  name: "batch_normalization_22/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/moving_mean"
}
node {
  name: "batch_normalization_22/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/moving_variance"
}
node {
  name: "batch_normalization_22/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_22/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_22/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_22/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/Const"
  op: "Const"
  input: "^batch_normalization_22/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_22/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_22/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_22/cond/ReadVariableOp"
  input: "batch_normalization_22/cond/ReadVariableOp_1"
  input: "batch_normalization_22/cond/Const"
  input: "batch_normalization_22/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_34"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_34"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_22/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_22/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_22/cond/ReadVariableOp_2"
  input: "batch_normalization_22/cond/ReadVariableOp_3"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_22/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_34"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_34"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/Merge"
  op: "Merge"
  input: "batch_normalization_22/cond/FusedBatchNorm_1"
  input: "batch_normalization_22/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_22/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_22/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_22/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_22/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_22/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_22/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_22/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_22/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_22/cond_1/Const_1"
  input: "batch_normalization_22/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_22/AssignMovingAvg/sub/x"
  input: "batch_normalization_22/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_22/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_22/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_22/AssignMovingAvg/sub_1"
  input: "batch_normalization_22/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_22/moving_mean"
  input: "^batch_normalization_22/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_22/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_22/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_22/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_22/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_22/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_22/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_22/moving_variance"
  input: "^batch_normalization_22/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_22"
  op: "Selu"
  input: "batch_normalization_22/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_48/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_48/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_48/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_48/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_48/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_48/mul"
  op: "Mul"
  input: "truncated_normal_48/TruncatedNormal"
  input: "truncated_normal_48/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_48"
  op: "Add"
  input: "truncated_normal_48/mul"
  input: "truncated_normal_48/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block4_c2_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c2_w/Assign"
  op: "Assign"
  input: "stage3_block4_c2_w"
  input: "truncated_normal_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c2_w/read"
  op: "Identity"
  input: "stage3_block4_c2_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
}
node {
  name: "truncated_normal_49/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "truncated_normal_49/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_49/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "truncated_normal_49/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_49/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_49/mul"
  op: "Mul"
  input: "truncated_normal_49/TruncatedNormal"
  input: "truncated_normal_49/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_49"
  op: "Add"
  input: "truncated_normal_49/mul"
  input: "truncated_normal_49/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block4_c2_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c2_b/Assign"
  op: "Assign"
  input: "stage3_block4_c2_b"
  input: "truncated_normal_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c2_b/read"
  op: "Identity"
  input: "stage3_block4_c2_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
}
node {
  name: "Conv2D_24"
  op: "Conv2D"
  input: "Selu_22"
  input: "stage3_block4_c2_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_35"
  op: "Add"
  input: "Conv2D_24"
  input: "stage3_block4_c2_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/gamma"
    }
  }
}
node {
  name: "batch_normalization_23/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/gamma"
}
node {
  name: "batch_normalization_23/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/beta"
    }
  }
}
node {
  name: "batch_normalization_23/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/beta"
}
node {
  name: "batch_normalization_23/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/moving_mean"
}
node {
  name: "batch_normalization_23/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/moving_variance"
}
node {
  name: "batch_normalization_23/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_23/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_23/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_23/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/Const"
  op: "Const"
  input: "^batch_normalization_23/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/Const_1"
  op: "Const"
  input: "^batch_normalization_23/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_23/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_23/cond/ReadVariableOp"
  input: "batch_normalization_23/cond/ReadVariableOp_1"
  input: "batch_normalization_23/cond/Const"
  input: "batch_normalization_23/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "add_35"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_35"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_23/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "batch_normalization_23/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_23/cond/ReadVariableOp_2"
  input: "batch_normalization_23/cond/ReadVariableOp_3"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_23/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "add_35"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_35"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/Merge"
  op: "Merge"
  input: "batch_normalization_23/cond/FusedBatchNorm_1"
  input: "batch_normalization_23/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/Merge_1"
  op: "Merge"
  input: "batch_normalization_23/cond/FusedBatchNorm_1:1"
  input: "batch_normalization_23/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/Merge_2"
  op: "Merge"
  input: "batch_normalization_23/cond/FusedBatchNorm_1:2"
  input: "batch_normalization_23/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/switch_t"
  op: "Identity"
  input: "batch_normalization_23/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/switch_f"
  op: "Identity"
  input: "batch_normalization_23/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/Const"
  op: "Const"
  input: "^batch_normalization_23/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/Const_1"
  op: "Const"
  input: "^batch_normalization_23/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond_1/Merge"
  op: "Merge"
  input: "batch_normalization_23/cond_1/Const_1"
  input: "batch_normalization_23/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_23/AssignMovingAvg/sub/x"
  input: "batch_normalization_23/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_23/AssignMovingAvg/ReadVariableOp"
  input: "batch_normalization_23/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_23/AssignMovingAvg/sub_1"
  input: "batch_normalization_23/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_23/moving_mean"
  input: "^batch_normalization_23/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_23/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_23/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_23/AssignMovingAvg_1/ReadVariableOp"
  input: "batch_normalization_23/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_23/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_23/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_23/moving_variance"
  input: "^batch_normalization_23/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Selu_23"
  op: "Selu"
  input: "batch_normalization_23/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add_36"
  op: "Add"
  input: "dropout_11/add_4"
  input: "Selu_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_11"
  op: "Mul"
  input: "Add_36"
  input: "mul_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/sub"
  op: "Sub"
  input: "dropout_12/sub/x"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7580993175506592
      }
    }
  }
}
node {
  name: "dropout_12/Shape"
  op: "Shape"
  input: "mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_12/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_12/random_uniform/sub"
  op: "Sub"
  input: "dropout_12/random_uniform/max"
  input: "dropout_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/random_uniform/mul"
  op: "Mul"
  input: "dropout_12/random_uniform/RandomUniform"
  input: "dropout_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/random_uniform"
  op: "Add"
  input: "dropout_12/random_uniform/mul"
  input: "dropout_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/add"
  op: "Add"
  input: "dropout_12/sub"
  input: "dropout_12/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/Floor"
  op: "Floor"
  input: "dropout_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul"
  op: "Mul"
  input: "mul_11"
  input: "dropout_12/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/sub_1"
  op: "Sub"
  input: "dropout_12/sub_1/x"
  input: "dropout_12/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_1"
  op: "Mul"
  input: "dropout_12/alpha"
  input: "dropout_12/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/add_1"
  op: "Add"
  input: "dropout_12/mul"
  input: "dropout_12/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/sub_2"
  op: "Sub"
  input: "dropout_12/sub_2/x"
  input: "dropout_12/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_12/sub_3"
  op: "Sub"
  input: "dropout_12/alpha"
  input: "dropout_12/sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dropout_12/Pow"
  op: "Pow"
  input: "dropout_12/sub_3"
  input: "dropout_12/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_2"
  op: "Mul"
  input: "dropout_12/sub_2"
  input: "dropout_12/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/add_2"
  op: "Add"
  input: "dropout_12/mul_2"
  input: "dropout_12/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_3"
  op: "Mul"
  input: "dropout_12/sub"
  input: "dropout_12/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/truediv"
  op: "RealDiv"
  input: "dropout_12/truediv/x"
  input: "dropout_12/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/Sqrt"
  op: "Sqrt"
  input: "dropout_12/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_12/mul_4"
  op: "Mul"
  input: "dropout_12/sub"
  input: "dropout_12/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/sub_4"
  op: "Sub"
  input: "dropout_12/sub_4/x"
  input: "dropout_12/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_5"
  op: "Mul"
  input: "dropout_12/sub_4"
  input: "dropout_12/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/add_3"
  op: "Add"
  input: "dropout_12/mul_4"
  input: "dropout_12/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_6"
  op: "Mul"
  input: "dropout_12/Sqrt"
  input: "dropout_12/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_12/sub_5"
  op: "Sub"
  input: "dropout_12/sub_5/x"
  input: "dropout_12/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/mul_7"
  op: "Mul"
  input: "dropout_12/Sqrt"
  input: "dropout_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/add_4"
  op: "Add"
  input: "dropout_12/mul_7"
  input: "dropout_12/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d/Mean"
  op: "Mean"
  input: "dropout_12/add_4"
  input: "global_average_pooling2d/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truncated_normal_50/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_50/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_50/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_50/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_50/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_50/mul"
  op: "Mul"
  input: "truncated_normal_50/TruncatedNormal"
  input: "truncated_normal_50/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_50"
  op: "Add"
  input: "truncated_normal_50/mul"
  input: "truncated_normal_50/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_fc_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_fc_w/Assign"
  op: "Assign"
  input: "output_fc_w"
  input: "truncated_normal_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_fc_w/read"
  op: "Identity"
  input: "output_fc_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
}
node {
  name: "truncated_normal_51/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "truncated_normal_51/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_51/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_51/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_51/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_51/mul"
  op: "Mul"
  input: "truncated_normal_51/TruncatedNormal"
  input: "truncated_normal_51/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_51"
  op: "Add"
  input: "truncated_normal_51/mul"
  input: "truncated_normal_51/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_fc_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_fc_b/Assign"
  op: "Assign"
  input: "output_fc_b"
  input: "truncated_normal_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_fc_b/read"
  op: "Identity"
  input: "output_fc_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "global_average_pooling2d/Mean"
  input: "output_fc_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_37"
  op: "Add"
  input: "MatMul"
  input: "output_fc_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_groundtruth"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "input_groundtruth"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_37"
  input: "input_groundtruth"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/input_learning_rate"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "train/gradients/Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/add_37_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_37_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/add_37_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_37_grad/Shape"
  input: "train/gradients/add_37_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_37_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "train/gradients/add_37_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_37_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_37_grad/Sum"
  input: "train/gradients/add_37_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_37_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "train/gradients/add_37_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_37_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_37_grad/Sum_1"
  input: "train/gradients/add_37_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_37_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_37_grad/Reshape"
  input: "^train/gradients/add_37_grad/Reshape_1"
}
node {
  name: "train/gradients/add_37_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_37_grad/Reshape"
  input: "^train/gradients/add_37_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_37_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_37_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_37_grad/Reshape_1"
  input: "^train/gradients/add_37_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_37_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/add_37_grad/tuple/control_dependency"
  input: "output_fc_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "global_average_pooling2d/Mean"
  input: "train/gradients/add_37_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul_1"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Shape"
  op: "Shape"
  input: "dropout_12/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/add"
  op: "Add"
  input: "global_average_pooling2d/Mean/reduction_indices"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/mod"
  op: "FloorMod"
  input: "train/gradients/global_average_pooling2d/Mean_grad/add"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/range"
  op: "Range"
  input: "train/gradients/global_average_pooling2d/Mean_grad/range/start"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Size"
  input: "train/gradients/global_average_pooling2d/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Fill"
  op: "Fill"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Shape_1"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/global_average_pooling2d/Mean_grad/range"
  input: "train/gradients/global_average_pooling2d/Mean_grad/mod"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Shape"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/global_average_pooling2d/Mean_grad/DynamicStitch"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Shape"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/global_average_pooling2d/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/global_average_pooling2d/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Reshape"
  input: "train/gradients/global_average_pooling2d/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Shape_2"
  op: "Shape"
  input: "dropout_12/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Shape_3"
  op: "Shape"
  input: "global_average_pooling2d/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Shape_2"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Shape_3"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Prod_1"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Prod"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/global_average_pooling2d/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/global_average_pooling2d/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Tile"
  input: "train/gradients/global_average_pooling2d/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_12/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_12/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_12/add_4_grad/Shape"
  input: "train/gradients/dropout_12/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/global_average_pooling2d/Mean_grad/truediv"
  input: "train/gradients/dropout_12/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_12/add_4_grad/Sum"
  input: "train/gradients/dropout_12/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/global_average_pooling2d/Mean_grad/truediv"
  input: "train/gradients/dropout_12/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_12/add_4_grad/Sum_1"
  input: "train/gradients/dropout_12/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_12/add_4_grad/Reshape"
  input: "^train/gradients/dropout_12/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_12/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_12/add_4_grad/Reshape"
  input: "^train/gradients/dropout_12/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_12/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_12/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_12/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_12/mul_7_grad/Shape"
  input: "train/gradients/dropout_12/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_12/add_4_grad/tuple/control_dependency"
  input: "dropout_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_12/mul_7_grad/Mul"
  input: "train/gradients/dropout_12/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_12/mul_7_grad/Sum"
  input: "train/gradients/dropout_12/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_12/Sqrt"
  input: "train/gradients/dropout_12/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_12/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_12/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_12/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_12/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_12/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_12/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_12/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_12/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_12/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_12/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_12/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_12/add_1_grad/Shape"
  input: "train/gradients/dropout_12/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_12/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_12/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_12/add_1_grad/Sum"
  input: "train/gradients/dropout_12/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_12/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_12/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_12/add_1_grad/Sum_1"
  input: "train/gradients/dropout_12/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_12/add_1_grad/Reshape"
  input: "^train/gradients/dropout_12/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_12/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_12/add_1_grad/Reshape"
  input: "^train/gradients/dropout_12/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_12/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_12/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Shape"
  op: "Shape"
  input: "mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_12/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_12/mul_grad/Shape"
  input: "train/gradients/dropout_12/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_12/add_1_grad/tuple/control_dependency"
  input: "dropout_12/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_12/mul_grad/Mul"
  input: "train/gradients/dropout_12/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_12/mul_grad/Sum"
  input: "train/gradients/dropout_12/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_11"
  input: "train/gradients/dropout_12/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_12/mul_grad/Mul_1"
  input: "train/gradients/dropout_12/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_12/mul_grad/Sum_1"
  input: "train/gradients/dropout_12/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_12/mul_grad/Reshape"
  input: "^train/gradients/dropout_12/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_12/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_12/mul_grad/Reshape"
  input: "^train/gradients/dropout_12/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_12/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_12/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_12/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_12/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Shape"
  op: "Shape"
  input: "Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_11_grad/Shape"
  input: "train/gradients/mul_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_12/mul_grad/tuple/control_dependency"
  input: "mul_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_11_grad/Mul"
  input: "train/gradients/mul_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_11_grad/Sum"
  input: "train/gradients/mul_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Mul_1"
  op: "Mul"
  input: "Add_36"
  input: "train/gradients/dropout_12/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_11_grad/Mul_1"
  input: "train/gradients/mul_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_11_grad/Sum_1"
  input: "train/gradients/mul_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_11_grad/Reshape"
  input: "^train/gradients/mul_11_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_11_grad/Reshape"
  input: "^train/gradients/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_11_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_11_grad/Reshape_1"
  input: "^train/gradients/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_11_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/Shape"
  op: "Shape"
  input: "dropout_11/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/Shape_1"
  op: "Shape"
  input: "Selu_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_36_grad/Shape"
  input: "train/gradients/Add_36_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_11_grad/tuple/control_dependency"
  input: "train/gradients/Add_36_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_36_grad/Sum"
  input: "train/gradients/Add_36_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_11_grad/tuple/control_dependency"
  input: "train/gradients/Add_36_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_36_grad/Sum_1"
  input: "train/gradients/Add_36_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_36_grad/Reshape"
  input: "^train/gradients/Add_36_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_36_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_36_grad/Reshape"
  input: "^train/gradients/Add_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_36_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_36_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_36_grad/Reshape_1"
  input: "^train/gradients/Add_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_36_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_23_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_36_grad/tuple/control_dependency_1"
  input: "Selu_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_23_grad/SeluGrad"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_23_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_23/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_23/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_23/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_23_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_23/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_23_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_23/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_23/cond/ReadVariableOp_2"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_23/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "batch_normalization_23/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_23/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_23/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_23/cond/ReadVariableOp"
  input: "batch_normalization_23/cond/FusedBatchNorm:3"
  input: "batch_normalization_23/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch"
  op: "Switch"
  input: "add_35"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity"
  op: "Identity"
  input: "train/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_1"
  op: "Shape"
  input: "train/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros/Const"
  op: "Const"
  input: "^train/gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros"
  op: "Fill"
  input: "train/gradients/Shape_1"
  input: "train/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_1"
  op: "Switch"
  input: "add_35"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_1"
  op: "Identity"
  input: "train/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_2"
  op: "Shape"
  input: "train/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_1/Const"
  op: "Const"
  input: "^train/gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_1"
  op: "Fill"
  input: "train/gradients/Shape_2"
  input: "train/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_1"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_2"
  op: "Switch"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_2"
  op: "Identity"
  input: "train/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape"
  op: "VariableShape"
  input: "train/gradients/Switch_2:1"
  input: "^train/gradients/Identity_2"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_2/Const"
  op: "Const"
  input: "^train/gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_2"
  op: "Fill"
  input: "train/gradients/VariableShape"
  input: "train/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_3"
  op: "Switch"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_3"
  op: "Identity"
  input: "train/gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_1"
  op: "VariableShape"
  input: "train/gradients/Switch_3:1"
  input: "^train/gradients/Identity_3"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_3/Const"
  op: "Const"
  input: "^train/gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_3"
  op: "Fill"
  input: "train/gradients/VariableShape_1"
  input: "train/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_35_grad/Shape"
  op: "Shape"
  input: "Conv2D_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_35_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_35_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_35_grad/Shape"
  input: "train/gradients/add_35_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_35_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN"
  input: "train/gradients/add_35_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_35_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_35_grad/Sum"
  input: "train/gradients/add_35_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_35_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN"
  input: "train/gradients/add_35_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_35_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_35_grad/Sum_1"
  input: "train/gradients/add_35_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_35_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_35_grad/Reshape"
  input: "^train/gradients/add_35_grad/Reshape_1"
}
node {
  name: "train/gradients/add_35_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_35_grad/Reshape"
  input: "^train/gradients/add_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_35_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_35_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_35_grad/Reshape_1"
  input: "^train/gradients/add_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_35_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_4"
  op: "Switch"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_4"
  op: "Identity"
  input: "train/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_2"
  op: "VariableShape"
  input: "train/gradients/Switch_4"
  input: "^train/gradients/Identity_4"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_4/Const"
  op: "Const"
  input: "^train/gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_4"
  op: "Fill"
  input: "train/gradients/VariableShape_2"
  input: "train/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_4"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_5"
  op: "Switch"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_5"
  op: "Identity"
  input: "train/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_3"
  op: "VariableShape"
  input: "train/gradients/Switch_5"
  input: "^train/gradients/Identity_5"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_5/Const"
  op: "Const"
  input: "^train/gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_5"
  op: "Fill"
  input: "train/gradients/VariableShape_3"
  input: "train/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_23/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_5"
  input: "train/gradients/batch_normalization_23/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_24_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_22"
  input: "stage3_block4_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_24_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_24_grad/ShapeN"
  input: "stage3_block4_c2_w/read"
  input: "train/gradients/add_35_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_24_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_22"
  input: "train/gradients/Conv2D_24_grad/ShapeN:1"
  input: "train/gradients/add_35_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_24_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_24_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_24_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_24_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_24_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_24_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_24_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_24_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_24_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/batch_normalization_23/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_23/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/batch_normalization_23/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_23/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_23/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_22_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_24_grad/tuple/control_dependency"
  input: "Selu_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_22_grad/SeluGrad"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_22_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_22/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_22/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_22/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_22_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_22/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_22_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_22/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_22/cond/ReadVariableOp_2"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_22/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "batch_normalization_22/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_22/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_22/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_22/cond/ReadVariableOp"
  input: "batch_normalization_22/cond/FusedBatchNorm:3"
  input: "batch_normalization_22/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_6"
  op: "Switch"
  input: "add_34"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_6"
  op: "Identity"
  input: "train/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_3"
  op: "Shape"
  input: "train/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_6/Const"
  op: "Const"
  input: "^train/gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_6"
  op: "Fill"
  input: "train/gradients/Shape_3"
  input: "train/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_7"
  op: "Switch"
  input: "add_34"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_7"
  op: "Identity"
  input: "train/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_4"
  op: "Shape"
  input: "train/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_7/Const"
  op: "Const"
  input: "^train/gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_7"
  op: "Fill"
  input: "train/gradients/Shape_4"
  input: "train/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_7"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_8"
  op: "Switch"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_8"
  op: "Identity"
  input: "train/gradients/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_4"
  op: "VariableShape"
  input: "train/gradients/Switch_8:1"
  input: "^train/gradients/Identity_8"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_8/Const"
  op: "Const"
  input: "^train/gradients/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_8"
  op: "Fill"
  input: "train/gradients/VariableShape_4"
  input: "train/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_9"
  op: "Switch"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_9"
  op: "Identity"
  input: "train/gradients/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_5"
  op: "VariableShape"
  input: "train/gradients/Switch_9:1"
  input: "^train/gradients/Identity_9"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_9/Const"
  op: "Const"
  input: "^train/gradients/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_9"
  op: "Fill"
  input: "train/gradients/VariableShape_5"
  input: "train/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_34_grad/Shape"
  op: "Shape"
  input: "Conv2D_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_34_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_34_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_34_grad/Shape"
  input: "train/gradients/add_34_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_34_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_3"
  input: "train/gradients/add_34_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_34_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_34_grad/Sum"
  input: "train/gradients/add_34_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_34_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_3"
  input: "train/gradients/add_34_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_34_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_34_grad/Sum_1"
  input: "train/gradients/add_34_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_34_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_34_grad/Reshape"
  input: "^train/gradients/add_34_grad/Reshape_1"
}
node {
  name: "train/gradients/add_34_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_34_grad/Reshape"
  input: "^train/gradients/add_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_34_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_34_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_34_grad/Reshape_1"
  input: "^train/gradients/add_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_34_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_10"
  op: "Switch"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_10"
  op: "Identity"
  input: "train/gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_6"
  op: "VariableShape"
  input: "train/gradients/Switch_10"
  input: "^train/gradients/Identity_10"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_10/Const"
  op: "Const"
  input: "^train/gradients/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_10"
  op: "Fill"
  input: "train/gradients/VariableShape_6"
  input: "train/gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_10"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_11"
  op: "Switch"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_11"
  op: "Identity"
  input: "train/gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_7"
  op: "VariableShape"
  input: "train/gradients/Switch_11"
  input: "^train/gradients/Identity_11"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_11/Const"
  op: "Const"
  input: "^train/gradients/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_11"
  op: "Fill"
  input: "train/gradients/VariableShape_7"
  input: "train/gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_22/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_11"
  input: "train/gradients/batch_normalization_22/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_23_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_11/add_4"
  input: "stage3_block4_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_23_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_23_grad/ShapeN"
  input: "stage3_block4_c1_w/read"
  input: "train/gradients/add_34_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_23_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_11/add_4"
  input: "train/gradients/Conv2D_23_grad/ShapeN:1"
  input: "train/gradients/add_34_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_23_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_23_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_23_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_23_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_23_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_23_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_23_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_23_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_23_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/batch_normalization_22/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_22/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/batch_normalization_22/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_22/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_22/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/Add_36_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_23_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_36_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_11/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_11/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_11/add_4_grad/Shape"
  input: "train/gradients/dropout_11/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_6"
  input: "train/gradients/dropout_11/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_11/add_4_grad/Sum"
  input: "train/gradients/dropout_11/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_6"
  input: "train/gradients/dropout_11/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_11/add_4_grad/Sum_1"
  input: "train/gradients/dropout_11/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_11/add_4_grad/Reshape"
  input: "^train/gradients/dropout_11/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_11/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_11/add_4_grad/Reshape"
  input: "^train/gradients/dropout_11/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_11/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_11/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_11/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_11/mul_7_grad/Shape"
  input: "train/gradients/dropout_11/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_11/add_4_grad/tuple/control_dependency"
  input: "dropout_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_11/mul_7_grad/Mul"
  input: "train/gradients/dropout_11/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_11/mul_7_grad/Sum"
  input: "train/gradients/dropout_11/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_11/Sqrt"
  input: "train/gradients/dropout_11/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_11/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_11/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_11/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_11/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_11/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_11/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_11/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_11/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_11/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_11/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_11/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_11/add_1_grad/Shape"
  input: "train/gradients/dropout_11/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_11/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_11/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_11/add_1_grad/Sum"
  input: "train/gradients/dropout_11/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_11/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_11/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_11/add_1_grad/Sum_1"
  input: "train/gradients/dropout_11/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_11/add_1_grad/Reshape"
  input: "^train/gradients/dropout_11/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_11/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_11/add_1_grad/Reshape"
  input: "^train/gradients/dropout_11/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_11/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_11/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Shape"
  op: "Shape"
  input: "mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_11/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_11/mul_grad/Shape"
  input: "train/gradients/dropout_11/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_11/add_1_grad/tuple/control_dependency"
  input: "dropout_11/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_11/mul_grad/Mul"
  input: "train/gradients/dropout_11/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_11/mul_grad/Sum"
  input: "train/gradients/dropout_11/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_10"
  input: "train/gradients/dropout_11/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_11/mul_grad/Mul_1"
  input: "train/gradients/dropout_11/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_11/mul_grad/Sum_1"
  input: "train/gradients/dropout_11/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_11/mul_grad/Reshape"
  input: "^train/gradients/dropout_11/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_11/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_11/mul_grad/Reshape"
  input: "^train/gradients/dropout_11/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_11/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_11/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_11/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_11/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Shape"
  op: "Shape"
  input: "Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_10_grad/Shape"
  input: "train/gradients/mul_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_11/mul_grad/tuple/control_dependency"
  input: "mul_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_10_grad/Mul"
  input: "train/gradients/mul_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_10_grad/Sum"
  input: "train/gradients/mul_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Mul_1"
  op: "Mul"
  input: "Add_33"
  input: "train/gradients/dropout_11/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_10_grad/Mul_1"
  input: "train/gradients/mul_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_10_grad/Sum_1"
  input: "train/gradients/mul_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_10_grad/Reshape"
  input: "^train/gradients/mul_10_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_10_grad/Reshape"
  input: "^train/gradients/mul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_10_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_10_grad/Reshape_1"
  input: "^train/gradients/mul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_10_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/Shape"
  op: "Shape"
  input: "dropout_10/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/Shape_1"
  op: "Shape"
  input: "Selu_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_33_grad/Shape"
  input: "train/gradients/Add_33_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_10_grad/tuple/control_dependency"
  input: "train/gradients/Add_33_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_33_grad/Sum"
  input: "train/gradients/Add_33_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_10_grad/tuple/control_dependency"
  input: "train/gradients/Add_33_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_33_grad/Sum_1"
  input: "train/gradients/Add_33_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_33_grad/Reshape"
  input: "^train/gradients/Add_33_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_33_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_33_grad/Reshape"
  input: "^train/gradients/Add_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_33_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_33_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_33_grad/Reshape_1"
  input: "^train/gradients/Add_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_33_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_21_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_33_grad/tuple/control_dependency_1"
  input: "Selu_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_21_grad/SeluGrad"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_21_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_21/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_21/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_21/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_21_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_21/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_21_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_21/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_21/cond/ReadVariableOp_2"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_21/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "batch_normalization_21/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_21/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_21/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_21/cond/ReadVariableOp"
  input: "batch_normalization_21/cond/FusedBatchNorm:3"
  input: "batch_normalization_21/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_12"
  op: "Switch"
  input: "add_32"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_12"
  op: "Identity"
  input: "train/gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_5"
  op: "Shape"
  input: "train/gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_12/Const"
  op: "Const"
  input: "^train/gradients/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_12"
  op: "Fill"
  input: "train/gradients/Shape_5"
  input: "train/gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_13"
  op: "Switch"
  input: "add_32"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_13"
  op: "Identity"
  input: "train/gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_6"
  op: "Shape"
  input: "train/gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_13/Const"
  op: "Const"
  input: "^train/gradients/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_13"
  op: "Fill"
  input: "train/gradients/Shape_6"
  input: "train/gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_13"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_14"
  op: "Switch"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_14"
  op: "Identity"
  input: "train/gradients/Switch_14:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_8"
  op: "VariableShape"
  input: "train/gradients/Switch_14:1"
  input: "^train/gradients/Identity_14"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_14/Const"
  op: "Const"
  input: "^train/gradients/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_14"
  op: "Fill"
  input: "train/gradients/VariableShape_8"
  input: "train/gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_15"
  op: "Switch"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_15"
  op: "Identity"
  input: "train/gradients/Switch_15:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_9"
  op: "VariableShape"
  input: "train/gradients/Switch_15:1"
  input: "^train/gradients/Identity_15"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_15/Const"
  op: "Const"
  input: "^train/gradients/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_15"
  op: "Fill"
  input: "train/gradients/VariableShape_9"
  input: "train/gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_32_grad/Shape"
  op: "Shape"
  input: "Conv2D_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_32_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_32_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_32_grad/Shape"
  input: "train/gradients/add_32_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_32_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_7"
  input: "train/gradients/add_32_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_32_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_32_grad/Sum"
  input: "train/gradients/add_32_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_32_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_7"
  input: "train/gradients/add_32_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_32_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_32_grad/Sum_1"
  input: "train/gradients/add_32_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_32_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_32_grad/Reshape"
  input: "^train/gradients/add_32_grad/Reshape_1"
}
node {
  name: "train/gradients/add_32_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_32_grad/Reshape"
  input: "^train/gradients/add_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_32_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_32_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_32_grad/Reshape_1"
  input: "^train/gradients/add_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_32_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_16"
  op: "Switch"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_16"
  op: "Identity"
  input: "train/gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_10"
  op: "VariableShape"
  input: "train/gradients/Switch_16"
  input: "^train/gradients/Identity_16"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_16/Const"
  op: "Const"
  input: "^train/gradients/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_16"
  op: "Fill"
  input: "train/gradients/VariableShape_10"
  input: "train/gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_16"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_17"
  op: "Switch"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_17"
  op: "Identity"
  input: "train/gradients/Switch_17"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_11"
  op: "VariableShape"
  input: "train/gradients/Switch_17"
  input: "^train/gradients/Identity_17"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_17/Const"
  op: "Const"
  input: "^train/gradients/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_17"
  op: "Fill"
  input: "train/gradients/VariableShape_11"
  input: "train/gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_21/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_17"
  input: "train/gradients/batch_normalization_21/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_22_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_20"
  input: "stage3_block3_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_22_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_22_grad/ShapeN"
  input: "stage3_block3_c2_w/read"
  input: "train/gradients/add_32_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_22_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_20"
  input: "train/gradients/Conv2D_22_grad/ShapeN:1"
  input: "train/gradients/add_32_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_22_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_22_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_22_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_22_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_22_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_22_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/batch_normalization_21/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_21/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_9"
  op: "AddN"
  input: "train/gradients/batch_normalization_21/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_21/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_21/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_20_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_22_grad/tuple/control_dependency"
  input: "Selu_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_20_grad/SeluGrad"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_20_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_20/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_20/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_20/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_20_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_20/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_20_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_20/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_20/cond/ReadVariableOp_2"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_20/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "batch_normalization_20/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_20/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_20/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_20/cond/ReadVariableOp"
  input: "batch_normalization_20/cond/FusedBatchNorm:3"
  input: "batch_normalization_20/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_18"
  op: "Switch"
  input: "add_31"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_18"
  op: "Identity"
  input: "train/gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_7"
  op: "Shape"
  input: "train/gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_18/Const"
  op: "Const"
  input: "^train/gradients/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_18"
  op: "Fill"
  input: "train/gradients/Shape_7"
  input: "train/gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_19"
  op: "Switch"
  input: "add_31"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_19"
  op: "Identity"
  input: "train/gradients/Switch_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_8"
  op: "Shape"
  input: "train/gradients/Switch_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_19/Const"
  op: "Const"
  input: "^train/gradients/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_19"
  op: "Fill"
  input: "train/gradients/Shape_8"
  input: "train/gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_19"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_20"
  op: "Switch"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_20"
  op: "Identity"
  input: "train/gradients/Switch_20:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_12"
  op: "VariableShape"
  input: "train/gradients/Switch_20:1"
  input: "^train/gradients/Identity_20"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_20/Const"
  op: "Const"
  input: "^train/gradients/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_20"
  op: "Fill"
  input: "train/gradients/VariableShape_12"
  input: "train/gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_21"
  op: "Switch"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_21"
  op: "Identity"
  input: "train/gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_13"
  op: "VariableShape"
  input: "train/gradients/Switch_21:1"
  input: "^train/gradients/Identity_21"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_21/Const"
  op: "Const"
  input: "^train/gradients/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_21"
  op: "Fill"
  input: "train/gradients/VariableShape_13"
  input: "train/gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_10"
  op: "AddN"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_31_grad/Shape"
  op: "Shape"
  input: "Conv2D_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_31_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_31_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_31_grad/Shape"
  input: "train/gradients/add_31_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_31_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_10"
  input: "train/gradients/add_31_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_31_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_31_grad/Sum"
  input: "train/gradients/add_31_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_31_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_10"
  input: "train/gradients/add_31_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_31_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_31_grad/Sum_1"
  input: "train/gradients/add_31_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_31_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_31_grad/Reshape"
  input: "^train/gradients/add_31_grad/Reshape_1"
}
node {
  name: "train/gradients/add_31_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_31_grad/Reshape"
  input: "^train/gradients/add_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_31_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_31_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_31_grad/Reshape_1"
  input: "^train/gradients/add_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_31_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_22"
  op: "Switch"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_22"
  op: "Identity"
  input: "train/gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_14"
  op: "VariableShape"
  input: "train/gradients/Switch_22"
  input: "^train/gradients/Identity_22"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_22/Const"
  op: "Const"
  input: "^train/gradients/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_22"
  op: "Fill"
  input: "train/gradients/VariableShape_14"
  input: "train/gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_22"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_23"
  op: "Switch"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_23"
  op: "Identity"
  input: "train/gradients/Switch_23"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_15"
  op: "VariableShape"
  input: "train/gradients/Switch_23"
  input: "^train/gradients/Identity_23"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_23/Const"
  op: "Const"
  input: "^train/gradients/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_23"
  op: "Fill"
  input: "train/gradients/VariableShape_15"
  input: "train/gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_20/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_23"
  input: "train/gradients/batch_normalization_20/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_21_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_10/add_4"
  input: "stage3_block3_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_21_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_21_grad/ShapeN"
  input: "stage3_block3_c1_w/read"
  input: "train/gradients/add_31_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_21_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_10/add_4"
  input: "train/gradients/Conv2D_21_grad/ShapeN:1"
  input: "train/gradients/add_31_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_21_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_21_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_21_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_21_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_21_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_21_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_11"
  op: "AddN"
  input: "train/gradients/batch_normalization_20/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_20/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_12"
  op: "AddN"
  input: "train/gradients/batch_normalization_20/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_20/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_20/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_13"
  op: "AddN"
  input: "train/gradients/Add_33_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_21_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_33_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_10/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_10/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_10/add_4_grad/Shape"
  input: "train/gradients/dropout_10/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_13"
  input: "train/gradients/dropout_10/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_10/add_4_grad/Sum"
  input: "train/gradients/dropout_10/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_13"
  input: "train/gradients/dropout_10/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_10/add_4_grad/Sum_1"
  input: "train/gradients/dropout_10/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_10/add_4_grad/Reshape"
  input: "^train/gradients/dropout_10/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_10/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_10/add_4_grad/Reshape"
  input: "^train/gradients/dropout_10/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_10/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_10/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_10/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_10/mul_7_grad/Shape"
  input: "train/gradients/dropout_10/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_10/add_4_grad/tuple/control_dependency"
  input: "dropout_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_10/mul_7_grad/Mul"
  input: "train/gradients/dropout_10/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_10/mul_7_grad/Sum"
  input: "train/gradients/dropout_10/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_10/Sqrt"
  input: "train/gradients/dropout_10/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_10/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_10/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_10/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_10/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_10/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_10/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_10/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_10/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_10/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_10/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_10/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_10/add_1_grad/Shape"
  input: "train/gradients/dropout_10/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_10/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_10/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_10/add_1_grad/Sum"
  input: "train/gradients/dropout_10/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_10/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_10/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_10/add_1_grad/Sum_1"
  input: "train/gradients/dropout_10/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_10/add_1_grad/Reshape"
  input: "^train/gradients/dropout_10/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_10/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_10/add_1_grad/Reshape"
  input: "^train/gradients/dropout_10/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_10/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_10/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Shape"
  op: "Shape"
  input: "mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_10/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_10/mul_grad/Shape"
  input: "train/gradients/dropout_10/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_10/add_1_grad/tuple/control_dependency"
  input: "dropout_10/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_10/mul_grad/Mul"
  input: "train/gradients/dropout_10/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_10/mul_grad/Sum"
  input: "train/gradients/dropout_10/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_9"
  input: "train/gradients/dropout_10/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_10/mul_grad/Mul_1"
  input: "train/gradients/dropout_10/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_10/mul_grad/Sum_1"
  input: "train/gradients/dropout_10/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_10/mul_grad/Reshape"
  input: "^train/gradients/dropout_10/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_10/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_10/mul_grad/Reshape"
  input: "^train/gradients/dropout_10/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_10/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_10/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_10/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_10/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Shape"
  op: "Shape"
  input: "Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_9_grad/Shape"
  input: "train/gradients/mul_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_10/mul_grad/tuple/control_dependency"
  input: "mul_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_9_grad/Mul"
  input: "train/gradients/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_9_grad/Sum"
  input: "train/gradients/mul_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Mul_1"
  op: "Mul"
  input: "Add_30"
  input: "train/gradients/dropout_10/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_9_grad/Mul_1"
  input: "train/gradients/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_9_grad/Sum_1"
  input: "train/gradients/mul_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_9_grad/Reshape"
  input: "^train/gradients/mul_9_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_9_grad/Reshape"
  input: "^train/gradients/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_9_grad/Reshape_1"
  input: "^train/gradients/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/Shape"
  op: "Shape"
  input: "dropout_9/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/Shape_1"
  op: "Shape"
  input: "Selu_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_30_grad/Shape"
  input: "train/gradients/Add_30_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_9_grad/tuple/control_dependency"
  input: "train/gradients/Add_30_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_30_grad/Sum"
  input: "train/gradients/Add_30_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_9_grad/tuple/control_dependency"
  input: "train/gradients/Add_30_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_30_grad/Sum_1"
  input: "train/gradients/Add_30_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_30_grad/Reshape"
  input: "^train/gradients/Add_30_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_30_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_30_grad/Reshape"
  input: "^train/gradients/Add_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_30_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_30_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_30_grad/Reshape_1"
  input: "^train/gradients/Add_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_30_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_19_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_30_grad/tuple/control_dependency_1"
  input: "Selu_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_19_grad/SeluGrad"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_19_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_19/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_19/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_19/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_19_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_19/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_19_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_19/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_19/cond/ReadVariableOp_2"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_19/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "batch_normalization_19/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_19/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_19/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_19/cond/ReadVariableOp"
  input: "batch_normalization_19/cond/FusedBatchNorm:3"
  input: "batch_normalization_19/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_24"
  op: "Switch"
  input: "add_29"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_24"
  op: "Identity"
  input: "train/gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_9"
  op: "Shape"
  input: "train/gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_24/Const"
  op: "Const"
  input: "^train/gradients/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_24"
  op: "Fill"
  input: "train/gradients/Shape_9"
  input: "train/gradients/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_25"
  op: "Switch"
  input: "add_29"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_25"
  op: "Identity"
  input: "train/gradients/Switch_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_10"
  op: "Shape"
  input: "train/gradients/Switch_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_25/Const"
  op: "Const"
  input: "^train/gradients/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_25"
  op: "Fill"
  input: "train/gradients/Shape_10"
  input: "train/gradients/zeros_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_25"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_26"
  op: "Switch"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_26"
  op: "Identity"
  input: "train/gradients/Switch_26:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_16"
  op: "VariableShape"
  input: "train/gradients/Switch_26:1"
  input: "^train/gradients/Identity_26"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_26/Const"
  op: "Const"
  input: "^train/gradients/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_26"
  op: "Fill"
  input: "train/gradients/VariableShape_16"
  input: "train/gradients/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_27"
  op: "Switch"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_27"
  op: "Identity"
  input: "train/gradients/Switch_27:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_17"
  op: "VariableShape"
  input: "train/gradients/Switch_27:1"
  input: "^train/gradients/Identity_27"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_27/Const"
  op: "Const"
  input: "^train/gradients/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_27"
  op: "Fill"
  input: "train/gradients/VariableShape_17"
  input: "train/gradients/zeros_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_27"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_14"
  op: "AddN"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_29_grad/Shape"
  op: "Shape"
  input: "Conv2D_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_29_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_29_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_29_grad/Shape"
  input: "train/gradients/add_29_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_29_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_14"
  input: "train/gradients/add_29_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_29_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_29_grad/Sum"
  input: "train/gradients/add_29_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_29_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_14"
  input: "train/gradients/add_29_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_29_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_29_grad/Sum_1"
  input: "train/gradients/add_29_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_29_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_29_grad/Reshape"
  input: "^train/gradients/add_29_grad/Reshape_1"
}
node {
  name: "train/gradients/add_29_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_29_grad/Reshape"
  input: "^train/gradients/add_29_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_29_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_29_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_29_grad/Reshape_1"
  input: "^train/gradients/add_29_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_29_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_28"
  op: "Switch"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_28"
  op: "Identity"
  input: "train/gradients/Switch_28"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_18"
  op: "VariableShape"
  input: "train/gradients/Switch_28"
  input: "^train/gradients/Identity_28"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_28/Const"
  op: "Const"
  input: "^train/gradients/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_28"
  op: "Fill"
  input: "train/gradients/VariableShape_18"
  input: "train/gradients/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_28"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_29"
  op: "Switch"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_29"
  op: "Identity"
  input: "train/gradients/Switch_29"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_19"
  op: "VariableShape"
  input: "train/gradients/Switch_29"
  input: "^train/gradients/Identity_29"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_29/Const"
  op: "Const"
  input: "^train/gradients/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_29"
  op: "Fill"
  input: "train/gradients/VariableShape_19"
  input: "train/gradients/zeros_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_19/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_29"
  input: "train/gradients/batch_normalization_19/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_20_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_18"
  input: "stage3_block2_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_20_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_20_grad/ShapeN"
  input: "stage3_block2_c2_w/read"
  input: "train/gradients/add_29_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_20_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_18"
  input: "train/gradients/Conv2D_20_grad/ShapeN:1"
  input: "train/gradients/add_29_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_20_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_20_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_20_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_20_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_20_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_20_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_15"
  op: "AddN"
  input: "train/gradients/batch_normalization_19/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_19/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_16"
  op: "AddN"
  input: "train/gradients/batch_normalization_19/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_19/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_19/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_18_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_20_grad/tuple/control_dependency"
  input: "Selu_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_18_grad/SeluGrad"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_18_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_18/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_18/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_18/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_18_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_18/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_18_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_18/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_18/cond/ReadVariableOp_2"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_18/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "batch_normalization_18/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_18/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_18/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_18/cond/ReadVariableOp"
  input: "batch_normalization_18/cond/FusedBatchNorm:3"
  input: "batch_normalization_18/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_30"
  op: "Switch"
  input: "add_28"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_30"
  op: "Identity"
  input: "train/gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_11"
  op: "Shape"
  input: "train/gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_30/Const"
  op: "Const"
  input: "^train/gradients/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_30"
  op: "Fill"
  input: "train/gradients/Shape_11"
  input: "train/gradients/zeros_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_30"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_31"
  op: "Switch"
  input: "add_28"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_31"
  op: "Identity"
  input: "train/gradients/Switch_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_12"
  op: "Shape"
  input: "train/gradients/Switch_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_31/Const"
  op: "Const"
  input: "^train/gradients/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_31"
  op: "Fill"
  input: "train/gradients/Shape_12"
  input: "train/gradients/zeros_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_31"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_32"
  op: "Switch"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_32"
  op: "Identity"
  input: "train/gradients/Switch_32:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_20"
  op: "VariableShape"
  input: "train/gradients/Switch_32:1"
  input: "^train/gradients/Identity_32"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_32/Const"
  op: "Const"
  input: "^train/gradients/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_32"
  op: "Fill"
  input: "train/gradients/VariableShape_20"
  input: "train/gradients/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_33"
  op: "Switch"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_33"
  op: "Identity"
  input: "train/gradients/Switch_33:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_21"
  op: "VariableShape"
  input: "train/gradients/Switch_33:1"
  input: "^train/gradients/Identity_33"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_33/Const"
  op: "Const"
  input: "^train/gradients/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_33"
  op: "Fill"
  input: "train/gradients/VariableShape_21"
  input: "train/gradients/zeros_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_33"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_17"
  op: "AddN"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_28_grad/Shape"
  op: "Shape"
  input: "Conv2D_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_28_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_28_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_28_grad/Shape"
  input: "train/gradients/add_28_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_28_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_17"
  input: "train/gradients/add_28_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_28_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_28_grad/Sum"
  input: "train/gradients/add_28_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_28_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_17"
  input: "train/gradients/add_28_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_28_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_28_grad/Sum_1"
  input: "train/gradients/add_28_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_28_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_28_grad/Reshape"
  input: "^train/gradients/add_28_grad/Reshape_1"
}
node {
  name: "train/gradients/add_28_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_28_grad/Reshape"
  input: "^train/gradients/add_28_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_28_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_28_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_28_grad/Reshape_1"
  input: "^train/gradients/add_28_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_28_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_34"
  op: "Switch"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_34"
  op: "Identity"
  input: "train/gradients/Switch_34"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_22"
  op: "VariableShape"
  input: "train/gradients/Switch_34"
  input: "^train/gradients/Identity_34"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_34/Const"
  op: "Const"
  input: "^train/gradients/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_34"
  op: "Fill"
  input: "train/gradients/VariableShape_22"
  input: "train/gradients/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_34"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_35"
  op: "Switch"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_35"
  op: "Identity"
  input: "train/gradients/Switch_35"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_23"
  op: "VariableShape"
  input: "train/gradients/Switch_35"
  input: "^train/gradients/Identity_35"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_35/Const"
  op: "Const"
  input: "^train/gradients/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_35"
  op: "Fill"
  input: "train/gradients/VariableShape_23"
  input: "train/gradients/zeros_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_18/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_35"
  input: "train/gradients/batch_normalization_18/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_19_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_9/add_4"
  input: "stage3_block2_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_19_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_19_grad/ShapeN"
  input: "stage3_block2_c1_w/read"
  input: "train/gradients/add_28_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_19_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_9/add_4"
  input: "train/gradients/Conv2D_19_grad/ShapeN:1"
  input: "train/gradients/add_28_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_19_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_19_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_19_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_19_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_19_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_19_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_18"
  op: "AddN"
  input: "train/gradients/batch_normalization_18/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_18/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_19"
  op: "AddN"
  input: "train/gradients/batch_normalization_18/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_18/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_18/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_20"
  op: "AddN"
  input: "train/gradients/Add_30_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_19_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_30_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_9/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_9/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_9/add_4_grad/Shape"
  input: "train/gradients/dropout_9/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_20"
  input: "train/gradients/dropout_9/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_9/add_4_grad/Sum"
  input: "train/gradients/dropout_9/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_20"
  input: "train/gradients/dropout_9/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_9/add_4_grad/Sum_1"
  input: "train/gradients/dropout_9/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_9/add_4_grad/Reshape"
  input: "^train/gradients/dropout_9/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_9/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_9/add_4_grad/Reshape"
  input: "^train/gradients/dropout_9/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_9/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_9/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_9/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_9/mul_7_grad/Shape"
  input: "train/gradients/dropout_9/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_9/add_4_grad/tuple/control_dependency"
  input: "dropout_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_9/mul_7_grad/Mul"
  input: "train/gradients/dropout_9/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_9/mul_7_grad/Sum"
  input: "train/gradients/dropout_9/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_9/Sqrt"
  input: "train/gradients/dropout_9/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_9/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_9/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_9/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_9/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_9/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_9/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_9/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_9/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_9/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_9/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_9/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_9/add_1_grad/Shape"
  input: "train/gradients/dropout_9/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_9/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_9/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_9/add_1_grad/Sum"
  input: "train/gradients/dropout_9/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_9/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_9/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_9/add_1_grad/Sum_1"
  input: "train/gradients/dropout_9/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_9/add_1_grad/Reshape"
  input: "^train/gradients/dropout_9/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_9/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_9/add_1_grad/Reshape"
  input: "^train/gradients/dropout_9/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_9/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_9/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Shape"
  op: "Shape"
  input: "mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_9/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_9/mul_grad/Shape"
  input: "train/gradients/dropout_9/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_9/add_1_grad/tuple/control_dependency"
  input: "dropout_9/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_9/mul_grad/Mul"
  input: "train/gradients/dropout_9/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_9/mul_grad/Sum"
  input: "train/gradients/dropout_9/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_8"
  input: "train/gradients/dropout_9/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_9/mul_grad/Mul_1"
  input: "train/gradients/dropout_9/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_9/mul_grad/Sum_1"
  input: "train/gradients/dropout_9/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_9/mul_grad/Reshape"
  input: "^train/gradients/dropout_9/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_9/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_9/mul_grad/Reshape"
  input: "^train/gradients/dropout_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_9/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_9/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_9/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Shape"
  op: "Shape"
  input: "Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_8_grad/Shape"
  input: "train/gradients/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_9/mul_grad/tuple/control_dependency"
  input: "mul_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_8_grad/Mul"
  input: "train/gradients/mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_8_grad/Sum"
  input: "train/gradients/mul_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Mul_1"
  op: "Mul"
  input: "Add_27"
  input: "train/gradients/dropout_9/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_8_grad/Mul_1"
  input: "train/gradients/mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_8_grad/Sum_1"
  input: "train/gradients/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_8_grad/Reshape"
  input: "^train/gradients/mul_8_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_8_grad/Reshape"
  input: "^train/gradients/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_8_grad/Reshape_1"
  input: "^train/gradients/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/Shape"
  op: "Shape"
  input: "max_pooling2d_1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/Shape_1"
  op: "Shape"
  input: "Selu_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_27_grad/Shape"
  input: "train/gradients/Add_27_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_8_grad/tuple/control_dependency"
  input: "train/gradients/Add_27_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_27_grad/Sum"
  input: "train/gradients/Add_27_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_8_grad/tuple/control_dependency"
  input: "train/gradients/Add_27_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_27_grad/Sum_1"
  input: "train/gradients/Add_27_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_27_grad/Reshape"
  input: "^train/gradients/Add_27_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_27_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_27_grad/Reshape"
  input: "^train/gradients/Add_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_27_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_27_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_27_grad/Reshape_1"
  input: "^train/gradients/Add_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_27_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_17_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_27_grad/tuple/control_dependency_1"
  input: "Selu_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_17_grad/SeluGrad"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_17_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_17/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_17/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_17/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_17_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_17/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_17_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_17/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_17/cond/ReadVariableOp_2"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_17/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "batch_normalization_17/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_17/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_17/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_17/cond/ReadVariableOp"
  input: "batch_normalization_17/cond/FusedBatchNorm:3"
  input: "batch_normalization_17/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_36"
  op: "Switch"
  input: "add_26"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_36"
  op: "Identity"
  input: "train/gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_13"
  op: "Shape"
  input: "train/gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_36/Const"
  op: "Const"
  input: "^train/gradients/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_36"
  op: "Fill"
  input: "train/gradients/Shape_13"
  input: "train/gradients/zeros_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_36"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_37"
  op: "Switch"
  input: "add_26"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_37"
  op: "Identity"
  input: "train/gradients/Switch_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_14"
  op: "Shape"
  input: "train/gradients/Switch_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_37/Const"
  op: "Const"
  input: "^train/gradients/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_37"
  op: "Fill"
  input: "train/gradients/Shape_14"
  input: "train/gradients/zeros_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_37"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_38"
  op: "Switch"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_38"
  op: "Identity"
  input: "train/gradients/Switch_38:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_24"
  op: "VariableShape"
  input: "train/gradients/Switch_38:1"
  input: "^train/gradients/Identity_38"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_38/Const"
  op: "Const"
  input: "^train/gradients/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_38"
  op: "Fill"
  input: "train/gradients/VariableShape_24"
  input: "train/gradients/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_38"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_39"
  op: "Switch"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_39"
  op: "Identity"
  input: "train/gradients/Switch_39:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_25"
  op: "VariableShape"
  input: "train/gradients/Switch_39:1"
  input: "^train/gradients/Identity_39"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_39/Const"
  op: "Const"
  input: "^train/gradients/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_39"
  op: "Fill"
  input: "train/gradients/VariableShape_25"
  input: "train/gradients/zeros_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_39"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_21"
  op: "AddN"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_26_grad/Shape"
  op: "Shape"
  input: "Conv2D_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_26_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_26_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_26_grad/Shape"
  input: "train/gradients/add_26_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_26_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_21"
  input: "train/gradients/add_26_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_26_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_26_grad/Sum"
  input: "train/gradients/add_26_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_26_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_21"
  input: "train/gradients/add_26_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_26_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_26_grad/Sum_1"
  input: "train/gradients/add_26_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_26_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_26_grad/Reshape"
  input: "^train/gradients/add_26_grad/Reshape_1"
}
node {
  name: "train/gradients/add_26_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_26_grad/Reshape"
  input: "^train/gradients/add_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_26_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_26_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_26_grad/Reshape_1"
  input: "^train/gradients/add_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_26_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_40"
  op: "Switch"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_40"
  op: "Identity"
  input: "train/gradients/Switch_40"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_26"
  op: "VariableShape"
  input: "train/gradients/Switch_40"
  input: "^train/gradients/Identity_40"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_40/Const"
  op: "Const"
  input: "^train/gradients/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_40"
  op: "Fill"
  input: "train/gradients/VariableShape_26"
  input: "train/gradients/zeros_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_40"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_41"
  op: "Switch"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_41"
  op: "Identity"
  input: "train/gradients/Switch_41"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_27"
  op: "VariableShape"
  input: "train/gradients/Switch_41"
  input: "^train/gradients/Identity_41"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_41/Const"
  op: "Const"
  input: "^train/gradients/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_41"
  op: "Fill"
  input: "train/gradients/VariableShape_27"
  input: "train/gradients/zeros_41/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_17/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_41"
  input: "train/gradients/batch_normalization_17/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_18_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_16"
  input: "stage3_block1_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_18_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_18_grad/ShapeN"
  input: "stage3_block1_c2_w/read"
  input: "train/gradients/add_26_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_18_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_16"
  input: "train/gradients/Conv2D_18_grad/ShapeN:1"
  input: "train/gradients/add_26_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_18_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_18_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_18_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_18_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_18_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_18_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_22"
  op: "AddN"
  input: "train/gradients/batch_normalization_17/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_17/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_23"
  op: "AddN"
  input: "train/gradients/batch_normalization_17/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_17/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_17/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_16_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_18_grad/tuple/control_dependency"
  input: "Selu_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_16_grad/SeluGrad"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_16_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_16/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_16/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_16/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_16_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_16/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_16_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_16/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_16/cond/ReadVariableOp_2"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_16/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "batch_normalization_16/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_16/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_16/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_16/cond/ReadVariableOp"
  input: "batch_normalization_16/cond/FusedBatchNorm:3"
  input: "batch_normalization_16/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_42"
  op: "Switch"
  input: "add_25"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_42"
  op: "Identity"
  input: "train/gradients/Switch_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_15"
  op: "Shape"
  input: "train/gradients/Switch_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_42/Const"
  op: "Const"
  input: "^train/gradients/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_42"
  op: "Fill"
  input: "train/gradients/Shape_15"
  input: "train/gradients/zeros_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_42"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_43"
  op: "Switch"
  input: "add_25"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_43"
  op: "Identity"
  input: "train/gradients/Switch_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_16"
  op: "Shape"
  input: "train/gradients/Switch_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_43/Const"
  op: "Const"
  input: "^train/gradients/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_43"
  op: "Fill"
  input: "train/gradients/Shape_16"
  input: "train/gradients/zeros_43/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_43"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_44"
  op: "Switch"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_44"
  op: "Identity"
  input: "train/gradients/Switch_44:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_28"
  op: "VariableShape"
  input: "train/gradients/Switch_44:1"
  input: "^train/gradients/Identity_44"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_44/Const"
  op: "Const"
  input: "^train/gradients/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_44"
  op: "Fill"
  input: "train/gradients/VariableShape_28"
  input: "train/gradients/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_44"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_45"
  op: "Switch"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_45"
  op: "Identity"
  input: "train/gradients/Switch_45:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_29"
  op: "VariableShape"
  input: "train/gradients/Switch_45:1"
  input: "^train/gradients/Identity_45"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_45/Const"
  op: "Const"
  input: "^train/gradients/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_45"
  op: "Fill"
  input: "train/gradients/VariableShape_29"
  input: "train/gradients/zeros_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_45"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_24"
  op: "AddN"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_25_grad/Shape"
  op: "Shape"
  input: "Conv2D_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_25_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_25_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_25_grad/Shape"
  input: "train/gradients/add_25_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_25_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_24"
  input: "train/gradients/add_25_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_25_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_25_grad/Sum"
  input: "train/gradients/add_25_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_25_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_24"
  input: "train/gradients/add_25_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_25_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_25_grad/Sum_1"
  input: "train/gradients/add_25_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_25_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_25_grad/Reshape"
  input: "^train/gradients/add_25_grad/Reshape_1"
}
node {
  name: "train/gradients/add_25_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_25_grad/Reshape"
  input: "^train/gradients/add_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_25_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_25_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_25_grad/Reshape_1"
  input: "^train/gradients/add_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_25_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_46"
  op: "Switch"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_46"
  op: "Identity"
  input: "train/gradients/Switch_46"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_30"
  op: "VariableShape"
  input: "train/gradients/Switch_46"
  input: "^train/gradients/Identity_46"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_46/Const"
  op: "Const"
  input: "^train/gradients/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_46"
  op: "Fill"
  input: "train/gradients/VariableShape_30"
  input: "train/gradients/zeros_46/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_46"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_47"
  op: "Switch"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_47"
  op: "Identity"
  input: "train/gradients/Switch_47"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_31"
  op: "VariableShape"
  input: "train/gradients/Switch_47"
  input: "^train/gradients/Identity_47"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_47/Const"
  op: "Const"
  input: "^train/gradients/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_47"
  op: "Fill"
  input: "train/gradients/VariableShape_31"
  input: "train/gradients/zeros_47/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_16/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_47"
  input: "train/gradients/batch_normalization_16/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_17_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1/MaxPool"
  input: "stage3_block1_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_17_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_17_grad/ShapeN"
  input: "stage3_block1_c1_w/read"
  input: "train/gradients/add_25_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_17_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1/MaxPool"
  input: "train/gradients/Conv2D_17_grad/ShapeN:1"
  input: "train/gradients/add_25_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_17_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_17_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_17_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_17_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_17_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_17_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_25"
  op: "AddN"
  input: "train/gradients/batch_normalization_16/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_16/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_26"
  op: "AddN"
  input: "train/gradients/batch_normalization_16/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_16/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_16/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_27"
  op: "AddN"
  input: "train/gradients/Add_27_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_17_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_27_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout_8/add_4"
  input: "max_pooling2d_1/MaxPool"
  input: "train/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_8/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_8/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_8/add_4_grad/Shape"
  input: "train/gradients/dropout_8/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  input: "train/gradients/dropout_8/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_8/add_4_grad/Sum"
  input: "train/gradients/dropout_8/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  input: "train/gradients/dropout_8/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_8/add_4_grad/Sum_1"
  input: "train/gradients/dropout_8/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_8/add_4_grad/Reshape"
  input: "^train/gradients/dropout_8/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_8/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_8/add_4_grad/Reshape"
  input: "^train/gradients/dropout_8/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_8/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_8/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_8/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_8/mul_7_grad/Shape"
  input: "train/gradients/dropout_8/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_8/add_4_grad/tuple/control_dependency"
  input: "dropout_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_8/mul_7_grad/Mul"
  input: "train/gradients/dropout_8/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_8/mul_7_grad/Sum"
  input: "train/gradients/dropout_8/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_8/Sqrt"
  input: "train/gradients/dropout_8/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_8/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_8/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_8/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_8/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_8/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_8/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_8/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_8/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_8/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_8/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_8/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_8/add_1_grad/Shape"
  input: "train/gradients/dropout_8/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_8/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_8/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_8/add_1_grad/Sum"
  input: "train/gradients/dropout_8/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_8/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_8/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_8/add_1_grad/Sum_1"
  input: "train/gradients/dropout_8/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_8/add_1_grad/Reshape"
  input: "^train/gradients/dropout_8/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_8/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_8/add_1_grad/Reshape"
  input: "^train/gradients/dropout_8/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_8/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_8/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Shape"
  op: "Shape"
  input: "mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_8/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_8/mul_grad/Shape"
  input: "train/gradients/dropout_8/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_8/add_1_grad/tuple/control_dependency"
  input: "dropout_8/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_8/mul_grad/Mul"
  input: "train/gradients/dropout_8/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_8/mul_grad/Sum"
  input: "train/gradients/dropout_8/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_7"
  input: "train/gradients/dropout_8/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_8/mul_grad/Mul_1"
  input: "train/gradients/dropout_8/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_8/mul_grad/Sum_1"
  input: "train/gradients/dropout_8/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_8/mul_grad/Reshape"
  input: "^train/gradients/dropout_8/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_8/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_8/mul_grad/Reshape"
  input: "^train/gradients/dropout_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_8/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_8/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_8/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Shape"
  op: "Shape"
  input: "Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_7_grad/Shape"
  input: "train/gradients/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_8/mul_grad/tuple/control_dependency"
  input: "mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_7_grad/Mul"
  input: "train/gradients/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_7_grad/Sum"
  input: "train/gradients/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Mul_1"
  op: "Mul"
  input: "Add_24"
  input: "train/gradients/dropout_8/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_7_grad/Mul_1"
  input: "train/gradients/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_7_grad/Sum_1"
  input: "train/gradients/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_7_grad/Reshape"
  input: "^train/gradients/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_7_grad/Reshape"
  input: "^train/gradients/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_7_grad/Reshape_1"
  input: "^train/gradients/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/Shape"
  op: "Shape"
  input: "dropout_7/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/Shape_1"
  op: "Shape"
  input: "Selu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_24_grad/Shape"
  input: "train/gradients/Add_24_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Add_24_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_24_grad/Sum"
  input: "train/gradients/Add_24_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Add_24_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_24_grad/Sum_1"
  input: "train/gradients/Add_24_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_24_grad/Reshape"
  input: "^train/gradients/Add_24_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_24_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_24_grad/Reshape"
  input: "^train/gradients/Add_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_24_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_24_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_24_grad/Reshape_1"
  input: "^train/gradients/Add_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_24_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_15_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_24_grad/tuple/control_dependency_1"
  input: "Selu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_15_grad/SeluGrad"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_15_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_15/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_15/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_15/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_15_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_15/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_15_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_15/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_15/cond/ReadVariableOp_2"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_15/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "batch_normalization_15/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_15/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_15/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_15/cond/ReadVariableOp"
  input: "batch_normalization_15/cond/FusedBatchNorm:3"
  input: "batch_normalization_15/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_48"
  op: "Switch"
  input: "add_23"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_48"
  op: "Identity"
  input: "train/gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_17"
  op: "Shape"
  input: "train/gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_48/Const"
  op: "Const"
  input: "^train/gradients/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_48"
  op: "Fill"
  input: "train/gradients/Shape_17"
  input: "train/gradients/zeros_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_48"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_49"
  op: "Switch"
  input: "add_23"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_49"
  op: "Identity"
  input: "train/gradients/Switch_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_18"
  op: "Shape"
  input: "train/gradients/Switch_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_49/Const"
  op: "Const"
  input: "^train/gradients/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_49"
  op: "Fill"
  input: "train/gradients/Shape_18"
  input: "train/gradients/zeros_49/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_49"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_50"
  op: "Switch"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_50"
  op: "Identity"
  input: "train/gradients/Switch_50:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_32"
  op: "VariableShape"
  input: "train/gradients/Switch_50:1"
  input: "^train/gradients/Identity_50"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_50/Const"
  op: "Const"
  input: "^train/gradients/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_50"
  op: "Fill"
  input: "train/gradients/VariableShape_32"
  input: "train/gradients/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_50"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_51"
  op: "Switch"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_51"
  op: "Identity"
  input: "train/gradients/Switch_51:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_33"
  op: "VariableShape"
  input: "train/gradients/Switch_51:1"
  input: "^train/gradients/Identity_51"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_51/Const"
  op: "Const"
  input: "^train/gradients/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_51"
  op: "Fill"
  input: "train/gradients/VariableShape_33"
  input: "train/gradients/zeros_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_51"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_28"
  op: "AddN"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_23_grad/Shape"
  op: "Shape"
  input: "Conv2D_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_23_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_23_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_23_grad/Shape"
  input: "train/gradients/add_23_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_23_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_28"
  input: "train/gradients/add_23_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_23_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_23_grad/Sum"
  input: "train/gradients/add_23_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_23_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_28"
  input: "train/gradients/add_23_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_23_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_23_grad/Sum_1"
  input: "train/gradients/add_23_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_23_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_23_grad/Reshape"
  input: "^train/gradients/add_23_grad/Reshape_1"
}
node {
  name: "train/gradients/add_23_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_23_grad/Reshape"
  input: "^train/gradients/add_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_23_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_23_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_23_grad/Reshape_1"
  input: "^train/gradients/add_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_23_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_52"
  op: "Switch"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_52"
  op: "Identity"
  input: "train/gradients/Switch_52"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_34"
  op: "VariableShape"
  input: "train/gradients/Switch_52"
  input: "^train/gradients/Identity_52"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_52/Const"
  op: "Const"
  input: "^train/gradients/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_52"
  op: "Fill"
  input: "train/gradients/VariableShape_34"
  input: "train/gradients/zeros_52/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_52"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_53"
  op: "Switch"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_53"
  op: "Identity"
  input: "train/gradients/Switch_53"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_35"
  op: "VariableShape"
  input: "train/gradients/Switch_53"
  input: "^train/gradients/Identity_53"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_53/Const"
  op: "Const"
  input: "^train/gradients/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_53"
  op: "Fill"
  input: "train/gradients/VariableShape_35"
  input: "train/gradients/zeros_53/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_15/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_53"
  input: "train/gradients/batch_normalization_15/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_16_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_14"
  input: "stage2_block4_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_16_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_16_grad/ShapeN"
  input: "stage2_block4_c2_w/read"
  input: "train/gradients/add_23_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_16_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_14"
  input: "train/gradients/Conv2D_16_grad/ShapeN:1"
  input: "train/gradients/add_23_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_16_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_16_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_16_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_16_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_16_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_16_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_29"
  op: "AddN"
  input: "train/gradients/batch_normalization_15/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_15/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_30"
  op: "AddN"
  input: "train/gradients/batch_normalization_15/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_15/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_15/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_14_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_16_grad/tuple/control_dependency"
  input: "Selu_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_14_grad/SeluGrad"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_14_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_14/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_14/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_14/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_14_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_14/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_14_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_14/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_14/cond/ReadVariableOp_2"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_14/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "batch_normalization_14/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_14/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_14/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_14/cond/ReadVariableOp"
  input: "batch_normalization_14/cond/FusedBatchNorm:3"
  input: "batch_normalization_14/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_54"
  op: "Switch"
  input: "add_22"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_54"
  op: "Identity"
  input: "train/gradients/Switch_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_19"
  op: "Shape"
  input: "train/gradients/Switch_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_54/Const"
  op: "Const"
  input: "^train/gradients/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_54"
  op: "Fill"
  input: "train/gradients/Shape_19"
  input: "train/gradients/zeros_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_54"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_55"
  op: "Switch"
  input: "add_22"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_55"
  op: "Identity"
  input: "train/gradients/Switch_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_20"
  op: "Shape"
  input: "train/gradients/Switch_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_55/Const"
  op: "Const"
  input: "^train/gradients/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_55"
  op: "Fill"
  input: "train/gradients/Shape_20"
  input: "train/gradients/zeros_55/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_55"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_56"
  op: "Switch"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_56"
  op: "Identity"
  input: "train/gradients/Switch_56:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_36"
  op: "VariableShape"
  input: "train/gradients/Switch_56:1"
  input: "^train/gradients/Identity_56"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_56/Const"
  op: "Const"
  input: "^train/gradients/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_56"
  op: "Fill"
  input: "train/gradients/VariableShape_36"
  input: "train/gradients/zeros_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_56"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_57"
  op: "Switch"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_57"
  op: "Identity"
  input: "train/gradients/Switch_57:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_37"
  op: "VariableShape"
  input: "train/gradients/Switch_57:1"
  input: "^train/gradients/Identity_57"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_57/Const"
  op: "Const"
  input: "^train/gradients/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_57"
  op: "Fill"
  input: "train/gradients/VariableShape_37"
  input: "train/gradients/zeros_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_57"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_31"
  op: "AddN"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_22_grad/Shape"
  op: "Shape"
  input: "Conv2D_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_22_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_22_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_22_grad/Shape"
  input: "train/gradients/add_22_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_22_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_31"
  input: "train/gradients/add_22_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_22_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_22_grad/Sum"
  input: "train/gradients/add_22_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_22_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_31"
  input: "train/gradients/add_22_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_22_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_22_grad/Sum_1"
  input: "train/gradients/add_22_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_22_grad/Reshape"
  input: "^train/gradients/add_22_grad/Reshape_1"
}
node {
  name: "train/gradients/add_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_22_grad/Reshape"
  input: "^train/gradients/add_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_22_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_22_grad/Reshape_1"
  input: "^train/gradients/add_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_22_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_58"
  op: "Switch"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_58"
  op: "Identity"
  input: "train/gradients/Switch_58"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_38"
  op: "VariableShape"
  input: "train/gradients/Switch_58"
  input: "^train/gradients/Identity_58"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_58/Const"
  op: "Const"
  input: "^train/gradients/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_58"
  op: "Fill"
  input: "train/gradients/VariableShape_38"
  input: "train/gradients/zeros_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_58"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_59"
  op: "Switch"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_59"
  op: "Identity"
  input: "train/gradients/Switch_59"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_39"
  op: "VariableShape"
  input: "train/gradients/Switch_59"
  input: "^train/gradients/Identity_59"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_59/Const"
  op: "Const"
  input: "^train/gradients/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_59"
  op: "Fill"
  input: "train/gradients/VariableShape_39"
  input: "train/gradients/zeros_59/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_14/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_59"
  input: "train/gradients/batch_normalization_14/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_15_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_7/add_4"
  input: "stage2_block4_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_15_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_15_grad/ShapeN"
  input: "stage2_block4_c1_w/read"
  input: "train/gradients/add_22_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_15_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_7/add_4"
  input: "train/gradients/Conv2D_15_grad/ShapeN:1"
  input: "train/gradients/add_22_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_15_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_15_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_15_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_15_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_15_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_15_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_32"
  op: "AddN"
  input: "train/gradients/batch_normalization_14/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_14/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_33"
  op: "AddN"
  input: "train/gradients/batch_normalization_14/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_14/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_14/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_34"
  op: "AddN"
  input: "train/gradients/Add_24_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_15_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_24_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_7/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_7/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_7/add_4_grad/Shape"
  input: "train/gradients/dropout_7/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_34"
  input: "train/gradients/dropout_7/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_7/add_4_grad/Sum"
  input: "train/gradients/dropout_7/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_34"
  input: "train/gradients/dropout_7/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_7/add_4_grad/Sum_1"
  input: "train/gradients/dropout_7/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_7/add_4_grad/Reshape"
  input: "^train/gradients/dropout_7/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_7/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_7/add_4_grad/Reshape"
  input: "^train/gradients/dropout_7/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_7/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_7/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_7/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_7/mul_7_grad/Shape"
  input: "train/gradients/dropout_7/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_7/add_4_grad/tuple/control_dependency"
  input: "dropout_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_7/mul_7_grad/Mul"
  input: "train/gradients/dropout_7/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_7/mul_7_grad/Sum"
  input: "train/gradients/dropout_7/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_7/Sqrt"
  input: "train/gradients/dropout_7/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_7/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_7/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_7/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_7/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_7/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_7/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_7/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_7/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_7/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_7/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_7/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_7/add_1_grad/Shape"
  input: "train/gradients/dropout_7/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_7/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_7/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_7/add_1_grad/Sum"
  input: "train/gradients/dropout_7/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_7/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_7/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_7/add_1_grad/Sum_1"
  input: "train/gradients/dropout_7/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_7/add_1_grad/Reshape"
  input: "^train/gradients/dropout_7/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_7/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_7/add_1_grad/Reshape"
  input: "^train/gradients/dropout_7/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_7/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_7/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Shape"
  op: "Shape"
  input: "mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_7/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_7/mul_grad/Shape"
  input: "train/gradients/dropout_7/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_7/add_1_grad/tuple/control_dependency"
  input: "dropout_7/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_7/mul_grad/Mul"
  input: "train/gradients/dropout_7/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_7/mul_grad/Sum"
  input: "train/gradients/dropout_7/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_6"
  input: "train/gradients/dropout_7/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_7/mul_grad/Mul_1"
  input: "train/gradients/dropout_7/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_7/mul_grad/Sum_1"
  input: "train/gradients/dropout_7/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_7/mul_grad/Reshape"
  input: "^train/gradients/dropout_7/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_7/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_7/mul_grad/Reshape"
  input: "^train/gradients/dropout_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_7/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_7/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_7/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Shape"
  op: "Shape"
  input: "Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_6_grad/Shape"
  input: "train/gradients/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_7/mul_grad/tuple/control_dependency"
  input: "mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_6_grad/Mul"
  input: "train/gradients/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_6_grad/Sum"
  input: "train/gradients/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Mul_1"
  op: "Mul"
  input: "Add_21"
  input: "train/gradients/dropout_7/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_6_grad/Mul_1"
  input: "train/gradients/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_6_grad/Sum_1"
  input: "train/gradients/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_6_grad/Reshape"
  input: "^train/gradients/mul_6_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_6_grad/Reshape"
  input: "^train/gradients/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_6_grad/Reshape_1"
  input: "^train/gradients/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/Shape"
  op: "Shape"
  input: "dropout_6/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/Shape_1"
  op: "Shape"
  input: "Selu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_21_grad/Shape"
  input: "train/gradients/Add_21_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_6_grad/tuple/control_dependency"
  input: "train/gradients/Add_21_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_21_grad/Sum"
  input: "train/gradients/Add_21_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_6_grad/tuple/control_dependency"
  input: "train/gradients/Add_21_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_21_grad/Sum_1"
  input: "train/gradients/Add_21_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_21_grad/Reshape"
  input: "^train/gradients/Add_21_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_21_grad/Reshape"
  input: "^train/gradients/Add_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_21_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_21_grad/Reshape_1"
  input: "^train/gradients/Add_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_21_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_13_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_21_grad/tuple/control_dependency_1"
  input: "Selu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_13_grad/SeluGrad"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_13_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_13/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_13/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_13/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_13_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_13/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_13_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_84"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_13/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_13/cond/ReadVariableOp_2"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_13/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_85"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_86"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_87"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_88"
  op: "ZerosLike"
  input: "batch_normalization_13/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_13/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_13/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_13/cond/ReadVariableOp"
  input: "batch_normalization_13/cond/FusedBatchNorm:3"
  input: "batch_normalization_13/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_60"
  op: "Switch"
  input: "add_20"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_60"
  op: "Identity"
  input: "train/gradients/Switch_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_21"
  op: "Shape"
  input: "train/gradients/Switch_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_60/Const"
  op: "Const"
  input: "^train/gradients/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_60"
  op: "Fill"
  input: "train/gradients/Shape_21"
  input: "train/gradients/zeros_60/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_60"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_61"
  op: "Switch"
  input: "add_20"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_61"
  op: "Identity"
  input: "train/gradients/Switch_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_22"
  op: "Shape"
  input: "train/gradients/Switch_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_61/Const"
  op: "Const"
  input: "^train/gradients/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_61"
  op: "Fill"
  input: "train/gradients/Shape_22"
  input: "train/gradients/zeros_61/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_61"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_62"
  op: "Switch"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_62"
  op: "Identity"
  input: "train/gradients/Switch_62:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_40"
  op: "VariableShape"
  input: "train/gradients/Switch_62:1"
  input: "^train/gradients/Identity_62"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_62/Const"
  op: "Const"
  input: "^train/gradients/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_62"
  op: "Fill"
  input: "train/gradients/VariableShape_40"
  input: "train/gradients/zeros_62/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_62"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_63"
  op: "Switch"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_63"
  op: "Identity"
  input: "train/gradients/Switch_63:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_41"
  op: "VariableShape"
  input: "train/gradients/Switch_63:1"
  input: "^train/gradients/Identity_63"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_63/Const"
  op: "Const"
  input: "^train/gradients/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_63"
  op: "Fill"
  input: "train/gradients/VariableShape_41"
  input: "train/gradients/zeros_63/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_63"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_35"
  op: "AddN"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_20_grad/Shape"
  op: "Shape"
  input: "Conv2D_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_20_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_20_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_20_grad/Shape"
  input: "train/gradients/add_20_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_20_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_35"
  input: "train/gradients/add_20_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_20_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_20_grad/Sum"
  input: "train/gradients/add_20_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_20_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_35"
  input: "train/gradients/add_20_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_20_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_20_grad/Sum_1"
  input: "train/gradients/add_20_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_20_grad/Reshape"
  input: "^train/gradients/add_20_grad/Reshape_1"
}
node {
  name: "train/gradients/add_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_20_grad/Reshape"
  input: "^train/gradients/add_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_20_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_20_grad/Reshape_1"
  input: "^train/gradients/add_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_20_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_64"
  op: "Switch"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_64"
  op: "Identity"
  input: "train/gradients/Switch_64"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_42"
  op: "VariableShape"
  input: "train/gradients/Switch_64"
  input: "^train/gradients/Identity_64"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_64/Const"
  op: "Const"
  input: "^train/gradients/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_64"
  op: "Fill"
  input: "train/gradients/VariableShape_42"
  input: "train/gradients/zeros_64/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_64"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_65"
  op: "Switch"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_65"
  op: "Identity"
  input: "train/gradients/Switch_65"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_43"
  op: "VariableShape"
  input: "train/gradients/Switch_65"
  input: "^train/gradients/Identity_65"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_65/Const"
  op: "Const"
  input: "^train/gradients/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_65"
  op: "Fill"
  input: "train/gradients/VariableShape_43"
  input: "train/gradients/zeros_65/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_13/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_65"
  input: "train/gradients/batch_normalization_13/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_14_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_12"
  input: "stage2_block3_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_14_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_14_grad/ShapeN"
  input: "stage2_block3_c2_w/read"
  input: "train/gradients/add_20_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_14_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_12"
  input: "train/gradients/Conv2D_14_grad/ShapeN:1"
  input: "train/gradients/add_20_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_14_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_14_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_14_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_14_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_14_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_14_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_36"
  op: "AddN"
  input: "train/gradients/batch_normalization_13/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_13/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_37"
  op: "AddN"
  input: "train/gradients/batch_normalization_13/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_13/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_13/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_12_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_14_grad/tuple/control_dependency"
  input: "Selu_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_12_grad/SeluGrad"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_12_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_12/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_12/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_12/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_12_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_12/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_12_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_89"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_90"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_91"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_92"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_12/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_12/cond/ReadVariableOp_2"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_12/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_93"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_94"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_95"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_96"
  op: "ZerosLike"
  input: "batch_normalization_12/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_12/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_12/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_12/cond/ReadVariableOp"
  input: "batch_normalization_12/cond/FusedBatchNorm:3"
  input: "batch_normalization_12/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_66"
  op: "Switch"
  input: "add_19"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_66"
  op: "Identity"
  input: "train/gradients/Switch_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_23"
  op: "Shape"
  input: "train/gradients/Switch_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_66/Const"
  op: "Const"
  input: "^train/gradients/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_66"
  op: "Fill"
  input: "train/gradients/Shape_23"
  input: "train/gradients/zeros_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_66"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_67"
  op: "Switch"
  input: "add_19"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_67"
  op: "Identity"
  input: "train/gradients/Switch_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_24"
  op: "Shape"
  input: "train/gradients/Switch_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_67/Const"
  op: "Const"
  input: "^train/gradients/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_67"
  op: "Fill"
  input: "train/gradients/Shape_24"
  input: "train/gradients/zeros_67/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_67"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_68"
  op: "Switch"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_68"
  op: "Identity"
  input: "train/gradients/Switch_68:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_44"
  op: "VariableShape"
  input: "train/gradients/Switch_68:1"
  input: "^train/gradients/Identity_68"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_68/Const"
  op: "Const"
  input: "^train/gradients/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_68"
  op: "Fill"
  input: "train/gradients/VariableShape_44"
  input: "train/gradients/zeros_68/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_68"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_69"
  op: "Switch"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_69"
  op: "Identity"
  input: "train/gradients/Switch_69:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_45"
  op: "VariableShape"
  input: "train/gradients/Switch_69:1"
  input: "^train/gradients/Identity_69"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_69/Const"
  op: "Const"
  input: "^train/gradients/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_69"
  op: "Fill"
  input: "train/gradients/VariableShape_45"
  input: "train/gradients/zeros_69/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_69"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_38"
  op: "AddN"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_19_grad/Shape"
  op: "Shape"
  input: "Conv2D_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_19_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_19_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_19_grad/Shape"
  input: "train/gradients/add_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_19_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_38"
  input: "train/gradients/add_19_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_19_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_19_grad/Sum"
  input: "train/gradients/add_19_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_19_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_38"
  input: "train/gradients/add_19_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_19_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_19_grad/Sum_1"
  input: "train/gradients/add_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_19_grad/Reshape"
  input: "^train/gradients/add_19_grad/Reshape_1"
}
node {
  name: "train/gradients/add_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_19_grad/Reshape"
  input: "^train/gradients/add_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_19_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_19_grad/Reshape_1"
  input: "^train/gradients/add_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_19_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_70"
  op: "Switch"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_70"
  op: "Identity"
  input: "train/gradients/Switch_70"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_46"
  op: "VariableShape"
  input: "train/gradients/Switch_70"
  input: "^train/gradients/Identity_70"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_70/Const"
  op: "Const"
  input: "^train/gradients/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_70"
  op: "Fill"
  input: "train/gradients/VariableShape_46"
  input: "train/gradients/zeros_70/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_70"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_71"
  op: "Switch"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_71"
  op: "Identity"
  input: "train/gradients/Switch_71"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_47"
  op: "VariableShape"
  input: "train/gradients/Switch_71"
  input: "^train/gradients/Identity_71"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_71/Const"
  op: "Const"
  input: "^train/gradients/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_71"
  op: "Fill"
  input: "train/gradients/VariableShape_47"
  input: "train/gradients/zeros_71/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_12/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_71"
  input: "train/gradients/batch_normalization_12/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_13_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_6/add_4"
  input: "stage2_block3_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_13_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_13_grad/ShapeN"
  input: "stage2_block3_c1_w/read"
  input: "train/gradients/add_19_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_13_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_6/add_4"
  input: "train/gradients/Conv2D_13_grad/ShapeN:1"
  input: "train/gradients/add_19_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_13_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_13_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_13_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_13_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_13_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_13_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_39"
  op: "AddN"
  input: "train/gradients/batch_normalization_12/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_12/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_40"
  op: "AddN"
  input: "train/gradients/batch_normalization_12/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_12/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_12/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_41"
  op: "AddN"
  input: "train/gradients/Add_21_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_13_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_21_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_6/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_6/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_6/add_4_grad/Shape"
  input: "train/gradients/dropout_6/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_41"
  input: "train/gradients/dropout_6/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_6/add_4_grad/Sum"
  input: "train/gradients/dropout_6/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_41"
  input: "train/gradients/dropout_6/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_6/add_4_grad/Sum_1"
  input: "train/gradients/dropout_6/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_6/add_4_grad/Reshape"
  input: "^train/gradients/dropout_6/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_6/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_6/add_4_grad/Reshape"
  input: "^train/gradients/dropout_6/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_6/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_6/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_6/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_6/mul_7_grad/Shape"
  input: "train/gradients/dropout_6/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_6/add_4_grad/tuple/control_dependency"
  input: "dropout_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_6/mul_7_grad/Mul"
  input: "train/gradients/dropout_6/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_6/mul_7_grad/Sum"
  input: "train/gradients/dropout_6/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_6/Sqrt"
  input: "train/gradients/dropout_6/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_6/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_6/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_6/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_6/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_6/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_6/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_6/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_6/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_6/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_6/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_6/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_6/add_1_grad/Shape"
  input: "train/gradients/dropout_6/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_6/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_6/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_6/add_1_grad/Sum"
  input: "train/gradients/dropout_6/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_6/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_6/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_6/add_1_grad/Sum_1"
  input: "train/gradients/dropout_6/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_6/add_1_grad/Reshape"
  input: "^train/gradients/dropout_6/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_6/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_6/add_1_grad/Reshape"
  input: "^train/gradients/dropout_6/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_6/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_6/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Shape"
  op: "Shape"
  input: "mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_6/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_6/mul_grad/Shape"
  input: "train/gradients/dropout_6/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_6/add_1_grad/tuple/control_dependency"
  input: "dropout_6/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_6/mul_grad/Mul"
  input: "train/gradients/dropout_6/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_6/mul_grad/Sum"
  input: "train/gradients/dropout_6/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_5"
  input: "train/gradients/dropout_6/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_6/mul_grad/Mul_1"
  input: "train/gradients/dropout_6/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_6/mul_grad/Sum_1"
  input: "train/gradients/dropout_6/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_6/mul_grad/Reshape"
  input: "^train/gradients/dropout_6/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_6/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_6/mul_grad/Reshape"
  input: "^train/gradients/dropout_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_6/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_6/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_6/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Shape"
  op: "Shape"
  input: "Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_5_grad/Shape"
  input: "train/gradients/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_6/mul_grad/tuple/control_dependency"
  input: "mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_5_grad/Mul"
  input: "train/gradients/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_5_grad/Sum"
  input: "train/gradients/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Mul_1"
  op: "Mul"
  input: "Add_18"
  input: "train/gradients/dropout_6/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_5_grad/Mul_1"
  input: "train/gradients/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_5_grad/Sum_1"
  input: "train/gradients/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_5_grad/Reshape"
  input: "^train/gradients/mul_5_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_5_grad/Reshape"
  input: "^train/gradients/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_5_grad/Reshape_1"
  input: "^train/gradients/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/Shape"
  op: "Shape"
  input: "dropout_5/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/Shape_1"
  op: "Shape"
  input: "Selu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_18_grad/Shape"
  input: "train/gradients/Add_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Add_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_18_grad/Sum"
  input: "train/gradients/Add_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Add_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_18_grad/Sum_1"
  input: "train/gradients/Add_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_18_grad/Reshape"
  input: "^train/gradients/Add_18_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_18_grad/Reshape"
  input: "^train/gradients/Add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_18_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_18_grad/Reshape_1"
  input: "^train/gradients/Add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_18_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_11_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_18_grad/tuple/control_dependency_1"
  input: "Selu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_11_grad/SeluGrad"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_11_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_11/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_11/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_11/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_11_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_11/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_11_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_97"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_98"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_99"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_100"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_11/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_11/cond/ReadVariableOp_2"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_11/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_101"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_102"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_103"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_104"
  op: "ZerosLike"
  input: "batch_normalization_11/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_11/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_11/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_11/cond/ReadVariableOp"
  input: "batch_normalization_11/cond/FusedBatchNorm:3"
  input: "batch_normalization_11/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_72"
  op: "Switch"
  input: "add_17"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_72"
  op: "Identity"
  input: "train/gradients/Switch_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_25"
  op: "Shape"
  input: "train/gradients/Switch_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_72/Const"
  op: "Const"
  input: "^train/gradients/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_72"
  op: "Fill"
  input: "train/gradients/Shape_25"
  input: "train/gradients/zeros_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_72"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_73"
  op: "Switch"
  input: "add_17"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_73"
  op: "Identity"
  input: "train/gradients/Switch_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_26"
  op: "Shape"
  input: "train/gradients/Switch_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_73/Const"
  op: "Const"
  input: "^train/gradients/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_73"
  op: "Fill"
  input: "train/gradients/Shape_26"
  input: "train/gradients/zeros_73/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_73"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_74"
  op: "Switch"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_74"
  op: "Identity"
  input: "train/gradients/Switch_74:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_48"
  op: "VariableShape"
  input: "train/gradients/Switch_74:1"
  input: "^train/gradients/Identity_74"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_74/Const"
  op: "Const"
  input: "^train/gradients/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_74"
  op: "Fill"
  input: "train/gradients/VariableShape_48"
  input: "train/gradients/zeros_74/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_74"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_75"
  op: "Switch"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_75"
  op: "Identity"
  input: "train/gradients/Switch_75:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_49"
  op: "VariableShape"
  input: "train/gradients/Switch_75:1"
  input: "^train/gradients/Identity_75"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_75/Const"
  op: "Const"
  input: "^train/gradients/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_75"
  op: "Fill"
  input: "train/gradients/VariableShape_49"
  input: "train/gradients/zeros_75/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_75"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_42"
  op: "AddN"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_17_grad/Shape"
  op: "Shape"
  input: "Conv2D_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_17_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_17_grad/Shape"
  input: "train/gradients/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_17_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_42"
  input: "train/gradients/add_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_17_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_17_grad/Sum"
  input: "train/gradients/add_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_17_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_42"
  input: "train/gradients/add_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_17_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_17_grad/Sum_1"
  input: "train/gradients/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_17_grad/Reshape"
  input: "^train/gradients/add_17_grad/Reshape_1"
}
node {
  name: "train/gradients/add_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_17_grad/Reshape"
  input: "^train/gradients/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_17_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_17_grad/Reshape_1"
  input: "^train/gradients/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_17_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_76"
  op: "Switch"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_76"
  op: "Identity"
  input: "train/gradients/Switch_76"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_50"
  op: "VariableShape"
  input: "train/gradients/Switch_76"
  input: "^train/gradients/Identity_76"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_76/Const"
  op: "Const"
  input: "^train/gradients/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_76"
  op: "Fill"
  input: "train/gradients/VariableShape_50"
  input: "train/gradients/zeros_76/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_76"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_77"
  op: "Switch"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_77"
  op: "Identity"
  input: "train/gradients/Switch_77"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_51"
  op: "VariableShape"
  input: "train/gradients/Switch_77"
  input: "^train/gradients/Identity_77"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_77/Const"
  op: "Const"
  input: "^train/gradients/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_77"
  op: "Fill"
  input: "train/gradients/VariableShape_51"
  input: "train/gradients/zeros_77/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_11/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_77"
  input: "train/gradients/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_12_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_10"
  input: "stage2_block2_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_12_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_12_grad/ShapeN"
  input: "stage2_block2_c2_w/read"
  input: "train/gradients/add_17_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_12_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_10"
  input: "train/gradients/Conv2D_12_grad/ShapeN:1"
  input: "train/gradients/add_17_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_12_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_12_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_12_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_12_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_12_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_12_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_43"
  op: "AddN"
  input: "train/gradients/batch_normalization_11/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_11/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_44"
  op: "AddN"
  input: "train/gradients/batch_normalization_11/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_11/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_11/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_10_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_12_grad/tuple/control_dependency"
  input: "Selu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_10_grad/SeluGrad"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_10_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_10/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_10/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_10/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_10_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_10/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_10_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_105"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_106"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_107"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_108"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_10/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_10/cond/ReadVariableOp_2"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_10/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_109"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_110"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_111"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_112"
  op: "ZerosLike"
  input: "batch_normalization_10/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_10/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_10/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_10/cond/ReadVariableOp"
  input: "batch_normalization_10/cond/FusedBatchNorm:3"
  input: "batch_normalization_10/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_78"
  op: "Switch"
  input: "add_16"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_78"
  op: "Identity"
  input: "train/gradients/Switch_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_27"
  op: "Shape"
  input: "train/gradients/Switch_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_78/Const"
  op: "Const"
  input: "^train/gradients/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_78"
  op: "Fill"
  input: "train/gradients/Shape_27"
  input: "train/gradients/zeros_78/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_78"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_79"
  op: "Switch"
  input: "add_16"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_79"
  op: "Identity"
  input: "train/gradients/Switch_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_28"
  op: "Shape"
  input: "train/gradients/Switch_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_79/Const"
  op: "Const"
  input: "^train/gradients/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_79"
  op: "Fill"
  input: "train/gradients/Shape_28"
  input: "train/gradients/zeros_79/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_79"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_80"
  op: "Switch"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_80"
  op: "Identity"
  input: "train/gradients/Switch_80:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_52"
  op: "VariableShape"
  input: "train/gradients/Switch_80:1"
  input: "^train/gradients/Identity_80"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_80/Const"
  op: "Const"
  input: "^train/gradients/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_80"
  op: "Fill"
  input: "train/gradients/VariableShape_52"
  input: "train/gradients/zeros_80/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_80"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_81"
  op: "Switch"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_81"
  op: "Identity"
  input: "train/gradients/Switch_81:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_53"
  op: "VariableShape"
  input: "train/gradients/Switch_81:1"
  input: "^train/gradients/Identity_81"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_81/Const"
  op: "Const"
  input: "^train/gradients/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_81"
  op: "Fill"
  input: "train/gradients/VariableShape_53"
  input: "train/gradients/zeros_81/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_81"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_45"
  op: "AddN"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_16_grad/Shape"
  op: "Shape"
  input: "Conv2D_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_16_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_16_grad/Shape"
  input: "train/gradients/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_16_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_45"
  input: "train/gradients/add_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_16_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_16_grad/Sum"
  input: "train/gradients/add_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_16_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_45"
  input: "train/gradients/add_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_16_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_16_grad/Sum_1"
  input: "train/gradients/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_16_grad/Reshape"
  input: "^train/gradients/add_16_grad/Reshape_1"
}
node {
  name: "train/gradients/add_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_16_grad/Reshape"
  input: "^train/gradients/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_16_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_16_grad/Reshape_1"
  input: "^train/gradients/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_16_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_82"
  op: "Switch"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_82"
  op: "Identity"
  input: "train/gradients/Switch_82"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_54"
  op: "VariableShape"
  input: "train/gradients/Switch_82"
  input: "^train/gradients/Identity_82"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_82/Const"
  op: "Const"
  input: "^train/gradients/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_82"
  op: "Fill"
  input: "train/gradients/VariableShape_54"
  input: "train/gradients/zeros_82/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_82"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_83"
  op: "Switch"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_83"
  op: "Identity"
  input: "train/gradients/Switch_83"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_55"
  op: "VariableShape"
  input: "train/gradients/Switch_83"
  input: "^train/gradients/Identity_83"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_83/Const"
  op: "Const"
  input: "^train/gradients/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_83"
  op: "Fill"
  input: "train/gradients/VariableShape_55"
  input: "train/gradients/zeros_83/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_10/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_83"
  input: "train/gradients/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_11_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_5/add_4"
  input: "stage2_block2_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_11_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_11_grad/ShapeN"
  input: "stage2_block2_c1_w/read"
  input: "train/gradients/add_16_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_11_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_5/add_4"
  input: "train/gradients/Conv2D_11_grad/ShapeN:1"
  input: "train/gradients/add_16_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_11_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_11_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_11_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_11_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_11_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_11_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_46"
  op: "AddN"
  input: "train/gradients/batch_normalization_10/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_10/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_47"
  op: "AddN"
  input: "train/gradients/batch_normalization_10/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_10/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_10/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_48"
  op: "AddN"
  input: "train/gradients/Add_18_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_11_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_18_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_5/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_5/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_5/add_4_grad/Shape"
  input: "train/gradients/dropout_5/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_48"
  input: "train/gradients/dropout_5/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_5/add_4_grad/Sum"
  input: "train/gradients/dropout_5/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_48"
  input: "train/gradients/dropout_5/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_5/add_4_grad/Sum_1"
  input: "train/gradients/dropout_5/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_5/add_4_grad/Reshape"
  input: "^train/gradients/dropout_5/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_5/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_5/add_4_grad/Reshape"
  input: "^train/gradients/dropout_5/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_5/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_5/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_5/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_5/mul_7_grad/Shape"
  input: "train/gradients/dropout_5/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_5/add_4_grad/tuple/control_dependency"
  input: "dropout_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_5/mul_7_grad/Mul"
  input: "train/gradients/dropout_5/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_5/mul_7_grad/Sum"
  input: "train/gradients/dropout_5/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_5/Sqrt"
  input: "train/gradients/dropout_5/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_5/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_5/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_5/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_5/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_5/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_5/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_5/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_5/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_5/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_5/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_5/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_5/add_1_grad/Shape"
  input: "train/gradients/dropout_5/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_5/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_5/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_5/add_1_grad/Sum"
  input: "train/gradients/dropout_5/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_5/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_5/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_5/add_1_grad/Sum_1"
  input: "train/gradients/dropout_5/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_5/add_1_grad/Reshape"
  input: "^train/gradients/dropout_5/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_5/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_5/add_1_grad/Reshape"
  input: "^train/gradients/dropout_5/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_5/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_5/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Shape"
  op: "Shape"
  input: "mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_5/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_5/mul_grad/Shape"
  input: "train/gradients/dropout_5/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_5/add_1_grad/tuple/control_dependency"
  input: "dropout_5/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_5/mul_grad/Mul"
  input: "train/gradients/dropout_5/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_5/mul_grad/Sum"
  input: "train/gradients/dropout_5/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_4"
  input: "train/gradients/dropout_5/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_5/mul_grad/Mul_1"
  input: "train/gradients/dropout_5/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_5/mul_grad/Sum_1"
  input: "train/gradients/dropout_5/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_5/mul_grad/Reshape"
  input: "^train/gradients/dropout_5/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_5/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_5/mul_grad/Reshape"
  input: "^train/gradients/dropout_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_5/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_5/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_5/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Shape"
  op: "Shape"
  input: "Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_4_grad/Shape"
  input: "train/gradients/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_5/mul_grad/tuple/control_dependency"
  input: "mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_4_grad/Mul"
  input: "train/gradients/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_4_grad/Sum"
  input: "train/gradients/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Mul_1"
  op: "Mul"
  input: "Add_15"
  input: "train/gradients/dropout_5/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_4_grad/Mul_1"
  input: "train/gradients/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_4_grad/Sum_1"
  input: "train/gradients/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_4_grad/Reshape"
  input: "^train/gradients/mul_4_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_4_grad/Reshape"
  input: "^train/gradients/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_4_grad/Reshape_1"
  input: "^train/gradients/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/Shape"
  op: "Shape"
  input: "max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/Shape_1"
  op: "Shape"
  input: "Selu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_15_grad/Shape"
  input: "train/gradients/Add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_4_grad/tuple/control_dependency"
  input: "train/gradients/Add_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_15_grad/Sum"
  input: "train/gradients/Add_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_4_grad/tuple/control_dependency"
  input: "train/gradients/Add_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_15_grad/Sum_1"
  input: "train/gradients/Add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_15_grad/Reshape"
  input: "^train/gradients/Add_15_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_15_grad/Reshape"
  input: "^train/gradients/Add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_15_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_15_grad/Reshape_1"
  input: "^train/gradients/Add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_15_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_9_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_15_grad/tuple/control_dependency_1"
  input: "Selu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_9_grad/SeluGrad"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_9_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_9/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_9/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_9/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_9_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_9/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_9_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_113"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_114"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_115"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_116"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_9/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_9/cond/ReadVariableOp_2"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_9/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_117"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_118"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_119"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_120"
  op: "ZerosLike"
  input: "batch_normalization_9/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_9/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_9/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_9/cond/ReadVariableOp"
  input: "batch_normalization_9/cond/FusedBatchNorm:3"
  input: "batch_normalization_9/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_84"
  op: "Switch"
  input: "add_14"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_84"
  op: "Identity"
  input: "train/gradients/Switch_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_29"
  op: "Shape"
  input: "train/gradients/Switch_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_84/Const"
  op: "Const"
  input: "^train/gradients/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_84"
  op: "Fill"
  input: "train/gradients/Shape_29"
  input: "train/gradients/zeros_84/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_84"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_85"
  op: "Switch"
  input: "add_14"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_85"
  op: "Identity"
  input: "train/gradients/Switch_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_30"
  op: "Shape"
  input: "train/gradients/Switch_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_85/Const"
  op: "Const"
  input: "^train/gradients/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_85"
  op: "Fill"
  input: "train/gradients/Shape_30"
  input: "train/gradients/zeros_85/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_85"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_86"
  op: "Switch"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_86"
  op: "Identity"
  input: "train/gradients/Switch_86:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_56"
  op: "VariableShape"
  input: "train/gradients/Switch_86:1"
  input: "^train/gradients/Identity_86"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_86/Const"
  op: "Const"
  input: "^train/gradients/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_86"
  op: "Fill"
  input: "train/gradients/VariableShape_56"
  input: "train/gradients/zeros_86/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_86"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_87"
  op: "Switch"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_87"
  op: "Identity"
  input: "train/gradients/Switch_87:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_57"
  op: "VariableShape"
  input: "train/gradients/Switch_87:1"
  input: "^train/gradients/Identity_87"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_87/Const"
  op: "Const"
  input: "^train/gradients/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_87"
  op: "Fill"
  input: "train/gradients/VariableShape_57"
  input: "train/gradients/zeros_87/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_87"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_49"
  op: "AddN"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_14_grad/Shape"
  op: "Shape"
  input: "Conv2D_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_14_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_14_grad/Shape"
  input: "train/gradients/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_14_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_49"
  input: "train/gradients/add_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_14_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_14_grad/Sum"
  input: "train/gradients/add_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_14_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_49"
  input: "train/gradients/add_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_14_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_14_grad/Sum_1"
  input: "train/gradients/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_14_grad/Reshape"
  input: "^train/gradients/add_14_grad/Reshape_1"
}
node {
  name: "train/gradients/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_14_grad/Reshape"
  input: "^train/gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_14_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_14_grad/Reshape_1"
  input: "^train/gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_14_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_88"
  op: "Switch"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_88"
  op: "Identity"
  input: "train/gradients/Switch_88"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_58"
  op: "VariableShape"
  input: "train/gradients/Switch_88"
  input: "^train/gradients/Identity_88"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_88/Const"
  op: "Const"
  input: "^train/gradients/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_88"
  op: "Fill"
  input: "train/gradients/VariableShape_58"
  input: "train/gradients/zeros_88/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_88"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_89"
  op: "Switch"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_89"
  op: "Identity"
  input: "train/gradients/Switch_89"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_59"
  op: "VariableShape"
  input: "train/gradients/Switch_89"
  input: "^train/gradients/Identity_89"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_89/Const"
  op: "Const"
  input: "^train/gradients/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_89"
  op: "Fill"
  input: "train/gradients/VariableShape_59"
  input: "train/gradients/zeros_89/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_9/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_89"
  input: "train/gradients/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_10_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_8"
  input: "stage2_block1_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_10_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_10_grad/ShapeN"
  input: "stage2_block1_c2_w/read"
  input: "train/gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_10_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_8"
  input: "train/gradients/Conv2D_10_grad/ShapeN:1"
  input: "train/gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_10_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_10_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_10_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_10_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_10_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_10_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_50"
  op: "AddN"
  input: "train/gradients/batch_normalization_9/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_9/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_51"
  op: "AddN"
  input: "train/gradients/batch_normalization_9/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_9/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_9/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_8_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_10_grad/tuple/control_dependency"
  input: "Selu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_8_grad/SeluGrad"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_8_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_8/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_8/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_8/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_8_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_8/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_8_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_121"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_122"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_123"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_124"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_8/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_8/cond/ReadVariableOp_2"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_8/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_125"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_126"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_127"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_128"
  op: "ZerosLike"
  input: "batch_normalization_8/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_8/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_8/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_8/cond/ReadVariableOp"
  input: "batch_normalization_8/cond/FusedBatchNorm:3"
  input: "batch_normalization_8/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_90"
  op: "Switch"
  input: "add_13"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_90"
  op: "Identity"
  input: "train/gradients/Switch_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_31"
  op: "Shape"
  input: "train/gradients/Switch_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_90/Const"
  op: "Const"
  input: "^train/gradients/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_90"
  op: "Fill"
  input: "train/gradients/Shape_31"
  input: "train/gradients/zeros_90/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_90"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_91"
  op: "Switch"
  input: "add_13"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_91"
  op: "Identity"
  input: "train/gradients/Switch_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_32"
  op: "Shape"
  input: "train/gradients/Switch_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_91/Const"
  op: "Const"
  input: "^train/gradients/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_91"
  op: "Fill"
  input: "train/gradients/Shape_32"
  input: "train/gradients/zeros_91/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_91"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_92"
  op: "Switch"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_92"
  op: "Identity"
  input: "train/gradients/Switch_92:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_60"
  op: "VariableShape"
  input: "train/gradients/Switch_92:1"
  input: "^train/gradients/Identity_92"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_92/Const"
  op: "Const"
  input: "^train/gradients/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_92"
  op: "Fill"
  input: "train/gradients/VariableShape_60"
  input: "train/gradients/zeros_92/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_92"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_93"
  op: "Switch"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_93"
  op: "Identity"
  input: "train/gradients/Switch_93:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_61"
  op: "VariableShape"
  input: "train/gradients/Switch_93:1"
  input: "^train/gradients/Identity_93"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_93/Const"
  op: "Const"
  input: "^train/gradients/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_93"
  op: "Fill"
  input: "train/gradients/VariableShape_61"
  input: "train/gradients/zeros_93/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_93"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_52"
  op: "AddN"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_13_grad/Shape"
  op: "Shape"
  input: "Conv2D_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_13_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_13_grad/Shape"
  input: "train/gradients/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_13_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_52"
  input: "train/gradients/add_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_13_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_13_grad/Sum"
  input: "train/gradients/add_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_13_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_52"
  input: "train/gradients/add_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_13_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_13_grad/Sum_1"
  input: "train/gradients/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_13_grad/Reshape"
  input: "^train/gradients/add_13_grad/Reshape_1"
}
node {
  name: "train/gradients/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_13_grad/Reshape"
  input: "^train/gradients/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_13_grad/Reshape_1"
  input: "^train/gradients/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_13_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_94"
  op: "Switch"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_94"
  op: "Identity"
  input: "train/gradients/Switch_94"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_62"
  op: "VariableShape"
  input: "train/gradients/Switch_94"
  input: "^train/gradients/Identity_94"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_94/Const"
  op: "Const"
  input: "^train/gradients/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_94"
  op: "Fill"
  input: "train/gradients/VariableShape_62"
  input: "train/gradients/zeros_94/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_94"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_95"
  op: "Switch"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_95"
  op: "Identity"
  input: "train/gradients/Switch_95"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_63"
  op: "VariableShape"
  input: "train/gradients/Switch_95"
  input: "^train/gradients/Identity_95"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_95/Const"
  op: "Const"
  input: "^train/gradients/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_95"
  op: "Fill"
  input: "train/gradients/VariableShape_63"
  input: "train/gradients/zeros_95/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_8/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_95"
  input: "train/gradients/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_9_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d/MaxPool"
  input: "stage2_block1_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_9_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_9_grad/ShapeN"
  input: "stage2_block1_c1_w/read"
  input: "train/gradients/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_9_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d/MaxPool"
  input: "train/gradients/Conv2D_9_grad/ShapeN:1"
  input: "train/gradients/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_9_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_9_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_9_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_9_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_9_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_9_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_53"
  op: "AddN"
  input: "train/gradients/batch_normalization_8/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_8/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_54"
  op: "AddN"
  input: "train/gradients/batch_normalization_8/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_8/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_8/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_55"
  op: "AddN"
  input: "train/gradients/Add_15_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_9_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_15_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout_4/add_4"
  input: "max_pooling2d/MaxPool"
  input: "train/gradients/AddN_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_4/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_4/add_4_grad/Shape"
  input: "train/gradients/dropout_4/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  input: "train/gradients/dropout_4/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_4/add_4_grad/Sum"
  input: "train/gradients/dropout_4/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  input: "train/gradients/dropout_4/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_4/add_4_grad/Sum_1"
  input: "train/gradients/dropout_4/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_4/add_4_grad/Reshape"
  input: "^train/gradients/dropout_4/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_4/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_4/add_4_grad/Reshape"
  input: "^train/gradients/dropout_4/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_4/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_4/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_4/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_4/mul_7_grad/Shape"
  input: "train/gradients/dropout_4/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_4/add_4_grad/tuple/control_dependency"
  input: "dropout_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_4/mul_7_grad/Mul"
  input: "train/gradients/dropout_4/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_4/mul_7_grad/Sum"
  input: "train/gradients/dropout_4/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_4/Sqrt"
  input: "train/gradients/dropout_4/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_4/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_4/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_4/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_4/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_4/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_4/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_4/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_4/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_4/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_4/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_4/add_1_grad/Shape"
  input: "train/gradients/dropout_4/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_4/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_4/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_4/add_1_grad/Sum"
  input: "train/gradients/dropout_4/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_4/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_4/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_4/add_1_grad/Sum_1"
  input: "train/gradients/dropout_4/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_4/add_1_grad/Reshape"
  input: "^train/gradients/dropout_4/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_4/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_4/add_1_grad/Reshape"
  input: "^train/gradients/dropout_4/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_4/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_4/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Shape"
  op: "Shape"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_4/mul_grad/Shape"
  input: "train/gradients/dropout_4/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_4/add_1_grad/tuple/control_dependency"
  input: "dropout_4/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_4/mul_grad/Mul"
  input: "train/gradients/dropout_4/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_4/mul_grad/Sum"
  input: "train/gradients/dropout_4/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_3"
  input: "train/gradients/dropout_4/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_4/mul_grad/Mul_1"
  input: "train/gradients/dropout_4/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_4/mul_grad/Sum_1"
  input: "train/gradients/dropout_4/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_4/mul_grad/Reshape"
  input: "^train/gradients/dropout_4/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_4/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_4/mul_grad/Reshape"
  input: "^train/gradients/dropout_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_4/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_4/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_4/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Shape"
  op: "Shape"
  input: "Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_3_grad/Shape"
  input: "train/gradients/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_4/mul_grad/tuple/control_dependency"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_3_grad/Mul"
  input: "train/gradients/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_3_grad/Sum"
  input: "train/gradients/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Mul_1"
  op: "Mul"
  input: "Add_12"
  input: "train/gradients/dropout_4/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_3_grad/Mul_1"
  input: "train/gradients/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_3_grad/Sum_1"
  input: "train/gradients/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_3_grad/Reshape"
  input: "^train/gradients/mul_3_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_3_grad/Reshape"
  input: "^train/gradients/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_3_grad/Reshape_1"
  input: "^train/gradients/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/Shape"
  op: "Shape"
  input: "dropout_3/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/Shape_1"
  op: "Shape"
  input: "Selu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_12_grad/Shape"
  input: "train/gradients/Add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Add_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_12_grad/Sum"
  input: "train/gradients/Add_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Add_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_12_grad/Sum_1"
  input: "train/gradients/Add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_12_grad/Reshape"
  input: "^train/gradients/Add_12_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_12_grad/Reshape"
  input: "^train/gradients/Add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_12_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_12_grad/Reshape_1"
  input: "^train/gradients/Add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_12_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_7_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_12_grad/tuple/control_dependency_1"
  input: "Selu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_7_grad/SeluGrad"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_7_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_7/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_7/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_7/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_7_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_7/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_7_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_129"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_130"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_131"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_132"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_7/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_7/cond/ReadVariableOp_2"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_7/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_133"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_134"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_135"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_136"
  op: "ZerosLike"
  input: "batch_normalization_7/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_7/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_7/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_7/cond/ReadVariableOp"
  input: "batch_normalization_7/cond/FusedBatchNorm:3"
  input: "batch_normalization_7/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_96"
  op: "Switch"
  input: "add_11"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_96"
  op: "Identity"
  input: "train/gradients/Switch_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_33"
  op: "Shape"
  input: "train/gradients/Switch_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_96/Const"
  op: "Const"
  input: "^train/gradients/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_96"
  op: "Fill"
  input: "train/gradients/Shape_33"
  input: "train/gradients/zeros_96/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_96"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_97"
  op: "Switch"
  input: "add_11"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_97"
  op: "Identity"
  input: "train/gradients/Switch_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_34"
  op: "Shape"
  input: "train/gradients/Switch_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_97/Const"
  op: "Const"
  input: "^train/gradients/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_97"
  op: "Fill"
  input: "train/gradients/Shape_34"
  input: "train/gradients/zeros_97/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_97"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_98"
  op: "Switch"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_98"
  op: "Identity"
  input: "train/gradients/Switch_98:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_64"
  op: "VariableShape"
  input: "train/gradients/Switch_98:1"
  input: "^train/gradients/Identity_98"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_98/Const"
  op: "Const"
  input: "^train/gradients/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_98"
  op: "Fill"
  input: "train/gradients/VariableShape_64"
  input: "train/gradients/zeros_98/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_98"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_99"
  op: "Switch"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_99"
  op: "Identity"
  input: "train/gradients/Switch_99:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_65"
  op: "VariableShape"
  input: "train/gradients/Switch_99:1"
  input: "^train/gradients/Identity_99"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_99/Const"
  op: "Const"
  input: "^train/gradients/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_99"
  op: "Fill"
  input: "train/gradients/VariableShape_65"
  input: "train/gradients/zeros_99/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_99"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_56"
  op: "AddN"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_11_grad/Shape"
  op: "Shape"
  input: "Conv2D_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_11_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_11_grad/Shape"
  input: "train/gradients/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_11_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_56"
  input: "train/gradients/add_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_11_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_11_grad/Sum"
  input: "train/gradients/add_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_11_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_56"
  input: "train/gradients/add_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_11_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_11_grad/Sum_1"
  input: "train/gradients/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_11_grad/Reshape"
  input: "^train/gradients/add_11_grad/Reshape_1"
}
node {
  name: "train/gradients/add_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_11_grad/Reshape"
  input: "^train/gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_11_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_11_grad/Reshape_1"
  input: "^train/gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_11_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_100"
  op: "Switch"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_100"
  op: "Identity"
  input: "train/gradients/Switch_100"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_66"
  op: "VariableShape"
  input: "train/gradients/Switch_100"
  input: "^train/gradients/Identity_100"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_100/Const"
  op: "Const"
  input: "^train/gradients/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_100"
  op: "Fill"
  input: "train/gradients/VariableShape_66"
  input: "train/gradients/zeros_100/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_100"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_101"
  op: "Switch"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_101"
  op: "Identity"
  input: "train/gradients/Switch_101"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_67"
  op: "VariableShape"
  input: "train/gradients/Switch_101"
  input: "^train/gradients/Identity_101"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_101/Const"
  op: "Const"
  input: "^train/gradients/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_101"
  op: "Fill"
  input: "train/gradients/VariableShape_67"
  input: "train/gradients/zeros_101/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_7/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_101"
  input: "train/gradients/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_8_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_6"
  input: "stage1_block4_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_8_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_8_grad/ShapeN"
  input: "stage1_block4_c2_w/read"
  input: "train/gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_8_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_6"
  input: "train/gradients/Conv2D_8_grad/ShapeN:1"
  input: "train/gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_8_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_8_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_8_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_8_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_8_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_8_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_57"
  op: "AddN"
  input: "train/gradients/batch_normalization_7/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_7/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_58"
  op: "AddN"
  input: "train/gradients/batch_normalization_7/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_7/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_7/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_6_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_8_grad/tuple/control_dependency"
  input: "Selu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_6_grad/SeluGrad"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_6_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_6/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_6/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_6/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_6_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_6/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_6_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_137"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_138"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_139"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_140"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_6/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_6/cond/ReadVariableOp_2"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_6/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_141"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_142"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_143"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_144"
  op: "ZerosLike"
  input: "batch_normalization_6/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_6/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_6/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_6/cond/ReadVariableOp"
  input: "batch_normalization_6/cond/FusedBatchNorm:3"
  input: "batch_normalization_6/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_102"
  op: "Switch"
  input: "add_10"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_102"
  op: "Identity"
  input: "train/gradients/Switch_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_35"
  op: "Shape"
  input: "train/gradients/Switch_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_102/Const"
  op: "Const"
  input: "^train/gradients/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_102"
  op: "Fill"
  input: "train/gradients/Shape_35"
  input: "train/gradients/zeros_102/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_102"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_103"
  op: "Switch"
  input: "add_10"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_103"
  op: "Identity"
  input: "train/gradients/Switch_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_36"
  op: "Shape"
  input: "train/gradients/Switch_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_103/Const"
  op: "Const"
  input: "^train/gradients/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_103"
  op: "Fill"
  input: "train/gradients/Shape_36"
  input: "train/gradients/zeros_103/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_103"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_104"
  op: "Switch"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_104"
  op: "Identity"
  input: "train/gradients/Switch_104:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_68"
  op: "VariableShape"
  input: "train/gradients/Switch_104:1"
  input: "^train/gradients/Identity_104"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_104/Const"
  op: "Const"
  input: "^train/gradients/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_104"
  op: "Fill"
  input: "train/gradients/VariableShape_68"
  input: "train/gradients/zeros_104/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_104"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_105"
  op: "Switch"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_105"
  op: "Identity"
  input: "train/gradients/Switch_105:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_69"
  op: "VariableShape"
  input: "train/gradients/Switch_105:1"
  input: "^train/gradients/Identity_105"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_105/Const"
  op: "Const"
  input: "^train/gradients/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_105"
  op: "Fill"
  input: "train/gradients/VariableShape_69"
  input: "train/gradients/zeros_105/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_105"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_59"
  op: "AddN"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_10_grad/Shape"
  op: "Shape"
  input: "Conv2D_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_10_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_10_grad/Shape"
  input: "train/gradients/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_10_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_59"
  input: "train/gradients/add_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_10_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_10_grad/Sum"
  input: "train/gradients/add_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_10_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_59"
  input: "train/gradients/add_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_10_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_10_grad/Sum_1"
  input: "train/gradients/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_10_grad/Reshape"
  input: "^train/gradients/add_10_grad/Reshape_1"
}
node {
  name: "train/gradients/add_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_10_grad/Reshape"
  input: "^train/gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_10_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_10_grad/Reshape_1"
  input: "^train/gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_10_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_106"
  op: "Switch"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_106"
  op: "Identity"
  input: "train/gradients/Switch_106"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_70"
  op: "VariableShape"
  input: "train/gradients/Switch_106"
  input: "^train/gradients/Identity_106"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_106/Const"
  op: "Const"
  input: "^train/gradients/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_106"
  op: "Fill"
  input: "train/gradients/VariableShape_70"
  input: "train/gradients/zeros_106/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_106"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_107"
  op: "Switch"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_107"
  op: "Identity"
  input: "train/gradients/Switch_107"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_71"
  op: "VariableShape"
  input: "train/gradients/Switch_107"
  input: "^train/gradients/Identity_107"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_107/Const"
  op: "Const"
  input: "^train/gradients/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_107"
  op: "Fill"
  input: "train/gradients/VariableShape_71"
  input: "train/gradients/zeros_107/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_6/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_107"
  input: "train/gradients/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_7_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_3/add_4"
  input: "stage1_block4_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_7_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_7_grad/ShapeN"
  input: "stage1_block4_c1_w/read"
  input: "train/gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_7_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_3/add_4"
  input: "train/gradients/Conv2D_7_grad/ShapeN:1"
  input: "train/gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_7_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_7_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_7_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_7_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_7_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_7_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_60"
  op: "AddN"
  input: "train/gradients/batch_normalization_6/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_6/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_61"
  op: "AddN"
  input: "train/gradients/batch_normalization_6/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_6/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_6/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_62"
  op: "AddN"
  input: "train/gradients/Add_12_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_7_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_12_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_3/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_3/add_4_grad/Shape"
  input: "train/gradients/dropout_3/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_62"
  input: "train/gradients/dropout_3/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_3/add_4_grad/Sum"
  input: "train/gradients/dropout_3/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_62"
  input: "train/gradients/dropout_3/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_3/add_4_grad/Sum_1"
  input: "train/gradients/dropout_3/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_3/add_4_grad/Reshape"
  input: "^train/gradients/dropout_3/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_3/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_3/add_4_grad/Reshape"
  input: "^train/gradients/dropout_3/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_3/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_3/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_3/mul_7_grad/Shape"
  input: "train/gradients/dropout_3/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_3/add_4_grad/tuple/control_dependency"
  input: "dropout_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_3/mul_7_grad/Mul"
  input: "train/gradients/dropout_3/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_3/mul_7_grad/Sum"
  input: "train/gradients/dropout_3/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/Sqrt"
  input: "train/gradients/dropout_3/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_3/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_3/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_3/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_3/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_3/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_3/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_3/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_3/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_3/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_3/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_3/add_1_grad/Shape"
  input: "train/gradients/dropout_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_3/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_3/add_1_grad/Sum"
  input: "train/gradients/dropout_3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_3/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_3/add_1_grad/Sum_1"
  input: "train/gradients/dropout_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_3/add_1_grad/Reshape"
  input: "^train/gradients/dropout_3/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_3/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_3/add_1_grad/Reshape"
  input: "^train/gradients/dropout_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_3/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Shape"
  op: "Shape"
  input: "mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_3/mul_grad/Shape"
  input: "train/gradients/dropout_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_3/add_1_grad/tuple/control_dependency"
  input: "dropout_3/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_3/mul_grad/Mul"
  input: "train/gradients/dropout_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_3/mul_grad/Sum"
  input: "train/gradients/dropout_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_2"
  input: "train/gradients/dropout_3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_3/mul_grad/Mul_1"
  input: "train/gradients/dropout_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_3/mul_grad/Sum_1"
  input: "train/gradients/dropout_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_3/mul_grad/Reshape"
  input: "^train/gradients/dropout_3/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_3/mul_grad/Reshape"
  input: "^train/gradients/dropout_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_3/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Shape"
  op: "Shape"
  input: "Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_2_grad/Shape"
  input: "train/gradients/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_3/mul_grad/tuple/control_dependency"
  input: "mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_2_grad/Mul"
  input: "train/gradients/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_2_grad/Sum"
  input: "train/gradients/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Mul_1"
  op: "Mul"
  input: "Add_9"
  input: "train/gradients/dropout_3/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_2_grad/Mul_1"
  input: "train/gradients/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_2_grad/Sum_1"
  input: "train/gradients/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_2_grad/Reshape"
  input: "^train/gradients/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_2_grad/Reshape"
  input: "^train/gradients/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_2_grad/Reshape_1"
  input: "^train/gradients/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/Shape"
  op: "Shape"
  input: "dropout_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/Shape_1"
  op: "Shape"
  input: "Selu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_9_grad/Shape"
  input: "train/gradients/Add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/Add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_9_grad/Sum"
  input: "train/gradients/Add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/Add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_9_grad/Sum_1"
  input: "train/gradients/Add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_9_grad/Reshape"
  input: "^train/gradients/Add_9_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_9_grad/Reshape"
  input: "^train/gradients/Add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_9_grad/Reshape_1"
  input: "^train/gradients/Add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_5_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_9_grad/tuple/control_dependency_1"
  input: "Selu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_5_grad/SeluGrad"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_5_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_5/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_5/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_5/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_5_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_5/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_5_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_145"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_146"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_147"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_148"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_5/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_5/cond/ReadVariableOp_2"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_5/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_149"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_150"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_151"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_152"
  op: "ZerosLike"
  input: "batch_normalization_5/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_5/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_5/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_5/cond/ReadVariableOp"
  input: "batch_normalization_5/cond/FusedBatchNorm:3"
  input: "batch_normalization_5/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_108"
  op: "Switch"
  input: "add_8"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_108"
  op: "Identity"
  input: "train/gradients/Switch_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_37"
  op: "Shape"
  input: "train/gradients/Switch_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_108/Const"
  op: "Const"
  input: "^train/gradients/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_108"
  op: "Fill"
  input: "train/gradients/Shape_37"
  input: "train/gradients/zeros_108/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_108"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_109"
  op: "Switch"
  input: "add_8"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_109"
  op: "Identity"
  input: "train/gradients/Switch_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_38"
  op: "Shape"
  input: "train/gradients/Switch_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_109/Const"
  op: "Const"
  input: "^train/gradients/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_109"
  op: "Fill"
  input: "train/gradients/Shape_38"
  input: "train/gradients/zeros_109/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_109"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_110"
  op: "Switch"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_110"
  op: "Identity"
  input: "train/gradients/Switch_110:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_72"
  op: "VariableShape"
  input: "train/gradients/Switch_110:1"
  input: "^train/gradients/Identity_110"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_110/Const"
  op: "Const"
  input: "^train/gradients/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_110"
  op: "Fill"
  input: "train/gradients/VariableShape_72"
  input: "train/gradients/zeros_110/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_110"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_111"
  op: "Switch"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_111"
  op: "Identity"
  input: "train/gradients/Switch_111:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_73"
  op: "VariableShape"
  input: "train/gradients/Switch_111:1"
  input: "^train/gradients/Identity_111"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_111/Const"
  op: "Const"
  input: "^train/gradients/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_111"
  op: "Fill"
  input: "train/gradients/VariableShape_73"
  input: "train/gradients/zeros_111/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_111"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_63"
  op: "AddN"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_8_grad/Shape"
  op: "Shape"
  input: "Conv2D_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_8_grad/Shape"
  input: "train/gradients/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_8_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_63"
  input: "train/gradients/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_8_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_8_grad/Sum"
  input: "train/gradients/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_8_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_63"
  input: "train/gradients/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_8_grad/Sum_1"
  input: "train/gradients/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_8_grad/Reshape"
  input: "^train/gradients/add_8_grad/Reshape_1"
}
node {
  name: "train/gradients/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_8_grad/Reshape"
  input: "^train/gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_8_grad/Reshape_1"
  input: "^train/gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_112"
  op: "Switch"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_112"
  op: "Identity"
  input: "train/gradients/Switch_112"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_74"
  op: "VariableShape"
  input: "train/gradients/Switch_112"
  input: "^train/gradients/Identity_112"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_112/Const"
  op: "Const"
  input: "^train/gradients/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_112"
  op: "Fill"
  input: "train/gradients/VariableShape_74"
  input: "train/gradients/zeros_112/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_112"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_113"
  op: "Switch"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_113"
  op: "Identity"
  input: "train/gradients/Switch_113"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_75"
  op: "VariableShape"
  input: "train/gradients/Switch_113"
  input: "^train/gradients/Identity_113"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_113/Const"
  op: "Const"
  input: "^train/gradients/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_113"
  op: "Fill"
  input: "train/gradients/VariableShape_75"
  input: "train/gradients/zeros_113/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_5/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_113"
  input: "train/gradients/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_6_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_4"
  input: "stage1_block3_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_6_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_6_grad/ShapeN"
  input: "stage1_block3_c2_w/read"
  input: "train/gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_6_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_4"
  input: "train/gradients/Conv2D_6_grad/ShapeN:1"
  input: "train/gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_6_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_6_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_6_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_6_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_6_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_6_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_64"
  op: "AddN"
  input: "train/gradients/batch_normalization_5/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_5/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_65"
  op: "AddN"
  input: "train/gradients/batch_normalization_5/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_5/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_5/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_4_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_6_grad/tuple/control_dependency"
  input: "Selu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_4_grad/SeluGrad"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_4_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_4/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_4_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_4_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_153"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_154"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_155"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_156"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_4/cond/ReadVariableOp_2"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_4/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_157"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_158"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_159"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_160"
  op: "ZerosLike"
  input: "batch_normalization_4/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_4/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_4/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_4/cond/ReadVariableOp"
  input: "batch_normalization_4/cond/FusedBatchNorm:3"
  input: "batch_normalization_4/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_114"
  op: "Switch"
  input: "add_7"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_114"
  op: "Identity"
  input: "train/gradients/Switch_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_39"
  op: "Shape"
  input: "train/gradients/Switch_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_114/Const"
  op: "Const"
  input: "^train/gradients/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_114"
  op: "Fill"
  input: "train/gradients/Shape_39"
  input: "train/gradients/zeros_114/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_114"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_115"
  op: "Switch"
  input: "add_7"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_115"
  op: "Identity"
  input: "train/gradients/Switch_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_40"
  op: "Shape"
  input: "train/gradients/Switch_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_115/Const"
  op: "Const"
  input: "^train/gradients/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_115"
  op: "Fill"
  input: "train/gradients/Shape_40"
  input: "train/gradients/zeros_115/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_115"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_116"
  op: "Switch"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_116"
  op: "Identity"
  input: "train/gradients/Switch_116:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_76"
  op: "VariableShape"
  input: "train/gradients/Switch_116:1"
  input: "^train/gradients/Identity_116"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_116/Const"
  op: "Const"
  input: "^train/gradients/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_116"
  op: "Fill"
  input: "train/gradients/VariableShape_76"
  input: "train/gradients/zeros_116/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_116"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_117"
  op: "Switch"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_117"
  op: "Identity"
  input: "train/gradients/Switch_117:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_77"
  op: "VariableShape"
  input: "train/gradients/Switch_117:1"
  input: "^train/gradients/Identity_117"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_117/Const"
  op: "Const"
  input: "^train/gradients/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_117"
  op: "Fill"
  input: "train/gradients/VariableShape_77"
  input: "train/gradients/zeros_117/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_117"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_66"
  op: "AddN"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_7_grad/Shape"
  op: "Shape"
  input: "Conv2D_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_7_grad/Shape"
  input: "train/gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_66"
  input: "train/gradients/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_7_grad/Sum"
  input: "train/gradients/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_66"
  input: "train/gradients/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_7_grad/Sum_1"
  input: "train/gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_7_grad/Reshape"
  input: "^train/gradients/add_7_grad/Reshape_1"
}
node {
  name: "train/gradients/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_7_grad/Reshape"
  input: "^train/gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_7_grad/Reshape_1"
  input: "^train/gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_118"
  op: "Switch"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_118"
  op: "Identity"
  input: "train/gradients/Switch_118"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_78"
  op: "VariableShape"
  input: "train/gradients/Switch_118"
  input: "^train/gradients/Identity_118"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_118/Const"
  op: "Const"
  input: "^train/gradients/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_118"
  op: "Fill"
  input: "train/gradients/VariableShape_78"
  input: "train/gradients/zeros_118/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_118"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_119"
  op: "Switch"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_119"
  op: "Identity"
  input: "train/gradients/Switch_119"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_79"
  op: "VariableShape"
  input: "train/gradients/Switch_119"
  input: "^train/gradients/Identity_119"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_119/Const"
  op: "Const"
  input: "^train/gradients/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_119"
  op: "Fill"
  input: "train/gradients/VariableShape_79"
  input: "train/gradients/zeros_119/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_4/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_119"
  input: "train/gradients/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_5_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_2/add_4"
  input: "stage1_block3_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_5_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_5_grad/ShapeN"
  input: "stage1_block3_c1_w/read"
  input: "train/gradients/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_5_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_2/add_4"
  input: "train/gradients/Conv2D_5_grad/ShapeN:1"
  input: "train/gradients/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_5_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_5_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_5_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_5_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_5_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_5_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_67"
  op: "AddN"
  input: "train/gradients/batch_normalization_4/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_4/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_68"
  op: "AddN"
  input: "train/gradients/batch_normalization_4/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_4/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_4/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_69"
  op: "AddN"
  input: "train/gradients/Add_9_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_5_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_2/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_2/add_4_grad/Shape"
  input: "train/gradients/dropout_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_69"
  input: "train/gradients/dropout_2/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_2/add_4_grad/Sum"
  input: "train/gradients/dropout_2/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_69"
  input: "train/gradients/dropout_2/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_2/add_4_grad/Sum_1"
  input: "train/gradients/dropout_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_2/add_4_grad/Reshape"
  input: "^train/gradients/dropout_2/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_2/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_2/add_4_grad/Reshape"
  input: "^train/gradients/dropout_2/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_2/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_2/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_2/mul_7_grad/Shape"
  input: "train/gradients/dropout_2/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_2/add_4_grad/tuple/control_dependency"
  input: "dropout_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_2/mul_7_grad/Mul"
  input: "train/gradients/dropout_2/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_2/mul_7_grad/Sum"
  input: "train/gradients/dropout_2/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/Sqrt"
  input: "train/gradients/dropout_2/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_2/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_2/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_2/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_2/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_2/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_2/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_2/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_2/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_2/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_2/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_2/add_1_grad/Shape"
  input: "train/gradients/dropout_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_2/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_2/add_1_grad/Sum"
  input: "train/gradients/dropout_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_2/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_2/add_1_grad/Sum_1"
  input: "train/gradients/dropout_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_2/add_1_grad/Reshape"
  input: "^train/gradients/dropout_2/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_2/add_1_grad/Reshape"
  input: "^train/gradients/dropout_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_2/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Shape"
  op: "Shape"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_2/mul_grad/Shape"
  input: "train/gradients/dropout_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_2/add_1_grad/tuple/control_dependency"
  input: "dropout_2/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_2/mul_grad/Mul"
  input: "train/gradients/dropout_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_2/mul_grad/Sum"
  input: "train/gradients/dropout_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Mul_1"
  op: "Mul"
  input: "mul_1"
  input: "train/gradients/dropout_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_2/mul_grad/Mul_1"
  input: "train/gradients/dropout_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_2/mul_grad/Sum_1"
  input: "train/gradients/dropout_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_2/mul_grad/Reshape"
  input: "^train/gradients/dropout_2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_2/mul_grad/Reshape"
  input: "^train/gradients/dropout_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_2/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_1_grad/Shape"
  input: "train/gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_2/mul_grad/tuple/control_dependency"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_1_grad/Mul"
  input: "train/gradients/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_1_grad/Sum"
  input: "train/gradients/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Mul_1"
  op: "Mul"
  input: "Add_6"
  input: "train/gradients/dropout_2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_1_grad/Mul_1"
  input: "train/gradients/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_1_grad/Sum_1"
  input: "train/gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_1_grad/Reshape"
  input: "^train/gradients/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_1_grad/Reshape"
  input: "^train/gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_1_grad/Reshape_1"
  input: "^train/gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/Shape"
  op: "Shape"
  input: "dropout_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/Shape_1"
  op: "Shape"
  input: "Selu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_6_grad/Shape"
  input: "train/gradients/Add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_6_grad/Sum"
  input: "train/gradients/Add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_6_grad/Sum_1"
  input: "train/gradients/Add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_6_grad/Reshape"
  input: "^train/gradients/Add_6_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_6_grad/Reshape"
  input: "^train/gradients/Add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_6_grad/Reshape_1"
  input: "^train/gradients/Add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_3_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_6_grad/tuple/control_dependency_1"
  input: "Selu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_3_grad/SeluGrad"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_3_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_3/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_3_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_3_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_161"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_162"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_163"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_164"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_3/cond/ReadVariableOp_2"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_3/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_165"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_166"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_167"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_168"
  op: "ZerosLike"
  input: "batch_normalization_3/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_3/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_3/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_3/cond/ReadVariableOp"
  input: "batch_normalization_3/cond/FusedBatchNorm:3"
  input: "batch_normalization_3/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_120"
  op: "Switch"
  input: "add_5"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_120"
  op: "Identity"
  input: "train/gradients/Switch_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_41"
  op: "Shape"
  input: "train/gradients/Switch_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_120/Const"
  op: "Const"
  input: "^train/gradients/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_120"
  op: "Fill"
  input: "train/gradients/Shape_41"
  input: "train/gradients/zeros_120/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_120"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_121"
  op: "Switch"
  input: "add_5"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_121"
  op: "Identity"
  input: "train/gradients/Switch_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_42"
  op: "Shape"
  input: "train/gradients/Switch_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_121/Const"
  op: "Const"
  input: "^train/gradients/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_121"
  op: "Fill"
  input: "train/gradients/Shape_42"
  input: "train/gradients/zeros_121/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_121"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_122"
  op: "Switch"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_122"
  op: "Identity"
  input: "train/gradients/Switch_122:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_80"
  op: "VariableShape"
  input: "train/gradients/Switch_122:1"
  input: "^train/gradients/Identity_122"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_122/Const"
  op: "Const"
  input: "^train/gradients/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_122"
  op: "Fill"
  input: "train/gradients/VariableShape_80"
  input: "train/gradients/zeros_122/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_122"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_123"
  op: "Switch"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_123"
  op: "Identity"
  input: "train/gradients/Switch_123:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_81"
  op: "VariableShape"
  input: "train/gradients/Switch_123:1"
  input: "^train/gradients/Identity_123"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_123/Const"
  op: "Const"
  input: "^train/gradients/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_123"
  op: "Fill"
  input: "train/gradients/VariableShape_81"
  input: "train/gradients/zeros_123/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_123"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_70"
  op: "AddN"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_5_grad/Shape"
  op: "Shape"
  input: "Conv2D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_5_grad/Shape"
  input: "train/gradients/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_5_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_70"
  input: "train/gradients/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_5_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_5_grad/Sum"
  input: "train/gradients/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_5_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_70"
  input: "train/gradients/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_5_grad/Sum_1"
  input: "train/gradients/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_5_grad/Reshape"
  input: "^train/gradients/add_5_grad/Reshape_1"
}
node {
  name: "train/gradients/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_5_grad/Reshape"
  input: "^train/gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_5_grad/Reshape_1"
  input: "^train/gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_124"
  op: "Switch"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_124"
  op: "Identity"
  input: "train/gradients/Switch_124"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_82"
  op: "VariableShape"
  input: "train/gradients/Switch_124"
  input: "^train/gradients/Identity_124"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_124/Const"
  op: "Const"
  input: "^train/gradients/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_124"
  op: "Fill"
  input: "train/gradients/VariableShape_82"
  input: "train/gradients/zeros_124/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_124"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_125"
  op: "Switch"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_125"
  op: "Identity"
  input: "train/gradients/Switch_125"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_83"
  op: "VariableShape"
  input: "train/gradients/Switch_125"
  input: "^train/gradients/Identity_125"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_125/Const"
  op: "Const"
  input: "^train/gradients/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_125"
  op: "Fill"
  input: "train/gradients/VariableShape_83"
  input: "train/gradients/zeros_125/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_3/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_125"
  input: "train/gradients/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_4_grad/ShapeN"
  op: "ShapeN"
  input: "Selu_2"
  input: "stage1_block2_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_4_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_4_grad/ShapeN"
  input: "stage1_block2_c2_w/read"
  input: "train/gradients/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu_2"
  input: "train/gradients/Conv2D_4_grad/ShapeN:1"
  input: "train/gradients/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_4_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_4_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_4_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_4_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_71"
  op: "AddN"
  input: "train/gradients/batch_normalization_3/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_3/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_72"
  op: "AddN"
  input: "train/gradients/batch_normalization_3/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_3/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_3/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_2_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_4_grad/tuple/control_dependency"
  input: "Selu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_2_grad/SeluGrad"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_2_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_2/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_2_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_2_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_169"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_170"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_171"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_172"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_2/cond/ReadVariableOp_2"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_2/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_173"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_174"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_175"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_176"
  op: "ZerosLike"
  input: "batch_normalization_2/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_2/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_2/cond/ReadVariableOp"
  input: "batch_normalization_2/cond/FusedBatchNorm:3"
  input: "batch_normalization_2/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_126"
  op: "Switch"
  input: "add_4"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_126"
  op: "Identity"
  input: "train/gradients/Switch_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_43"
  op: "Shape"
  input: "train/gradients/Switch_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_126/Const"
  op: "Const"
  input: "^train/gradients/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_126"
  op: "Fill"
  input: "train/gradients/Shape_43"
  input: "train/gradients/zeros_126/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_126"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_127"
  op: "Switch"
  input: "add_4"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_127"
  op: "Identity"
  input: "train/gradients/Switch_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_44"
  op: "Shape"
  input: "train/gradients/Switch_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_127/Const"
  op: "Const"
  input: "^train/gradients/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_127"
  op: "Fill"
  input: "train/gradients/Shape_44"
  input: "train/gradients/zeros_127/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_127"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_128"
  op: "Switch"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_128"
  op: "Identity"
  input: "train/gradients/Switch_128:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_84"
  op: "VariableShape"
  input: "train/gradients/Switch_128:1"
  input: "^train/gradients/Identity_128"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_128/Const"
  op: "Const"
  input: "^train/gradients/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_128"
  op: "Fill"
  input: "train/gradients/VariableShape_84"
  input: "train/gradients/zeros_128/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_128"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_129"
  op: "Switch"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_129"
  op: "Identity"
  input: "train/gradients/Switch_129:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_85"
  op: "VariableShape"
  input: "train/gradients/Switch_129:1"
  input: "^train/gradients/Identity_129"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_129/Const"
  op: "Const"
  input: "^train/gradients/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_129"
  op: "Fill"
  input: "train/gradients/VariableShape_85"
  input: "train/gradients/zeros_129/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_129"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_73"
  op: "AddN"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_4_grad/Shape"
  op: "Shape"
  input: "Conv2D_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_4_grad/Shape"
  input: "train/gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_73"
  input: "train/gradients/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_4_grad/Sum"
  input: "train/gradients/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_73"
  input: "train/gradients/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_4_grad/Sum_1"
  input: "train/gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_4_grad/Reshape"
  input: "^train/gradients/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_4_grad/Reshape"
  input: "^train/gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_4_grad/Reshape_1"
  input: "^train/gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_130"
  op: "Switch"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_130"
  op: "Identity"
  input: "train/gradients/Switch_130"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_86"
  op: "VariableShape"
  input: "train/gradients/Switch_130"
  input: "^train/gradients/Identity_130"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_130/Const"
  op: "Const"
  input: "^train/gradients/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_130"
  op: "Fill"
  input: "train/gradients/VariableShape_86"
  input: "train/gradients/zeros_130/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_130"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_131"
  op: "Switch"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_131"
  op: "Identity"
  input: "train/gradients/Switch_131"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_87"
  op: "VariableShape"
  input: "train/gradients/Switch_131"
  input: "^train/gradients/Identity_131"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_131/Const"
  op: "Const"
  input: "^train/gradients/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_131"
  op: "Fill"
  input: "train/gradients/VariableShape_87"
  input: "train/gradients/zeros_131/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_2/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_131"
  input: "train/gradients/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_3_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_1/add_4"
  input: "stage1_block2_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_3_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_3_grad/ShapeN"
  input: "stage1_block2_c1_w/read"
  input: "train/gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_1/add_4"
  input: "train/gradients/Conv2D_3_grad/ShapeN:1"
  input: "train/gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_3_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_3_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_3_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_3_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_74"
  op: "AddN"
  input: "train/gradients/batch_normalization_2/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_2/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_75"
  op: "AddN"
  input: "train/gradients/batch_normalization_2/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_2/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_2/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_76"
  op: "AddN"
  input: "train/gradients/Add_6_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/Shape"
  op: "Shape"
  input: "dropout_1/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/add_4_grad/Shape"
  input: "train/gradients/dropout_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_76"
  input: "train/gradients/dropout_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/add_4_grad/Sum"
  input: "train/gradients/dropout_1/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_76"
  input: "train/gradients/dropout_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/add_4_grad/Sum_1"
  input: "train/gradients/dropout_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/add_4_grad/Reshape"
  input: "^train/gradients/dropout_1/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/add_4_grad/Reshape"
  input: "^train/gradients/dropout_1/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout_1/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/mul_7_grad/Shape"
  input: "train/gradients/dropout_1/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_1/add_4_grad/tuple/control_dependency"
  input: "dropout_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_7_grad/Mul"
  input: "train/gradients/dropout_1/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_7_grad/Sum"
  input: "train/gradients/dropout_1/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/Sqrt"
  input: "train/gradients/dropout_1/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_7_grad/Mul_1"
  input: "train/gradients/dropout_1/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_7_grad/Sum_1"
  input: "train/gradients/dropout_1/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_7_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout_1/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/add_1_grad/Shape"
  input: "train/gradients/dropout_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/add_1_grad/Sum"
  input: "train/gradients/dropout_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/add_1_grad/Sum_1"
  input: "train/gradients/dropout_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/add_1_grad/Reshape"
  input: "^train/gradients/dropout_1/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/add_1_grad/Reshape"
  input: "^train/gradients/dropout_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Shape"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/mul_grad/Shape"
  input: "train/gradients/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_1/add_1_grad/tuple/control_dependency"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_grad/Mul"
  input: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_grad/Sum"
  input: "train/gradients/dropout_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Mul_1"
  op: "Mul"
  input: "mul"
  input: "train/gradients/dropout_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_grad/Mul_1"
  input: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_grad/Sum_1"
  input: "train/gradients/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/mul_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/mul_grad/Shape"
  op: "Shape"
  input: "Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/mul_grad/Shape"
  input: "train/gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_grad/Mul"
  input: "train/gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/mul_grad/Sum"
  input: "train/gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "Add_3"
  input: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_grad/Mul_1"
  input: "train/gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/mul_grad/Sum_1"
  input: "train/gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/mul_grad/Reshape"
  input: "^train/gradients/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/mul_grad/Reshape"
  input: "^train/gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/mul_grad/Reshape_1"
  input: "^train/gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/Shape"
  op: "Shape"
  input: "dropout/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/Shape_1"
  op: "Shape"
  input: "Selu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Add_3_grad/Shape"
  input: "train/gradients/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/mul_grad/tuple/control_dependency"
  input: "train/gradients/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Add_3_grad/Sum"
  input: "train/gradients/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/mul_grad/tuple/control_dependency"
  input: "train/gradients/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Add_3_grad/Sum_1"
  input: "train/gradients/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Add_3_grad/Reshape"
  input: "^train/gradients/Add_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Add_3_grad/Reshape"
  input: "^train/gradients/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Add_3_grad/Reshape_1"
  input: "^train/gradients/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_1_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Add_3_grad/tuple/control_dependency_1"
  input: "Selu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_1_grad/SeluGrad"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_1_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_1_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_1_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_177"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_178"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_179"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_180"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization_1/cond/ReadVariableOp_2"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization_1/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_181"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_182"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_183"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_184"
  op: "ZerosLike"
  input: "batch_normalization_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization_1/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization_1/cond/ReadVariableOp"
  input: "batch_normalization_1/cond/FusedBatchNorm:3"
  input: "batch_normalization_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_132"
  op: "Switch"
  input: "add_2"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_132"
  op: "Identity"
  input: "train/gradients/Switch_132:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_45"
  op: "Shape"
  input: "train/gradients/Switch_132:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_132/Const"
  op: "Const"
  input: "^train/gradients/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_132"
  op: "Fill"
  input: "train/gradients/Shape_45"
  input: "train/gradients/zeros_132/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_132"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_133"
  op: "Switch"
  input: "add_2"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_133"
  op: "Identity"
  input: "train/gradients/Switch_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_46"
  op: "Shape"
  input: "train/gradients/Switch_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_133/Const"
  op: "Const"
  input: "^train/gradients/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_133"
  op: "Fill"
  input: "train/gradients/Shape_46"
  input: "train/gradients/zeros_133/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_133"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_134"
  op: "Switch"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_134"
  op: "Identity"
  input: "train/gradients/Switch_134:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_88"
  op: "VariableShape"
  input: "train/gradients/Switch_134:1"
  input: "^train/gradients/Identity_134"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_134/Const"
  op: "Const"
  input: "^train/gradients/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_134"
  op: "Fill"
  input: "train/gradients/VariableShape_88"
  input: "train/gradients/zeros_134/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_134"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_135"
  op: "Switch"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_135"
  op: "Identity"
  input: "train/gradients/Switch_135:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_89"
  op: "VariableShape"
  input: "train/gradients/Switch_135:1"
  input: "^train/gradients/Identity_135"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_135/Const"
  op: "Const"
  input: "^train/gradients/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_135"
  op: "Fill"
  input: "train/gradients/VariableShape_89"
  input: "train/gradients/zeros_135/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_135"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_77"
  op: "AddN"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Shape"
  op: "Shape"
  input: "Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_2_grad/Shape"
  input: "train/gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_77"
  input: "train/gradients/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_2_grad/Sum"
  input: "train/gradients/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_77"
  input: "train/gradients/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_2_grad/Sum_1"
  input: "train/gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_2_grad/Reshape"
  input: "^train/gradients/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_2_grad/Reshape"
  input: "^train/gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_2_grad/Reshape_1"
  input: "^train/gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_136"
  op: "Switch"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_136"
  op: "Identity"
  input: "train/gradients/Switch_136"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_90"
  op: "VariableShape"
  input: "train/gradients/Switch_136"
  input: "^train/gradients/Identity_136"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_136/Const"
  op: "Const"
  input: "^train/gradients/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_136"
  op: "Fill"
  input: "train/gradients/VariableShape_90"
  input: "train/gradients/zeros_136/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_136"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_137"
  op: "Switch"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_137"
  op: "Identity"
  input: "train/gradients/Switch_137"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_91"
  op: "VariableShape"
  input: "train/gradients/Switch_137"
  input: "^train/gradients/Identity_137"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_137/Const"
  op: "Const"
  input: "^train/gradients/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_137"
  op: "Fill"
  input: "train/gradients/VariableShape_91"
  input: "train/gradients/zeros_137/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization_1/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_137"
  input: "train/gradients/batch_normalization_1/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "Selu"
  input: "stage1_block1_c2_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_2_grad/ShapeN"
  input: "stage1_block1_c2_w/read"
  input: "train/gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Selu"
  input: "train/gradients/Conv2D_2_grad/ShapeN:1"
  input: "train/gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_78"
  op: "AddN"
  input: "train/gradients/batch_normalization_1/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_1/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_79"
  op: "AddN"
  input: "train/gradients/batch_normalization_1/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization_1/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization_1/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/Selu_grad/SeluGrad"
  op: "SeluGrad"
  input: "train/gradients/Conv2D_2_grad/tuple/control_dependency"
  input: "Selu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Selu_grad/SeluGrad"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^train/gradients/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Selu_grad/SeluGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_185"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_186"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_187"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_188"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "batch_normalization/cond/ReadVariableOp_2"
  input: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp"
  input: "batch_normalization/cond/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_189"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_190"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_191"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_192"
  op: "ZerosLike"
  input: "batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "batch_normalization/cond/ReadVariableOp"
  input: "batch_normalization/cond/FusedBatchNorm:3"
  input: "batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_138"
  op: "Switch"
  input: "add_1"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_138"
  op: "Identity"
  input: "train/gradients/Switch_138:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_47"
  op: "Shape"
  input: "train/gradients/Switch_138:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_138/Const"
  op: "Const"
  input: "^train/gradients/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_138"
  op: "Fill"
  input: "train/gradients/Shape_47"
  input: "train/gradients/zeros_138/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "train/gradients/zeros_138"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_139"
  op: "Switch"
  input: "add_1"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Identity_139"
  op: "Identity"
  input: "train/gradients/Switch_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_48"
  op: "Shape"
  input: "train/gradients/Switch_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_139/Const"
  op: "Const"
  input: "^train/gradients/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_139"
  op: "Fill"
  input: "train/gradients/Shape_48"
  input: "train/gradients/zeros_139/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_139"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_140"
  op: "Switch"
  input: "batch_normalization/gamma"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_140"
  op: "Identity"
  input: "train/gradients/Switch_140:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_92"
  op: "VariableShape"
  input: "train/gradients/Switch_140:1"
  input: "^train/gradients/Identity_140"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_140/Const"
  op: "Const"
  input: "^train/gradients/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_140"
  op: "Fill"
  input: "train/gradients/VariableShape_92"
  input: "train/gradients/zeros_140/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_140"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_141"
  op: "Switch"
  input: "batch_normalization/beta"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_141"
  op: "Identity"
  input: "train/gradients/Switch_141:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_93"
  op: "VariableShape"
  input: "train/gradients/Switch_141:1"
  input: "^train/gradients/Identity_141"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_141/Const"
  op: "Const"
  input: "^train/gradients/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_141"
  op: "Fill"
  input: "train/gradients/VariableShape_93"
  input: "train/gradients/zeros_141/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "train/gradients/zeros_141"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_80"
  op: "AddN"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Shape"
  op: "Shape"
  input: "Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_1_grad/Shape"
  input: "train/gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_80"
  input: "train/gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_1_grad/Sum"
  input: "train/gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_80"
  input: "train/gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_1_grad/Sum_1"
  input: "train/gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_1_grad/Reshape"
  input: "^train/gradients/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_1_grad/Reshape"
  input: "^train/gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_1_grad/Reshape_1"
  input: "^train/gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_142"
  op: "Switch"
  input: "batch_normalization/gamma"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_142"
  op: "Identity"
  input: "train/gradients/Switch_142"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_94"
  op: "VariableShape"
  input: "train/gradients/Switch_142"
  input: "^train/gradients/Identity_142"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_142/Const"
  op: "Const"
  input: "^train/gradients/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_142"
  op: "Fill"
  input: "train/gradients/VariableShape_94"
  input: "train/gradients/zeros_142/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/ReadVariableOp/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_142"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch_143"
  op: "Switch"
  input: "batch_normalization/beta"
  input: "batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/Identity_143"
  op: "Identity"
  input: "train/gradients/Switch_143"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "train/gradients/VariableShape_95"
  op: "VariableShape"
  input: "train/gradients/Switch_143"
  input: "^train/gradients/Identity_143"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_143/Const"
  op: "Const"
  input: "^train/gradients/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_143"
  op: "Fill"
  input: "train/gradients/VariableShape_95"
  input: "train/gradients/zeros_143/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/batch_normalization/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/zeros_143"
  input: "train/gradients/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "dropout/add_4"
  input: "stage1_block1_c1_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_1_grad/ShapeN"
  input: "stage1_block1_c1_w/read"
  input: "train/gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout/add_4"
  input: "train/gradients/Conv2D_1_grad/ShapeN:1"
  input: "train/gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_81"
  op: "AddN"
  input: "train/gradients/batch_normalization/cond/ReadVariableOp_2/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization/cond/ReadVariableOp/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/ReadVariableOp_2/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_82"
  op: "AddN"
  input: "train/gradients/batch_normalization/cond/ReadVariableOp_3/Switch_grad/cond_grad"
  input: "train/gradients/batch_normalization/cond/ReadVariableOp_1/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/batch_normalization/cond/ReadVariableOp_3/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_83"
  op: "AddN"
  input: "train/gradients/Add_3_grad/tuple/control_dependency"
  input: "train/gradients/Conv2D_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/Shape"
  op: "Shape"
  input: "dropout/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/Shape_1"
  op: "Shape"
  input: "dropout/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/add_4_grad/Shape"
  input: "train/gradients/dropout/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_83"
  input: "train/gradients/dropout/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/add_4_grad/Sum"
  input: "train/gradients/dropout/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_83"
  input: "train/gradients/dropout/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/add_4_grad/Sum_1"
  input: "train/gradients/dropout/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/add_4_grad/Reshape"
  input: "^train/gradients/dropout/add_4_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/add_4_grad/Reshape"
  input: "^train/gradients/dropout/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/add_4_grad/Reshape_1"
  input: "^train/gradients/dropout/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Shape"
  op: "Shape"
  input: "dropout/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Shape_1"
  op: "Shape"
  input: "dropout/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/mul_7_grad/Shape"
  input: "train/gradients/dropout/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout/add_4_grad/tuple/control_dependency"
  input: "dropout/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_7_grad/Mul"
  input: "train/gradients/dropout/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/mul_7_grad/Sum"
  input: "train/gradients/dropout/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Mul_1"
  op: "Mul"
  input: "dropout/Sqrt"
  input: "train/gradients/dropout/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_7_grad/Mul_1"
  input: "train/gradients/dropout/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/mul_7_grad/Sum_1"
  input: "train/gradients/dropout/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/mul_7_grad/Reshape"
  input: "^train/gradients/dropout/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/mul_7_grad/Reshape"
  input: "^train/gradients/dropout/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/mul_7_grad/Reshape_1"
  input: "^train/gradients/dropout/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/Shape"
  op: "Shape"
  input: "dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/Shape_1"
  op: "Shape"
  input: "dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/add_1_grad/Shape"
  input: "train/gradients/dropout/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/add_1_grad/Sum"
  input: "train/gradients/dropout/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_7_grad/tuple/control_dependency_1"
  input: "train/gradients/dropout/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/add_1_grad/Sum_1"
  input: "train/gradients/dropout/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/add_1_grad/Reshape"
  input: "^train/gradients/dropout/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/add_1_grad/Reshape"
  input: "^train/gradients/dropout/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/add_1_grad/Reshape_1"
  input: "^train/gradients/dropout/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/mul_grad/Shape"
  input: "train/gradients/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/dropout/add_1_grad/tuple/control_dependency"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/Mul"
  input: "train/gradients/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/Sum"
  input: "train/gradients/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "add"
  input: "train/gradients/dropout/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/Mul_1"
  input: "train/gradients/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/Sum_1"
  input: "train/gradients/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/mul_grad/Reshape"
  input: "^train/gradients/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/mul_grad/Reshape"
  input: "^train/gradients/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/Shape"
  op: "Shape"
  input: "Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_grad/Shape"
  input: "train/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_grad/Sum"
  input: "train/gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_grad/Sum_1"
  input: "train/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_grad/Reshape"
  input: "^train/gradients/add_grad/Reshape_1"
}
node {
  name: "train/gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_grad/Reshape"
  input: "^train/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_grad/Reshape_1"
  input: "^train/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "input_batch"
  input: "input_layer_c0_w/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_grad/ShapeN"
  input: "input_layer_c0_w/read"
  input: "train/gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input_batch"
  input: "train/gradients/Conv2D_grad/ShapeN:1"
  input: "train/gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "train/beta1_power"
    }
  }
}
node {
  name: "train/beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "AssignVariableOp"
  input: "train/beta1_power"
  input: "train/beta1_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "train/beta2_power"
    }
  }
}
node {
  name: "train/beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "AssignVariableOp"
  input: "train/beta2_power"
  input: "train/beta2_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_layer_c0_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "input_layer_c0_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "input_layer_c0_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "input_layer_c0_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "input_layer_c0_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer_c0_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_layer_c0_w/Adam/Assign"
  op: "Assign"
  input: "input_layer_c0_w/Adam"
  input: "input_layer_c0_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_layer_c0_w/Adam/read"
  op: "Identity"
  input: "input_layer_c0_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
}
node {
  name: "input_layer_c0_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "input_layer_c0_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "input_layer_c0_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "input_layer_c0_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "input_layer_c0_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer_c0_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_layer_c0_w/Adam_1/Assign"
  op: "Assign"
  input: "input_layer_c0_w/Adam_1"
  input: "input_layer_c0_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_layer_c0_w/Adam_1/read"
  op: "Identity"
  input: "input_layer_c0_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
}
node {
  name: "input_layer_c0_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "input_layer_c0_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_layer_c0_b/Adam/Assign"
  op: "Assign"
  input: "input_layer_c0_b/Adam"
  input: "input_layer_c0_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_layer_c0_b/Adam/read"
  op: "Identity"
  input: "input_layer_c0_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
}
node {
  name: "input_layer_c0_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "input_layer_c0_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_layer_c0_b/Adam_1/Assign"
  op: "Assign"
  input: "input_layer_c0_b/Adam_1"
  input: "input_layer_c0_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_layer_c0_b/Adam_1/read"
  op: "Identity"
  input: "input_layer_c0_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block1_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block1_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block1_c1_w/Adam"
  input: "stage1_block1_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam/read"
  op: "Identity"
  input: "stage1_block1_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block1_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block1_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block1_c1_w/Adam_1"
  input: "stage1_block1_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block1_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block1_c1_b/Adam"
  input: "stage1_block1_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam/read"
  op: "Identity"
  input: "stage1_block1_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block1_c1_b/Adam_1"
  input: "stage1_block1_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block1_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma/Adam"
  input: "batch_normalization/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma/Adam_1"
  input: "batch_normalization/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/beta/Adam"
  input: "batch_normalization/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization/beta/Adam_1"
  input: "batch_normalization/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block1_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block1_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block1_c2_w/Adam"
  input: "stage1_block1_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam/read"
  op: "Identity"
  input: "stage1_block1_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block1_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block1_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block1_c2_w/Adam_1"
  input: "stage1_block1_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block1_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block1_c2_b/Adam"
  input: "stage1_block1_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam/read"
  op: "Identity"
  input: "stage1_block1_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block1_c2_b/Adam_1"
  input: "stage1_block1_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block1_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block1_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma/Adam"
  input: "batch_normalization_1/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma/Adam_1"
  input: "batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta/Adam"
  input: "batch_normalization_1/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta/Adam_1"
  input: "batch_normalization_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block2_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block2_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block2_c1_w/Adam"
  input: "stage1_block2_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam/read"
  op: "Identity"
  input: "stage1_block2_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block2_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block2_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block2_c1_w/Adam_1"
  input: "stage1_block2_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block2_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block2_c1_b/Adam"
  input: "stage1_block2_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam/read"
  op: "Identity"
  input: "stage1_block2_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block2_c1_b/Adam_1"
  input: "stage1_block2_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block2_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma/Adam"
  input: "batch_normalization_2/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma/Adam_1"
  input: "batch_normalization_2/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta/Adam"
  input: "batch_normalization_2/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta/Adam_1"
  input: "batch_normalization_2/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block2_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block2_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block2_c2_w/Adam"
  input: "stage1_block2_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam/read"
  op: "Identity"
  input: "stage1_block2_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block2_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block2_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block2_c2_w/Adam_1"
  input: "stage1_block2_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block2_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block2_c2_b/Adam"
  input: "stage1_block2_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam/read"
  op: "Identity"
  input: "stage1_block2_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block2_c2_b/Adam_1"
  input: "stage1_block2_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block2_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block2_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma/Adam"
  input: "batch_normalization_3/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma/Adam_1"
  input: "batch_normalization_3/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta/Adam"
  input: "batch_normalization_3/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta/Adam_1"
  input: "batch_normalization_3/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block3_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block3_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block3_c1_w/Adam"
  input: "stage1_block3_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam/read"
  op: "Identity"
  input: "stage1_block3_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block3_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block3_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block3_c1_w/Adam_1"
  input: "stage1_block3_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block3_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block3_c1_b/Adam"
  input: "stage1_block3_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam/read"
  op: "Identity"
  input: "stage1_block3_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block3_c1_b/Adam_1"
  input: "stage1_block3_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block3_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma/Adam"
  input: "batch_normalization_4/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma/Adam_1"
  input: "batch_normalization_4/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta/Adam"
  input: "batch_normalization_4/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta/Adam_1"
  input: "batch_normalization_4/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block3_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block3_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block3_c2_w/Adam"
  input: "stage1_block3_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam/read"
  op: "Identity"
  input: "stage1_block3_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block3_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block3_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block3_c2_w/Adam_1"
  input: "stage1_block3_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block3_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block3_c2_b/Adam"
  input: "stage1_block3_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam/read"
  op: "Identity"
  input: "stage1_block3_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block3_c2_b/Adam_1"
  input: "stage1_block3_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block3_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block3_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma/Adam"
  input: "batch_normalization_5/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma/Adam_1"
  input: "batch_normalization_5/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta/Adam"
  input: "batch_normalization_5/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta/Adam_1"
  input: "batch_normalization_5/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block4_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block4_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block4_c1_w/Adam"
  input: "stage1_block4_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam/read"
  op: "Identity"
  input: "stage1_block4_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block4_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block4_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block4_c1_w/Adam_1"
  input: "stage1_block4_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block4_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block4_c1_b/Adam"
  input: "stage1_block4_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam/read"
  op: "Identity"
  input: "stage1_block4_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block4_c1_b/Adam_1"
  input: "stage1_block4_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block4_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/gamma/Adam"
  input: "batch_normalization_6/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/gamma/Adam_1"
  input: "batch_normalization_6/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/beta/Adam"
  input: "batch_normalization_6/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_6/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_6/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_6/beta/Adam_1"
  input: "batch_normalization_6/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_6/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage1_block4_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage1_block4_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage1_block4_c2_w/Adam"
  input: "stage1_block4_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam/read"
  op: "Identity"
  input: "stage1_block4_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage1_block4_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage1_block4_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block4_c2_w/Adam_1"
  input: "stage1_block4_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage1_block4_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage1_block4_c2_b/Adam"
  input: "stage1_block4_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam/read"
  op: "Identity"
  input: "stage1_block4_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage1_block4_c2_b/Adam_1"
  input: "stage1_block4_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage1_block4_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage1_block4_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/gamma/Adam"
  input: "batch_normalization_7/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/gamma/Adam_1"
  input: "batch_normalization_7/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/beta/Adam"
  input: "batch_normalization_7/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_7/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_7/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_7/beta/Adam_1"
  input: "batch_normalization_7/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_7/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block1_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block1_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block1_c1_w/Adam"
  input: "stage2_block1_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam/read"
  op: "Identity"
  input: "stage2_block1_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block1_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block1_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block1_c1_w/Adam_1"
  input: "stage2_block1_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block1_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block1_c1_b/Adam"
  input: "stage2_block1_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam/read"
  op: "Identity"
  input: "stage2_block1_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block1_c1_b/Adam_1"
  input: "stage2_block1_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block1_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/gamma/Adam"
  input: "batch_normalization_8/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/gamma/Adam_1"
  input: "batch_normalization_8/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/beta/Adam"
  input: "batch_normalization_8/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_8/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_8/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_8/beta/Adam_1"
  input: "batch_normalization_8/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_8/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block1_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block1_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block1_c2_w/Adam"
  input: "stage2_block1_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam/read"
  op: "Identity"
  input: "stage2_block1_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block1_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block1_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block1_c2_w/Adam_1"
  input: "stage2_block1_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block1_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block1_c2_b/Adam"
  input: "stage2_block1_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam/read"
  op: "Identity"
  input: "stage2_block1_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block1_c2_b/Adam_1"
  input: "stage2_block1_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block1_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block1_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/gamma/Adam"
  input: "batch_normalization_9/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/gamma/Adam_1"
  input: "batch_normalization_9/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/beta/Adam"
  input: "batch_normalization_9/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_9/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_9/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_9/beta/Adam_1"
  input: "batch_normalization_9/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_9/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block2_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block2_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block2_c1_w/Adam"
  input: "stage2_block2_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam/read"
  op: "Identity"
  input: "stage2_block2_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block2_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block2_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block2_c1_w/Adam_1"
  input: "stage2_block2_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block2_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block2_c1_b/Adam"
  input: "stage2_block2_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam/read"
  op: "Identity"
  input: "stage2_block2_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block2_c1_b/Adam_1"
  input: "stage2_block2_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block2_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/gamma/Adam"
  input: "batch_normalization_10/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/gamma/Adam_1"
  input: "batch_normalization_10/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/beta/Adam"
  input: "batch_normalization_10/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_10/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_10/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_10/beta/Adam_1"
  input: "batch_normalization_10/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_10/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block2_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block2_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block2_c2_w/Adam"
  input: "stage2_block2_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam/read"
  op: "Identity"
  input: "stage2_block2_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block2_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block2_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block2_c2_w/Adam_1"
  input: "stage2_block2_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block2_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block2_c2_b/Adam"
  input: "stage2_block2_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam/read"
  op: "Identity"
  input: "stage2_block2_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block2_c2_b/Adam_1"
  input: "stage2_block2_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block2_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block2_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/gamma/Adam"
  input: "batch_normalization_11/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/gamma/Adam_1"
  input: "batch_normalization_11/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/beta/Adam"
  input: "batch_normalization_11/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_11/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_11/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_11/beta/Adam_1"
  input: "batch_normalization_11/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_11/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block3_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block3_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block3_c1_w/Adam"
  input: "stage2_block3_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam/read"
  op: "Identity"
  input: "stage2_block3_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block3_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block3_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block3_c1_w/Adam_1"
  input: "stage2_block3_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block3_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block3_c1_b/Adam"
  input: "stage2_block3_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam/read"
  op: "Identity"
  input: "stage2_block3_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block3_c1_b/Adam_1"
  input: "stage2_block3_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block3_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/gamma/Adam"
  input: "batch_normalization_12/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/gamma/Adam_1"
  input: "batch_normalization_12/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/beta/Adam"
  input: "batch_normalization_12/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_12/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_12/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_12/beta/Adam_1"
  input: "batch_normalization_12/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_12/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block3_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block3_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block3_c2_w/Adam"
  input: "stage2_block3_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam/read"
  op: "Identity"
  input: "stage2_block3_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block3_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block3_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block3_c2_w/Adam_1"
  input: "stage2_block3_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block3_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block3_c2_b/Adam"
  input: "stage2_block3_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam/read"
  op: "Identity"
  input: "stage2_block3_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block3_c2_b/Adam_1"
  input: "stage2_block3_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block3_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block3_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/gamma/Adam"
  input: "batch_normalization_13/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/gamma/Adam_1"
  input: "batch_normalization_13/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/beta/Adam"
  input: "batch_normalization_13/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_13/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_13/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_13/beta/Adam_1"
  input: "batch_normalization_13/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_13/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block4_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block4_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block4_c1_w/Adam"
  input: "stage2_block4_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam/read"
  op: "Identity"
  input: "stage2_block4_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block4_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block4_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block4_c1_w/Adam_1"
  input: "stage2_block4_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block4_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block4_c1_b/Adam"
  input: "stage2_block4_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam/read"
  op: "Identity"
  input: "stage2_block4_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block4_c1_b/Adam_1"
  input: "stage2_block4_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block4_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/gamma/Adam"
  input: "batch_normalization_14/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/gamma/Adam_1"
  input: "batch_normalization_14/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/beta/Adam"
  input: "batch_normalization_14/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_14/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_14/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_14/beta/Adam_1"
  input: "batch_normalization_14/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_14/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage2_block4_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage2_block4_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage2_block4_c2_w/Adam"
  input: "stage2_block4_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam/read"
  op: "Identity"
  input: "stage2_block4_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage2_block4_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage2_block4_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block4_c2_w/Adam_1"
  input: "stage2_block4_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage2_block4_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage2_block4_c2_b/Adam"
  input: "stage2_block4_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam/read"
  op: "Identity"
  input: "stage2_block4_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage2_block4_c2_b/Adam_1"
  input: "stage2_block4_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage2_block4_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage2_block4_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/gamma/Adam"
  input: "batch_normalization_15/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/gamma/Adam_1"
  input: "batch_normalization_15/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/beta/Adam"
  input: "batch_normalization_15/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_15/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_15/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_15/beta/Adam_1"
  input: "batch_normalization_15/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_15/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block1_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block1_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block1_c1_w/Adam"
  input: "stage3_block1_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam/read"
  op: "Identity"
  input: "stage3_block1_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block1_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block1_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block1_c1_w/Adam_1"
  input: "stage3_block1_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block1_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block1_c1_b/Adam"
  input: "stage3_block1_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam/read"
  op: "Identity"
  input: "stage3_block1_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block1_c1_b/Adam_1"
  input: "stage3_block1_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block1_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/gamma/Adam"
  input: "batch_normalization_16/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/gamma/Adam_1"
  input: "batch_normalization_16/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/beta/Adam"
  input: "batch_normalization_16/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_16/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_16/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_16/beta/Adam_1"
  input: "batch_normalization_16/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_16/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block1_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block1_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block1_c2_w/Adam"
  input: "stage3_block1_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam/read"
  op: "Identity"
  input: "stage3_block1_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block1_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block1_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block1_c2_w/Adam_1"
  input: "stage3_block1_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block1_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block1_c2_b/Adam"
  input: "stage3_block1_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam/read"
  op: "Identity"
  input: "stage3_block1_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block1_c2_b/Adam_1"
  input: "stage3_block1_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block1_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block1_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/gamma/Adam"
  input: "batch_normalization_17/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/gamma/Adam_1"
  input: "batch_normalization_17/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/beta/Adam"
  input: "batch_normalization_17/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_17/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_17/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_17/beta/Adam_1"
  input: "batch_normalization_17/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_17/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block2_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block2_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block2_c1_w/Adam"
  input: "stage3_block2_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam/read"
  op: "Identity"
  input: "stage3_block2_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block2_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block2_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block2_c1_w/Adam_1"
  input: "stage3_block2_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block2_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block2_c1_b/Adam"
  input: "stage3_block2_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam/read"
  op: "Identity"
  input: "stage3_block2_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block2_c1_b/Adam_1"
  input: "stage3_block2_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block2_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/gamma/Adam"
  input: "batch_normalization_18/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/gamma/Adam_1"
  input: "batch_normalization_18/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/beta/Adam"
  input: "batch_normalization_18/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_18/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_18/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_18/beta/Adam_1"
  input: "batch_normalization_18/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_18/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block2_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block2_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block2_c2_w/Adam"
  input: "stage3_block2_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam/read"
  op: "Identity"
  input: "stage3_block2_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block2_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block2_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block2_c2_w/Adam_1"
  input: "stage3_block2_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block2_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block2_c2_b/Adam"
  input: "stage3_block2_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam/read"
  op: "Identity"
  input: "stage3_block2_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block2_c2_b/Adam_1"
  input: "stage3_block2_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block2_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block2_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/gamma/Adam"
  input: "batch_normalization_19/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/gamma/Adam_1"
  input: "batch_normalization_19/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/beta/Adam"
  input: "batch_normalization_19/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_19/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_19/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_19/beta/Adam_1"
  input: "batch_normalization_19/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_19/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block3_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block3_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block3_c1_w/Adam"
  input: "stage3_block3_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam/read"
  op: "Identity"
  input: "stage3_block3_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block3_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block3_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block3_c1_w/Adam_1"
  input: "stage3_block3_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block3_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block3_c1_b/Adam"
  input: "stage3_block3_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam/read"
  op: "Identity"
  input: "stage3_block3_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block3_c1_b/Adam_1"
  input: "stage3_block3_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block3_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/gamma/Adam"
  input: "batch_normalization_20/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/gamma/Adam_1"
  input: "batch_normalization_20/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/beta/Adam"
  input: "batch_normalization_20/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_20/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_20/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_20/beta/Adam_1"
  input: "batch_normalization_20/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_20/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block3_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block3_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block3_c2_w/Adam"
  input: "stage3_block3_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam/read"
  op: "Identity"
  input: "stage3_block3_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block3_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block3_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block3_c2_w/Adam_1"
  input: "stage3_block3_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block3_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block3_c2_b/Adam"
  input: "stage3_block3_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam/read"
  op: "Identity"
  input: "stage3_block3_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block3_c2_b/Adam_1"
  input: "stage3_block3_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block3_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block3_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/gamma/Adam"
  input: "batch_normalization_21/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/gamma/Adam_1"
  input: "batch_normalization_21/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/beta/Adam"
  input: "batch_normalization_21/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_21/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_21/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_21/beta/Adam_1"
  input: "batch_normalization_21/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_21/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block4_c1_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block4_c1_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block4_c1_w/Adam"
  input: "stage3_block4_c1_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam/read"
  op: "Identity"
  input: "stage3_block4_c1_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block4_c1_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block4_c1_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block4_c1_w/Adam_1"
  input: "stage3_block4_c1_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c1_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block4_c1_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block4_c1_b/Adam"
  input: "stage3_block4_c1_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam/read"
  op: "Identity"
  input: "stage3_block4_c1_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block4_c1_b/Adam_1"
  input: "stage3_block4_c1_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c1_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block4_c1_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/gamma/Adam"
  input: "batch_normalization_22/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/gamma/Adam_1"
  input: "batch_normalization_22/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/beta/Adam"
  input: "batch_normalization_22/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_22/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_22/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_22/beta/Adam_1"
  input: "batch_normalization_22/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_22/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "stage3_block4_c2_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "stage3_block4_c2_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam/Assign"
  op: "Assign"
  input: "stage3_block4_c2_w/Adam"
  input: "stage3_block4_c2_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam/read"
  op: "Identity"
  input: "stage3_block4_c2_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stage3_block4_c2_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stage3_block4_c2_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block4_c2_w/Adam_1"
  input: "stage3_block4_c2_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c2_w/Adam_1/read"
  op: "Identity"
  input: "stage3_block4_c2_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam/Assign"
  op: "Assign"
  input: "stage3_block4_c2_b/Adam"
  input: "stage3_block4_c2_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam/read"
  op: "Identity"
  input: "stage3_block4_c2_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam_1/Assign"
  op: "Assign"
  input: "stage3_block4_c2_b/Adam_1"
  input: "stage3_block4_c2_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stage3_block4_c2_b/Adam_1/read"
  op: "Identity"
  input: "stage3_block4_c2_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/gamma/Adam"
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/gamma/Adam"
  input: "batch_normalization_23/gamma/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/gamma/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/gamma/Adam_1"
  input: "batch_normalization_23/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/beta/Adam"
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/beta/Adam"
  input: "batch_normalization_23/beta/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_23/beta/Adam_1"
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_23/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_23/beta/Adam_1"
  input: "batch_normalization_23/beta/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_23/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_fc_w/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_fc_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_fc_w/Adam/Assign"
  op: "Assign"
  input: "output_fc_w/Adam"
  input: "output_fc_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_fc_w/Adam/read"
  op: "Identity"
  input: "output_fc_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
}
node {
  name: "output_fc_w/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_fc_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_fc_w/Adam_1/Assign"
  op: "Assign"
  input: "output_fc_w/Adam_1"
  input: "output_fc_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_fc_w/Adam_1/read"
  op: "Identity"
  input: "output_fc_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
}
node {
  name: "output_fc_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_fc_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_fc_b/Adam/Assign"
  op: "Assign"
  input: "output_fc_b/Adam"
  input: "output_fc_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_fc_b/Adam/read"
  op: "Identity"
  input: "output_fc_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
}
node {
  name: "output_fc_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_fc_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_fc_b/Adam_1/Assign"
  op: "Assign"
  input: "output_fc_b/Adam_1"
  input: "output_fc_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_fc_b/Adam_1/read"
  op: "Identity"
  input: "output_fc_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_input_layer_c0_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_input_layer_c0_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_input_layer_c0_w/ApplyAdam"
  op: "ApplyAdam"
  input: "input_layer_c0_w"
  input: "input_layer_c0_w/Adam"
  input: "input_layer_c0_w/Adam_1"
  input: "train/Adam/update_input_layer_c0_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_input_layer_c0_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_input_layer_c0_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_input_layer_c0_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_input_layer_c0_b/ApplyAdam"
  op: "ApplyAdam"
  input: "input_layer_c0_b"
  input: "input_layer_c0_b/Adam"
  input: "input_layer_c0_b/Adam_1"
  input: "train/Adam/update_input_layer_c0_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_input_layer_c0_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block1_c1_w"
  input: "stage1_block1_c1_w/Adam"
  input: "stage1_block1_c1_w/Adam_1"
  input: "train/Adam/update_stage1_block1_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block1_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block1_c1_b"
  input: "stage1_block1_c1_b/Adam"
  input: "stage1_block1_c1_b/Adam_1"
  input: "train/Adam/update_stage1_block1_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block1_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Adam"
  input: "batch_normalization/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Adam"
  input: "batch_normalization/beta/Adam_1"
  input: "train/Adam/update_batch_normalization/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block1_c2_w"
  input: "stage1_block1_c2_w/Adam"
  input: "stage1_block1_c2_w/Adam_1"
  input: "train/Adam/update_stage1_block1_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block1_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block1_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block1_c2_b"
  input: "stage1_block1_c2_b/Adam"
  input: "stage1_block1_c2_b/Adam_1"
  input: "train/Adam/update_stage1_block1_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block1_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Adam"
  input: "batch_normalization_1/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Adam"
  input: "batch_normalization_1/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block2_c1_w"
  input: "stage1_block2_c1_w/Adam"
  input: "stage1_block2_c1_w/Adam_1"
  input: "train/Adam/update_stage1_block2_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block2_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block2_c1_b"
  input: "stage1_block2_c1_b/Adam"
  input: "stage1_block2_c1_b/Adam_1"
  input: "train/Adam/update_stage1_block2_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block2_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Adam"
  input: "batch_normalization_2/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Adam"
  input: "batch_normalization_2/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block2_c2_w"
  input: "stage1_block2_c2_w/Adam"
  input: "stage1_block2_c2_w/Adam_1"
  input: "train/Adam/update_stage1_block2_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block2_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block2_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block2_c2_b"
  input: "stage1_block2_c2_b/Adam"
  input: "stage1_block2_c2_b/Adam_1"
  input: "train/Adam/update_stage1_block2_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block2_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Adam"
  input: "batch_normalization_3/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Adam"
  input: "batch_normalization_3/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block3_c1_w"
  input: "stage1_block3_c1_w/Adam"
  input: "stage1_block3_c1_w/Adam_1"
  input: "train/Adam/update_stage1_block3_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block3_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block3_c1_b"
  input: "stage1_block3_c1_b/Adam"
  input: "stage1_block3_c1_b/Adam_1"
  input: "train/Adam/update_stage1_block3_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block3_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Adam"
  input: "batch_normalization_4/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Adam"
  input: "batch_normalization_4/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block3_c2_w"
  input: "stage1_block3_c2_w/Adam"
  input: "stage1_block3_c2_w/Adam_1"
  input: "train/Adam/update_stage1_block3_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block3_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block3_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block3_c2_b"
  input: "stage1_block3_c2_b/Adam"
  input: "stage1_block3_c2_b/Adam_1"
  input: "train/Adam/update_stage1_block3_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block3_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/gamma/Adam"
  input: "batch_normalization_5/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/beta/Adam"
  input: "batch_normalization_5/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block4_c1_w"
  input: "stage1_block4_c1_w/Adam"
  input: "stage1_block4_c1_w/Adam_1"
  input: "train/Adam/update_stage1_block4_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block4_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block4_c1_b"
  input: "stage1_block4_c1_b/Adam"
  input: "stage1_block4_c1_b/Adam_1"
  input: "train/Adam/update_stage1_block4_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block4_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/gamma/Adam"
  input: "batch_normalization_6/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/beta/Adam"
  input: "batch_normalization_6/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block4_c2_w"
  input: "stage1_block4_c2_w/Adam"
  input: "stage1_block4_c2_w/Adam_1"
  input: "train/Adam/update_stage1_block4_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block4_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage1_block4_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage1_block4_c2_b"
  input: "stage1_block4_c2_b/Adam"
  input: "stage1_block4_c2_b/Adam_1"
  input: "train/Adam/update_stage1_block4_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage1_block4_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/gamma/Adam"
  input: "batch_normalization_7/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/beta/Adam"
  input: "batch_normalization_7/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block1_c1_w"
  input: "stage2_block1_c1_w/Adam"
  input: "stage2_block1_c1_w/Adam_1"
  input: "train/Adam/update_stage2_block1_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block1_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block1_c1_b"
  input: "stage2_block1_c1_b/Adam"
  input: "stage2_block1_c1_b/Adam_1"
  input: "train/Adam/update_stage2_block1_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block1_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/gamma/Adam"
  input: "batch_normalization_8/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/beta/Adam"
  input: "batch_normalization_8/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block1_c2_w"
  input: "stage2_block1_c2_w/Adam"
  input: "stage2_block1_c2_w/Adam_1"
  input: "train/Adam/update_stage2_block1_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block1_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block1_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block1_c2_b"
  input: "stage2_block1_c2_b/Adam"
  input: "stage2_block1_c2_b/Adam_1"
  input: "train/Adam/update_stage2_block1_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block1_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/gamma/Adam"
  input: "batch_normalization_9/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/beta/Adam"
  input: "batch_normalization_9/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block2_c1_w"
  input: "stage2_block2_c1_w/Adam"
  input: "stage2_block2_c1_w/Adam_1"
  input: "train/Adam/update_stage2_block2_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block2_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block2_c1_b"
  input: "stage2_block2_c1_b/Adam"
  input: "stage2_block2_c1_b/Adam_1"
  input: "train/Adam/update_stage2_block2_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block2_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/gamma/Adam"
  input: "batch_normalization_10/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/beta/Adam"
  input: "batch_normalization_10/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block2_c2_w"
  input: "stage2_block2_c2_w/Adam"
  input: "stage2_block2_c2_w/Adam_1"
  input: "train/Adam/update_stage2_block2_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block2_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block2_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block2_c2_b"
  input: "stage2_block2_c2_b/Adam"
  input: "stage2_block2_c2_b/Adam_1"
  input: "train/Adam/update_stage2_block2_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block2_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/gamma/Adam"
  input: "batch_normalization_11/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/beta/Adam"
  input: "batch_normalization_11/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block3_c1_w"
  input: "stage2_block3_c1_w/Adam"
  input: "stage2_block3_c1_w/Adam_1"
  input: "train/Adam/update_stage2_block3_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block3_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block3_c1_b"
  input: "stage2_block3_c1_b/Adam"
  input: "stage2_block3_c1_b/Adam_1"
  input: "train/Adam/update_stage2_block3_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block3_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_19_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/gamma/Adam"
  input: "batch_normalization_12/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/beta/Adam"
  input: "batch_normalization_12/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block3_c2_w"
  input: "stage2_block3_c2_w/Adam"
  input: "stage2_block3_c2_w/Adam_1"
  input: "train/Adam/update_stage2_block3_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block3_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block3_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block3_c2_b"
  input: "stage2_block3_c2_b/Adam"
  input: "stage2_block3_c2_b/Adam_1"
  input: "train/Adam/update_stage2_block3_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block3_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_20_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/gamma/Adam"
  input: "batch_normalization_13/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/beta/Adam"
  input: "batch_normalization_13/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block4_c1_w"
  input: "stage2_block4_c1_w/Adam"
  input: "stage2_block4_c1_w/Adam_1"
  input: "train/Adam/update_stage2_block4_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block4_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block4_c1_b"
  input: "stage2_block4_c1_b/Adam"
  input: "stage2_block4_c1_b/Adam_1"
  input: "train/Adam/update_stage2_block4_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block4_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_22_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/gamma/Adam"
  input: "batch_normalization_14/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/beta/Adam"
  input: "batch_normalization_14/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block4_c2_w"
  input: "stage2_block4_c2_w/Adam"
  input: "stage2_block4_c2_w/Adam_1"
  input: "train/Adam/update_stage2_block4_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block4_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage2_block4_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage2_block4_c2_b"
  input: "stage2_block4_c2_b/Adam"
  input: "stage2_block4_c2_b/Adam_1"
  input: "train/Adam/update_stage2_block4_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage2_block4_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_23_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/gamma/Adam"
  input: "batch_normalization_15/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/beta/Adam"
  input: "batch_normalization_15/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block1_c1_w"
  input: "stage3_block1_c1_w/Adam"
  input: "stage3_block1_c1_w/Adam_1"
  input: "train/Adam/update_stage3_block1_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block1_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block1_c1_b"
  input: "stage3_block1_c1_b/Adam"
  input: "stage3_block1_c1_b/Adam_1"
  input: "train/Adam/update_stage3_block1_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block1_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_25_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/gamma/Adam"
  input: "batch_normalization_16/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/beta/Adam"
  input: "batch_normalization_16/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block1_c2_w"
  input: "stage3_block1_c2_w/Adam"
  input: "stage3_block1_c2_w/Adam_1"
  input: "train/Adam/update_stage3_block1_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block1_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_18_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block1_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block1_c2_b"
  input: "stage3_block1_c2_b/Adam"
  input: "stage3_block1_c2_b/Adam_1"
  input: "train/Adam/update_stage3_block1_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block1_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_26_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/gamma/Adam"
  input: "batch_normalization_17/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/beta/Adam"
  input: "batch_normalization_17/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block2_c1_w"
  input: "stage3_block2_c1_w/Adam"
  input: "stage3_block2_c1_w/Adam_1"
  input: "train/Adam/update_stage3_block2_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block2_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_19_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block2_c1_b"
  input: "stage3_block2_c1_b/Adam"
  input: "stage3_block2_c1_b/Adam_1"
  input: "train/Adam/update_stage3_block2_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block2_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_28_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/gamma/Adam"
  input: "batch_normalization_18/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/beta/Adam"
  input: "batch_normalization_18/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block2_c2_w"
  input: "stage3_block2_c2_w/Adam"
  input: "stage3_block2_c2_w/Adam_1"
  input: "train/Adam/update_stage3_block2_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block2_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_20_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block2_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block2_c2_b"
  input: "stage3_block2_c2_b/Adam"
  input: "stage3_block2_c2_b/Adam_1"
  input: "train/Adam/update_stage3_block2_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block2_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_29_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/gamma/Adam"
  input: "batch_normalization_19/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/beta/Adam"
  input: "batch_normalization_19/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block3_c1_w"
  input: "stage3_block3_c1_w/Adam"
  input: "stage3_block3_c1_w/Adam_1"
  input: "train/Adam/update_stage3_block3_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block3_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_21_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block3_c1_b"
  input: "stage3_block3_c1_b/Adam"
  input: "stage3_block3_c1_b/Adam_1"
  input: "train/Adam/update_stage3_block3_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block3_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_31_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/gamma/Adam"
  input: "batch_normalization_20/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/beta/Adam"
  input: "batch_normalization_20/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block3_c2_w"
  input: "stage3_block3_c2_w/Adam"
  input: "stage3_block3_c2_w/Adam_1"
  input: "train/Adam/update_stage3_block3_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block3_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_22_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block3_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block3_c2_b"
  input: "stage3_block3_c2_b/Adam"
  input: "stage3_block3_c2_b/Adam_1"
  input: "train/Adam/update_stage3_block3_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block3_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_32_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/gamma/Adam"
  input: "batch_normalization_21/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/beta/Adam"
  input: "batch_normalization_21/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c1_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c1_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c1_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block4_c1_w"
  input: "stage3_block4_c1_w/Adam"
  input: "stage3_block4_c1_w/Adam_1"
  input: "train/Adam/update_stage3_block4_c1_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block4_c1_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_23_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c1_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c1_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c1_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block4_c1_b"
  input: "stage3_block4_c1_b/Adam"
  input: "stage3_block4_c1_b/Adam_1"
  input: "train/Adam/update_stage3_block4_c1_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block4_c1_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_34_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/gamma/Adam"
  input: "batch_normalization_22/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/beta/Adam"
  input: "batch_normalization_22/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c2_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c2_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c2_w/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block4_c2_w"
  input: "stage3_block4_c2_w/Adam"
  input: "stage3_block4_c2_w/Adam_1"
  input: "train/Adam/update_stage3_block4_c2_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block4_c2_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_24_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c2_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c2_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_stage3_block4_c2_b/ApplyAdam"
  op: "ApplyAdam"
  input: "stage3_block4_c2_b"
  input: "stage3_block4_c2_b/Adam"
  input: "stage3_block4_c2_b/Adam_1"
  input: "train/Adam/update_stage3_block4_c2_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_stage3_block4_c2_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_35_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/gamma/Adam"
  input: "batch_normalization_23/gamma/Adam_1"
  input: "train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/beta/Adam"
  input: "batch_normalization_23/beta/Adam_1"
  input: "train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam/ReadVariableOp"
  input: "train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_output_fc_w/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_output_fc_w/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_output_fc_w/ApplyAdam"
  op: "ApplyAdam"
  input: "output_fc_w"
  input: "output_fc_w/Adam"
  input: "output_fc_w/Adam_1"
  input: "train/Adam/update_output_fc_w/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_output_fc_w/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_output_fc_b/ApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_output_fc_b/ApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/update_output_fc_b/ApplyAdam"
  op: "ApplyAdam"
  input: "output_fc_b"
  input: "output_fc_b/Adam"
  input: "output_fc_b/Adam_1"
  input: "train/Adam/update_output_fc_b/ApplyAdam/ReadVariableOp"
  input: "train/Adam/update_output_fc_b/ApplyAdam/ReadVariableOp_1"
  input: "train/input_learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_37_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  input: "^train/Adam/update_batch_normalization/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_input_layer_c0_b/ApplyAdam"
  input: "^train/Adam/update_input_layer_c0_w/ApplyAdam"
  input: "^train/Adam/update_output_fc_b/ApplyAdam"
  input: "^train/Adam/update_output_fc_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_w/ApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/Adam/ReadVariableOp"
  input: "train/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "train/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "train/beta1_power"
  input: "^train/Adam/AssignVariableOp"
  input: "^train/Adam/update_batch_normalization/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_input_layer_c0_b/ApplyAdam"
  input: "^train/Adam/update_input_layer_c0_w/ApplyAdam"
  input: "^train/Adam/update_output_fc_b/ApplyAdam"
  input: "^train/Adam/update_output_fc_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_w/ApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  input: "^train/Adam/update_batch_normalization/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_input_layer_c0_b/ApplyAdam"
  input: "^train/Adam/update_input_layer_c0_w/ApplyAdam"
  input: "^train/Adam/update_output_fc_b/ApplyAdam"
  input: "^train/Adam/update_output_fc_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_w/ApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/Adam/ReadVariableOp_2"
  input: "train/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
}
node {
  name: "train/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "train/beta2_power"
  input: "^train/Adam/AssignVariableOp_1"
  input: "^train/Adam/update_batch_normalization/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_input_layer_c0_b/ApplyAdam"
  input: "^train/Adam/update_input_layer_c0_w/ApplyAdam"
  input: "^train/Adam/update_output_fc_b/ApplyAdam"
  input: "^train/Adam/update_output_fc_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_w/ApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/AssignVariableOp"
  input: "^train/Adam/AssignVariableOp_1"
  input: "^train/Adam/update_batch_normalization/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_1/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_10/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_11/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_12/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_13/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_14/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_15/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_16/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_17/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_18/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_19/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_2/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_20/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_21/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_22/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_23/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_3/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_4/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_5/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_6/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_7/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_8/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/beta/ResourceApplyAdam"
  input: "^train/Adam/update_batch_normalization_9/gamma/ResourceApplyAdam"
  input: "^train/Adam/update_input_layer_c0_b/ApplyAdam"
  input: "^train/Adam/update_input_layer_c0_w/ApplyAdam"
  input: "^train/Adam/update_output_fc_b/ApplyAdam"
  input: "^train/Adam/update_output_fc_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage1_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage2_block4_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block1_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block2_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block3_c2_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c1_w/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_b/ApplyAdam"
  input: "^train/Adam/update_stage3_block4_c2_w/ApplyAdam"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "add_37"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "input_groundtruth"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "input_groundtruth"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (input_groundtruth:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (input_groundtruth:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "input_groundtruth"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_groundtruth"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "input_groundtruth"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_groundtruth"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast"
  op: "Cast"
  input: "confusion_matrix/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_groundtruth"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_groundtruth"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/Cast_1"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/Cast_1"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_38"
  op: "Add"
  input: "global_step/read"
  input: "add_38/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add_38"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 351
          }
        }
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/beta/Adam"
        string_val: "batch_normalization/beta/Adam_1"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/gamma/Adam"
        string_val: "batch_normalization/gamma/Adam_1"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/beta/Adam"
        string_val: "batch_normalization_1/beta/Adam_1"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/gamma/Adam"
        string_val: "batch_normalization_1/gamma/Adam_1"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "batch_normalization_10/beta"
        string_val: "batch_normalization_10/beta/Adam"
        string_val: "batch_normalization_10/beta/Adam_1"
        string_val: "batch_normalization_10/gamma"
        string_val: "batch_normalization_10/gamma/Adam"
        string_val: "batch_normalization_10/gamma/Adam_1"
        string_val: "batch_normalization_10/moving_mean"
        string_val: "batch_normalization_10/moving_variance"
        string_val: "batch_normalization_11/beta"
        string_val: "batch_normalization_11/beta/Adam"
        string_val: "batch_normalization_11/beta/Adam_1"
        string_val: "batch_normalization_11/gamma"
        string_val: "batch_normalization_11/gamma/Adam"
        string_val: "batch_normalization_11/gamma/Adam_1"
        string_val: "batch_normalization_11/moving_mean"
        string_val: "batch_normalization_11/moving_variance"
        string_val: "batch_normalization_12/beta"
        string_val: "batch_normalization_12/beta/Adam"
        string_val: "batch_normalization_12/beta/Adam_1"
        string_val: "batch_normalization_12/gamma"
        string_val: "batch_normalization_12/gamma/Adam"
        string_val: "batch_normalization_12/gamma/Adam_1"
        string_val: "batch_normalization_12/moving_mean"
        string_val: "batch_normalization_12/moving_variance"
        string_val: "batch_normalization_13/beta"
        string_val: "batch_normalization_13/beta/Adam"
        string_val: "batch_normalization_13/beta/Adam_1"
        string_val: "batch_normalization_13/gamma"
        string_val: "batch_normalization_13/gamma/Adam"
        string_val: "batch_normalization_13/gamma/Adam_1"
        string_val: "batch_normalization_13/moving_mean"
        string_val: "batch_normalization_13/moving_variance"
        string_val: "batch_normalization_14/beta"
        string_val: "batch_normalization_14/beta/Adam"
        string_val: "batch_normalization_14/beta/Adam_1"
        string_val: "batch_normalization_14/gamma"
        string_val: "batch_normalization_14/gamma/Adam"
        string_val: "batch_normalization_14/gamma/Adam_1"
        string_val: "batch_normalization_14/moving_mean"
        string_val: "batch_normalization_14/moving_variance"
        string_val: "batch_normalization_15/beta"
        string_val: "batch_normalization_15/beta/Adam"
        string_val: "batch_normalization_15/beta/Adam_1"
        string_val: "batch_normalization_15/gamma"
        string_val: "batch_normalization_15/gamma/Adam"
        string_val: "batch_normalization_15/gamma/Adam_1"
        string_val: "batch_normalization_15/moving_mean"
        string_val: "batch_normalization_15/moving_variance"
        string_val: "batch_normalization_16/beta"
        string_val: "batch_normalization_16/beta/Adam"
        string_val: "batch_normalization_16/beta/Adam_1"
        string_val: "batch_normalization_16/gamma"
        string_val: "batch_normalization_16/gamma/Adam"
        string_val: "batch_normalization_16/gamma/Adam_1"
        string_val: "batch_normalization_16/moving_mean"
        string_val: "batch_normalization_16/moving_variance"
        string_val: "batch_normalization_17/beta"
        string_val: "batch_normalization_17/beta/Adam"
        string_val: "batch_normalization_17/beta/Adam_1"
        string_val: "batch_normalization_17/gamma"
        string_val: "batch_normalization_17/gamma/Adam"
        string_val: "batch_normalization_17/gamma/Adam_1"
        string_val: "batch_normalization_17/moving_mean"
        string_val: "batch_normalization_17/moving_variance"
        string_val: "batch_normalization_18/beta"
        string_val: "batch_normalization_18/beta/Adam"
        string_val: "batch_normalization_18/beta/Adam_1"
        string_val: "batch_normalization_18/gamma"
        string_val: "batch_normalization_18/gamma/Adam"
        string_val: "batch_normalization_18/gamma/Adam_1"
        string_val: "batch_normalization_18/moving_mean"
        string_val: "batch_normalization_18/moving_variance"
        string_val: "batch_normalization_19/beta"
        string_val: "batch_normalization_19/beta/Adam"
        string_val: "batch_normalization_19/beta/Adam_1"
        string_val: "batch_normalization_19/gamma"
        string_val: "batch_normalization_19/gamma/Adam"
        string_val: "batch_normalization_19/gamma/Adam_1"
        string_val: "batch_normalization_19/moving_mean"
        string_val: "batch_normalization_19/moving_variance"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/beta/Adam"
        string_val: "batch_normalization_2/beta/Adam_1"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/gamma/Adam"
        string_val: "batch_normalization_2/gamma/Adam_1"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "batch_normalization_20/beta"
        string_val: "batch_normalization_20/beta/Adam"
        string_val: "batch_normalization_20/beta/Adam_1"
        string_val: "batch_normalization_20/gamma"
        string_val: "batch_normalization_20/gamma/Adam"
        string_val: "batch_normalization_20/gamma/Adam_1"
        string_val: "batch_normalization_20/moving_mean"
        string_val: "batch_normalization_20/moving_variance"
        string_val: "batch_normalization_21/beta"
        string_val: "batch_normalization_21/beta/Adam"
        string_val: "batch_normalization_21/beta/Adam_1"
        string_val: "batch_normalization_21/gamma"
        string_val: "batch_normalization_21/gamma/Adam"
        string_val: "batch_normalization_21/gamma/Adam_1"
        string_val: "batch_normalization_21/moving_mean"
        string_val: "batch_normalization_21/moving_variance"
        string_val: "batch_normalization_22/beta"
        string_val: "batch_normalization_22/beta/Adam"
        string_val: "batch_normalization_22/beta/Adam_1"
        string_val: "batch_normalization_22/gamma"
        string_val: "batch_normalization_22/gamma/Adam"
        string_val: "batch_normalization_22/gamma/Adam_1"
        string_val: "batch_normalization_22/moving_mean"
        string_val: "batch_normalization_22/moving_variance"
        string_val: "batch_normalization_23/beta"
        string_val: "batch_normalization_23/beta/Adam"
        string_val: "batch_normalization_23/beta/Adam_1"
        string_val: "batch_normalization_23/gamma"
        string_val: "batch_normalization_23/gamma/Adam"
        string_val: "batch_normalization_23/gamma/Adam_1"
        string_val: "batch_normalization_23/moving_mean"
        string_val: "batch_normalization_23/moving_variance"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/beta/Adam"
        string_val: "batch_normalization_3/beta/Adam_1"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/gamma/Adam"
        string_val: "batch_normalization_3/gamma/Adam_1"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/beta/Adam"
        string_val: "batch_normalization_4/beta/Adam_1"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/gamma/Adam"
        string_val: "batch_normalization_4/gamma/Adam_1"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "batch_normalization_5/beta"
        string_val: "batch_normalization_5/beta/Adam"
        string_val: "batch_normalization_5/beta/Adam_1"
        string_val: "batch_normalization_5/gamma"
        string_val: "batch_normalization_5/gamma/Adam"
        string_val: "batch_normalization_5/gamma/Adam_1"
        string_val: "batch_normalization_5/moving_mean"
        string_val: "batch_normalization_5/moving_variance"
        string_val: "batch_normalization_6/beta"
        string_val: "batch_normalization_6/beta/Adam"
        string_val: "batch_normalization_6/beta/Adam_1"
        string_val: "batch_normalization_6/gamma"
        string_val: "batch_normalization_6/gamma/Adam"
        string_val: "batch_normalization_6/gamma/Adam_1"
        string_val: "batch_normalization_6/moving_mean"
        string_val: "batch_normalization_6/moving_variance"
        string_val: "batch_normalization_7/beta"
        string_val: "batch_normalization_7/beta/Adam"
        string_val: "batch_normalization_7/beta/Adam_1"
        string_val: "batch_normalization_7/gamma"
        string_val: "batch_normalization_7/gamma/Adam"
        string_val: "batch_normalization_7/gamma/Adam_1"
        string_val: "batch_normalization_7/moving_mean"
        string_val: "batch_normalization_7/moving_variance"
        string_val: "batch_normalization_8/beta"
        string_val: "batch_normalization_8/beta/Adam"
        string_val: "batch_normalization_8/beta/Adam_1"
        string_val: "batch_normalization_8/gamma"
        string_val: "batch_normalization_8/gamma/Adam"
        string_val: "batch_normalization_8/gamma/Adam_1"
        string_val: "batch_normalization_8/moving_mean"
        string_val: "batch_normalization_8/moving_variance"
        string_val: "batch_normalization_9/beta"
        string_val: "batch_normalization_9/beta/Adam"
        string_val: "batch_normalization_9/beta/Adam_1"
        string_val: "batch_normalization_9/gamma"
        string_val: "batch_normalization_9/gamma/Adam"
        string_val: "batch_normalization_9/gamma/Adam_1"
        string_val: "batch_normalization_9/moving_mean"
        string_val: "batch_normalization_9/moving_variance"
        string_val: "global_step"
        string_val: "input_layer_c0_b"
        string_val: "input_layer_c0_b/Adam"
        string_val: "input_layer_c0_b/Adam_1"
        string_val: "input_layer_c0_w"
        string_val: "input_layer_c0_w/Adam"
        string_val: "input_layer_c0_w/Adam_1"
        string_val: "output_fc_b"
        string_val: "output_fc_b/Adam"
        string_val: "output_fc_b/Adam_1"
        string_val: "output_fc_w"
        string_val: "output_fc_w/Adam"
        string_val: "output_fc_w/Adam_1"
        string_val: "stage1_block1_c1_b"
        string_val: "stage1_block1_c1_b/Adam"
        string_val: "stage1_block1_c1_b/Adam_1"
        string_val: "stage1_block1_c1_w"
        string_val: "stage1_block1_c1_w/Adam"
        string_val: "stage1_block1_c1_w/Adam_1"
        string_val: "stage1_block1_c2_b"
        string_val: "stage1_block1_c2_b/Adam"
        string_val: "stage1_block1_c2_b/Adam_1"
        string_val: "stage1_block1_c2_w"
        string_val: "stage1_block1_c2_w/Adam"
        string_val: "stage1_block1_c2_w/Adam_1"
        string_val: "stage1_block2_c1_b"
        string_val: "stage1_block2_c1_b/Adam"
        string_val: "stage1_block2_c1_b/Adam_1"
        string_val: "stage1_block2_c1_w"
        string_val: "stage1_block2_c1_w/Adam"
        string_val: "stage1_block2_c1_w/Adam_1"
        string_val: "stage1_block2_c2_b"
        string_val: "stage1_block2_c2_b/Adam"
        string_val: "stage1_block2_c2_b/Adam_1"
        string_val: "stage1_block2_c2_w"
        string_val: "stage1_block2_c2_w/Adam"
        string_val: "stage1_block2_c2_w/Adam_1"
        string_val: "stage1_block3_c1_b"
        string_val: "stage1_block3_c1_b/Adam"
        string_val: "stage1_block3_c1_b/Adam_1"
        string_val: "stage1_block3_c1_w"
        string_val: "stage1_block3_c1_w/Adam"
        string_val: "stage1_block3_c1_w/Adam_1"
        string_val: "stage1_block3_c2_b"
        string_val: "stage1_block3_c2_b/Adam"
        string_val: "stage1_block3_c2_b/Adam_1"
        string_val: "stage1_block3_c2_w"
        string_val: "stage1_block3_c2_w/Adam"
        string_val: "stage1_block3_c2_w/Adam_1"
        string_val: "stage1_block4_c1_b"
        string_val: "stage1_block4_c1_b/Adam"
        string_val: "stage1_block4_c1_b/Adam_1"
        string_val: "stage1_block4_c1_w"
        string_val: "stage1_block4_c1_w/Adam"
        string_val: "stage1_block4_c1_w/Adam_1"
        string_val: "stage1_block4_c2_b"
        string_val: "stage1_block4_c2_b/Adam"
        string_val: "stage1_block4_c2_b/Adam_1"
        string_val: "stage1_block4_c2_w"
        string_val: "stage1_block4_c2_w/Adam"
        string_val: "stage1_block4_c2_w/Adam_1"
        string_val: "stage2_block1_c1_b"
        string_val: "stage2_block1_c1_b/Adam"
        string_val: "stage2_block1_c1_b/Adam_1"
        string_val: "stage2_block1_c1_w"
        string_val: "stage2_block1_c1_w/Adam"
        string_val: "stage2_block1_c1_w/Adam_1"
        string_val: "stage2_block1_c2_b"
        string_val: "stage2_block1_c2_b/Adam"
        string_val: "stage2_block1_c2_b/Adam_1"
        string_val: "stage2_block1_c2_w"
        string_val: "stage2_block1_c2_w/Adam"
        string_val: "stage2_block1_c2_w/Adam_1"
        string_val: "stage2_block2_c1_b"
        string_val: "stage2_block2_c1_b/Adam"
        string_val: "stage2_block2_c1_b/Adam_1"
        string_val: "stage2_block2_c1_w"
        string_val: "stage2_block2_c1_w/Adam"
        string_val: "stage2_block2_c1_w/Adam_1"
        string_val: "stage2_block2_c2_b"
        string_val: "stage2_block2_c2_b/Adam"
        string_val: "stage2_block2_c2_b/Adam_1"
        string_val: "stage2_block2_c2_w"
        string_val: "stage2_block2_c2_w/Adam"
        string_val: "stage2_block2_c2_w/Adam_1"
        string_val: "stage2_block3_c1_b"
        string_val: "stage2_block3_c1_b/Adam"
        string_val: "stage2_block3_c1_b/Adam_1"
        string_val: "stage2_block3_c1_w"
        string_val: "stage2_block3_c1_w/Adam"
        string_val: "stage2_block3_c1_w/Adam_1"
        string_val: "stage2_block3_c2_b"
        string_val: "stage2_block3_c2_b/Adam"
        string_val: "stage2_block3_c2_b/Adam_1"
        string_val: "stage2_block3_c2_w"
        string_val: "stage2_block3_c2_w/Adam"
        string_val: "stage2_block3_c2_w/Adam_1"
        string_val: "stage2_block4_c1_b"
        string_val: "stage2_block4_c1_b/Adam"
        string_val: "stage2_block4_c1_b/Adam_1"
        string_val: "stage2_block4_c1_w"
        string_val: "stage2_block4_c1_w/Adam"
        string_val: "stage2_block4_c1_w/Adam_1"
        string_val: "stage2_block4_c2_b"
        string_val: "stage2_block4_c2_b/Adam"
        string_val: "stage2_block4_c2_b/Adam_1"
        string_val: "stage2_block4_c2_w"
        string_val: "stage2_block4_c2_w/Adam"
        string_val: "stage2_block4_c2_w/Adam_1"
        string_val: "stage3_block1_c1_b"
        string_val: "stage3_block1_c1_b/Adam"
        string_val: "stage3_block1_c1_b/Adam_1"
        string_val: "stage3_block1_c1_w"
        string_val: "stage3_block1_c1_w/Adam"
        string_val: "stage3_block1_c1_w/Adam_1"
        string_val: "stage3_block1_c2_b"
        string_val: "stage3_block1_c2_b/Adam"
        string_val: "stage3_block1_c2_b/Adam_1"
        string_val: "stage3_block1_c2_w"
        string_val: "stage3_block1_c2_w/Adam"
        string_val: "stage3_block1_c2_w/Adam_1"
        string_val: "stage3_block2_c1_b"
        string_val: "stage3_block2_c1_b/Adam"
        string_val: "stage3_block2_c1_b/Adam_1"
        string_val: "stage3_block2_c1_w"
        string_val: "stage3_block2_c1_w/Adam"
        string_val: "stage3_block2_c1_w/Adam_1"
        string_val: "stage3_block2_c2_b"
        string_val: "stage3_block2_c2_b/Adam"
        string_val: "stage3_block2_c2_b/Adam_1"
        string_val: "stage3_block2_c2_w"
        string_val: "stage3_block2_c2_w/Adam"
        string_val: "stage3_block2_c2_w/Adam_1"
        string_val: "stage3_block3_c1_b"
        string_val: "stage3_block3_c1_b/Adam"
        string_val: "stage3_block3_c1_b/Adam_1"
        string_val: "stage3_block3_c1_w"
        string_val: "stage3_block3_c1_w/Adam"
        string_val: "stage3_block3_c1_w/Adam_1"
        string_val: "stage3_block3_c2_b"
        string_val: "stage3_block3_c2_b/Adam"
        string_val: "stage3_block3_c2_b/Adam_1"
        string_val: "stage3_block3_c2_w"
        string_val: "stage3_block3_c2_w/Adam"
        string_val: "stage3_block3_c2_w/Adam_1"
        string_val: "stage3_block4_c1_b"
        string_val: "stage3_block4_c1_b/Adam"
        string_val: "stage3_block4_c1_b/Adam_1"
        string_val: "stage3_block4_c1_w"
        string_val: "stage3_block4_c1_w/Adam"
        string_val: "stage3_block4_c1_w/Adam_1"
        string_val: "stage3_block4_c2_b"
        string_val: "stage3_block4_c2_b/Adam"
        string_val: "stage3_block4_c2_b/Adam_1"
        string_val: "stage3_block4_c2_w"
        string_val: "stage3_block4_c2_w/Adam"
        string_val: "stage3_block4_c2_w/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 351
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "batch_normalization/beta/Read/ReadVariableOp"
  input: "batch_normalization/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization/gamma/Read/ReadVariableOp"
  input: "batch_normalization/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_1/beta/Read/ReadVariableOp"
  input: "batch_normalization_1/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_1/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_1/gamma/Read/ReadVariableOp"
  input: "batch_normalization_1/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_1/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_1/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_1/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_10/beta/Read/ReadVariableOp"
  input: "batch_normalization_10/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_10/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_10/gamma/Read/ReadVariableOp"
  input: "batch_normalization_10/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_10/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_10/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_10/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_11/beta/Read/ReadVariableOp"
  input: "batch_normalization_11/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_11/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_11/gamma/Read/ReadVariableOp"
  input: "batch_normalization_11/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_11/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_11/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_11/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_12/beta/Read/ReadVariableOp"
  input: "batch_normalization_12/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_12/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_12/gamma/Read/ReadVariableOp"
  input: "batch_normalization_12/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_12/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_12/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_12/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_13/beta/Read/ReadVariableOp"
  input: "batch_normalization_13/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_13/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_13/gamma/Read/ReadVariableOp"
  input: "batch_normalization_13/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_13/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_13/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_13/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_14/beta/Read/ReadVariableOp"
  input: "batch_normalization_14/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_14/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_14/gamma/Read/ReadVariableOp"
  input: "batch_normalization_14/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_14/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_14/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_14/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_15/beta/Read/ReadVariableOp"
  input: "batch_normalization_15/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_15/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_15/gamma/Read/ReadVariableOp"
  input: "batch_normalization_15/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_15/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_15/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_15/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_16/beta/Read/ReadVariableOp"
  input: "batch_normalization_16/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_16/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_16/gamma/Read/ReadVariableOp"
  input: "batch_normalization_16/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_16/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_16/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_16/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_17/beta/Read/ReadVariableOp"
  input: "batch_normalization_17/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_17/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_17/gamma/Read/ReadVariableOp"
  input: "batch_normalization_17/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_17/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_17/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_17/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_18/beta/Read/ReadVariableOp"
  input: "batch_normalization_18/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_18/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_18/gamma/Read/ReadVariableOp"
  input: "batch_normalization_18/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_18/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_18/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_18/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_19/beta/Read/ReadVariableOp"
  input: "batch_normalization_19/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_19/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_19/gamma/Read/ReadVariableOp"
  input: "batch_normalization_19/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_19/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_19/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_19/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_2/beta/Read/ReadVariableOp"
  input: "batch_normalization_2/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_2/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_2/gamma/Read/ReadVariableOp"
  input: "batch_normalization_2/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_2/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_2/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_2/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_20/beta/Read/ReadVariableOp"
  input: "batch_normalization_20/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_20/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_20/gamma/Read/ReadVariableOp"
  input: "batch_normalization_20/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_20/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_20/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_20/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_21/beta/Read/ReadVariableOp"
  input: "batch_normalization_21/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_21/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_21/gamma/Read/ReadVariableOp"
  input: "batch_normalization_21/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_21/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_21/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_21/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_22/beta/Read/ReadVariableOp"
  input: "batch_normalization_22/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_22/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_22/gamma/Read/ReadVariableOp"
  input: "batch_normalization_22/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_22/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_22/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_22/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_23/beta/Read/ReadVariableOp"
  input: "batch_normalization_23/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_23/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_23/gamma/Read/ReadVariableOp"
  input: "batch_normalization_23/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_23/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_23/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_23/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_3/beta/Read/ReadVariableOp"
  input: "batch_normalization_3/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_3/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_3/gamma/Read/ReadVariableOp"
  input: "batch_normalization_3/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_3/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_3/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_3/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_4/beta/Read/ReadVariableOp"
  input: "batch_normalization_4/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_4/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_4/gamma/Read/ReadVariableOp"
  input: "batch_normalization_4/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_4/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_4/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_4/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_5/beta/Read/ReadVariableOp"
  input: "batch_normalization_5/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_5/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_5/gamma/Read/ReadVariableOp"
  input: "batch_normalization_5/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_5/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_5/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_5/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_6/beta/Read/ReadVariableOp"
  input: "batch_normalization_6/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_6/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_6/gamma/Read/ReadVariableOp"
  input: "batch_normalization_6/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_6/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_6/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_6/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_7/beta/Read/ReadVariableOp"
  input: "batch_normalization_7/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_7/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_7/gamma/Read/ReadVariableOp"
  input: "batch_normalization_7/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_7/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_7/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_7/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_8/beta/Read/ReadVariableOp"
  input: "batch_normalization_8/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_8/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_8/gamma/Read/ReadVariableOp"
  input: "batch_normalization_8/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_8/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_8/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_8/moving_variance/Read/ReadVariableOp"
  input: "batch_normalization_9/beta/Read/ReadVariableOp"
  input: "batch_normalization_9/beta/Adam/Read/ReadVariableOp"
  input: "batch_normalization_9/beta/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_9/gamma/Read/ReadVariableOp"
  input: "batch_normalization_9/gamma/Adam/Read/ReadVariableOp"
  input: "batch_normalization_9/gamma/Adam_1/Read/ReadVariableOp"
  input: "batch_normalization_9/moving_mean/Read/ReadVariableOp"
  input: "batch_normalization_9/moving_variance/Read/ReadVariableOp"
  input: "global_step"
  input: "input_layer_c0_b"
  input: "input_layer_c0_b/Adam"
  input: "input_layer_c0_b/Adam_1"
  input: "input_layer_c0_w"
  input: "input_layer_c0_w/Adam"
  input: "input_layer_c0_w/Adam_1"
  input: "output_fc_b"
  input: "output_fc_b/Adam"
  input: "output_fc_b/Adam_1"
  input: "output_fc_w"
  input: "output_fc_w/Adam"
  input: "output_fc_w/Adam_1"
  input: "stage1_block1_c1_b"
  input: "stage1_block1_c1_b/Adam"
  input: "stage1_block1_c1_b/Adam_1"
  input: "stage1_block1_c1_w"
  input: "stage1_block1_c1_w/Adam"
  input: "stage1_block1_c1_w/Adam_1"
  input: "stage1_block1_c2_b"
  input: "stage1_block1_c2_b/Adam"
  input: "stage1_block1_c2_b/Adam_1"
  input: "stage1_block1_c2_w"
  input: "stage1_block1_c2_w/Adam"
  input: "stage1_block1_c2_w/Adam_1"
  input: "stage1_block2_c1_b"
  input: "stage1_block2_c1_b/Adam"
  input: "stage1_block2_c1_b/Adam_1"
  input: "stage1_block2_c1_w"
  input: "stage1_block2_c1_w/Adam"
  input: "stage1_block2_c1_w/Adam_1"
  input: "stage1_block2_c2_b"
  input: "stage1_block2_c2_b/Adam"
  input: "stage1_block2_c2_b/Adam_1"
  input: "stage1_block2_c2_w"
  input: "stage1_block2_c2_w/Adam"
  input: "stage1_block2_c2_w/Adam_1"
  input: "stage1_block3_c1_b"
  input: "stage1_block3_c1_b/Adam"
  input: "stage1_block3_c1_b/Adam_1"
  input: "stage1_block3_c1_w"
  input: "stage1_block3_c1_w/Adam"
  input: "stage1_block3_c1_w/Adam_1"
  input: "stage1_block3_c2_b"
  input: "stage1_block3_c2_b/Adam"
  input: "stage1_block3_c2_b/Adam_1"
  input: "stage1_block3_c2_w"
  input: "stage1_block3_c2_w/Adam"
  input: "stage1_block3_c2_w/Adam_1"
  input: "stage1_block4_c1_b"
  input: "stage1_block4_c1_b/Adam"
  input: "stage1_block4_c1_b/Adam_1"
  input: "stage1_block4_c1_w"
  input: "stage1_block4_c1_w/Adam"
  input: "stage1_block4_c1_w/Adam_1"
  input: "stage1_block4_c2_b"
  input: "stage1_block4_c2_b/Adam"
  input: "stage1_block4_c2_b/Adam_1"
  input: "stage1_block4_c2_w"
  input: "stage1_block4_c2_w/Adam"
  input: "stage1_block4_c2_w/Adam_1"
  input: "stage2_block1_c1_b"
  input: "stage2_block1_c1_b/Adam"
  input: "stage2_block1_c1_b/Adam_1"
  input: "stage2_block1_c1_w"
  input: "stage2_block1_c1_w/Adam"
  input: "stage2_block1_c1_w/Adam_1"
  input: "stage2_block1_c2_b"
  input: "stage2_block1_c2_b/Adam"
  input: "stage2_block1_c2_b/Adam_1"
  input: "stage2_block1_c2_w"
  input: "stage2_block1_c2_w/Adam"
  input: "stage2_block1_c2_w/Adam_1"
  input: "stage2_block2_c1_b"
  input: "stage2_block2_c1_b/Adam"
  input: "stage2_block2_c1_b/Adam_1"
  input: "stage2_block2_c1_w"
  input: "stage2_block2_c1_w/Adam"
  input: "stage2_block2_c1_w/Adam_1"
  input: "stage2_block2_c2_b"
  input: "stage2_block2_c2_b/Adam"
  input: "stage2_block2_c2_b/Adam_1"
  input: "stage2_block2_c2_w"
  input: "stage2_block2_c2_w/Adam"
  input: "stage2_block2_c2_w/Adam_1"
  input: "stage2_block3_c1_b"
  input: "stage2_block3_c1_b/Adam"
  input: "stage2_block3_c1_b/Adam_1"
  input: "stage2_block3_c1_w"
  input: "stage2_block3_c1_w/Adam"
  input: "stage2_block3_c1_w/Adam_1"
  input: "stage2_block3_c2_b"
  input: "stage2_block3_c2_b/Adam"
  input: "stage2_block3_c2_b/Adam_1"
  input: "stage2_block3_c2_w"
  input: "stage2_block3_c2_w/Adam"
  input: "stage2_block3_c2_w/Adam_1"
  input: "stage2_block4_c1_b"
  input: "stage2_block4_c1_b/Adam"
  input: "stage2_block4_c1_b/Adam_1"
  input: "stage2_block4_c1_w"
  input: "stage2_block4_c1_w/Adam"
  input: "stage2_block4_c1_w/Adam_1"
  input: "stage2_block4_c2_b"
  input: "stage2_block4_c2_b/Adam"
  input: "stage2_block4_c2_b/Adam_1"
  input: "stage2_block4_c2_w"
  input: "stage2_block4_c2_w/Adam"
  input: "stage2_block4_c2_w/Adam_1"
  input: "stage3_block1_c1_b"
  input: "stage3_block1_c1_b/Adam"
  input: "stage3_block1_c1_b/Adam_1"
  input: "stage3_block1_c1_w"
  input: "stage3_block1_c1_w/Adam"
  input: "stage3_block1_c1_w/Adam_1"
  input: "stage3_block1_c2_b"
  input: "stage3_block1_c2_b/Adam"
  input: "stage3_block1_c2_b/Adam_1"
  input: "stage3_block1_c2_w"
  input: "stage3_block1_c2_w/Adam"
  input: "stage3_block1_c2_w/Adam_1"
  input: "stage3_block2_c1_b"
  input: "stage3_block2_c1_b/Adam"
  input: "stage3_block2_c1_b/Adam_1"
  input: "stage3_block2_c1_w"
  input: "stage3_block2_c1_w/Adam"
  input: "stage3_block2_c1_w/Adam_1"
  input: "stage3_block2_c2_b"
  input: "stage3_block2_c2_b/Adam"
  input: "stage3_block2_c2_b/Adam_1"
  input: "stage3_block2_c2_w"
  input: "stage3_block2_c2_w/Adam"
  input: "stage3_block2_c2_w/Adam_1"
  input: "stage3_block3_c1_b"
  input: "stage3_block3_c1_b/Adam"
  input: "stage3_block3_c1_b/Adam_1"
  input: "stage3_block3_c1_w"
  input: "stage3_block3_c1_w/Adam"
  input: "stage3_block3_c1_w/Adam_1"
  input: "stage3_block3_c2_b"
  input: "stage3_block3_c2_b/Adam"
  input: "stage3_block3_c2_b/Adam_1"
  input: "stage3_block3_c2_w"
  input: "stage3_block3_c2_w/Adam"
  input: "stage3_block3_c2_w/Adam_1"
  input: "stage3_block4_c1_b"
  input: "stage3_block4_c1_b/Adam"
  input: "stage3_block4_c1_b/Adam_1"
  input: "stage3_block4_c1_w"
  input: "stage3_block4_c1_w/Adam"
  input: "stage3_block4_c1_w/Adam_1"
  input: "stage3_block4_c2_b"
  input: "stage3_block4_c2_b/Adam"
  input: "stage3_block4_c2_b/Adam_1"
  input: "stage3_block4_c2_w"
  input: "stage3_block4_c2_w/Adam"
  input: "stage3_block4_c2_w/Adam_1"
  input: "train/beta1_power/Read/ReadVariableOp"
  input: "train/beta2_power/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 351
          }
        }
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/beta/Adam"
        string_val: "batch_normalization/beta/Adam_1"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/gamma/Adam"
        string_val: "batch_normalization/gamma/Adam_1"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/beta/Adam"
        string_val: "batch_normalization_1/beta/Adam_1"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/gamma/Adam"
        string_val: "batch_normalization_1/gamma/Adam_1"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "batch_normalization_10/beta"
        string_val: "batch_normalization_10/beta/Adam"
        string_val: "batch_normalization_10/beta/Adam_1"
        string_val: "batch_normalization_10/gamma"
        string_val: "batch_normalization_10/gamma/Adam"
        string_val: "batch_normalization_10/gamma/Adam_1"
        string_val: "batch_normalization_10/moving_mean"
        string_val: "batch_normalization_10/moving_variance"
        string_val: "batch_normalization_11/beta"
        string_val: "batch_normalization_11/beta/Adam"
        string_val: "batch_normalization_11/beta/Adam_1"
        string_val: "batch_normalization_11/gamma"
        string_val: "batch_normalization_11/gamma/Adam"
        string_val: "batch_normalization_11/gamma/Adam_1"
        string_val: "batch_normalization_11/moving_mean"
        string_val: "batch_normalization_11/moving_variance"
        string_val: "batch_normalization_12/beta"
        string_val: "batch_normalization_12/beta/Adam"
        string_val: "batch_normalization_12/beta/Adam_1"
        string_val: "batch_normalization_12/gamma"
        string_val: "batch_normalization_12/gamma/Adam"
        string_val: "batch_normalization_12/gamma/Adam_1"
        string_val: "batch_normalization_12/moving_mean"
        string_val: "batch_normalization_12/moving_variance"
        string_val: "batch_normalization_13/beta"
        string_val: "batch_normalization_13/beta/Adam"
        string_val: "batch_normalization_13/beta/Adam_1"
        string_val: "batch_normalization_13/gamma"
        string_val: "batch_normalization_13/gamma/Adam"
        string_val: "batch_normalization_13/gamma/Adam_1"
        string_val: "batch_normalization_13/moving_mean"
        string_val: "batch_normalization_13/moving_variance"
        string_val: "batch_normalization_14/beta"
        string_val: "batch_normalization_14/beta/Adam"
        string_val: "batch_normalization_14/beta/Adam_1"
        string_val: "batch_normalization_14/gamma"
        string_val: "batch_normalization_14/gamma/Adam"
        string_val: "batch_normalization_14/gamma/Adam_1"
        string_val: "batch_normalization_14/moving_mean"
        string_val: "batch_normalization_14/moving_variance"
        string_val: "batch_normalization_15/beta"
        string_val: "batch_normalization_15/beta/Adam"
        string_val: "batch_normalization_15/beta/Adam_1"
        string_val: "batch_normalization_15/gamma"
        string_val: "batch_normalization_15/gamma/Adam"
        string_val: "batch_normalization_15/gamma/Adam_1"
        string_val: "batch_normalization_15/moving_mean"
        string_val: "batch_normalization_15/moving_variance"
        string_val: "batch_normalization_16/beta"
        string_val: "batch_normalization_16/beta/Adam"
        string_val: "batch_normalization_16/beta/Adam_1"
        string_val: "batch_normalization_16/gamma"
        string_val: "batch_normalization_16/gamma/Adam"
        string_val: "batch_normalization_16/gamma/Adam_1"
        string_val: "batch_normalization_16/moving_mean"
        string_val: "batch_normalization_16/moving_variance"
        string_val: "batch_normalization_17/beta"
        string_val: "batch_normalization_17/beta/Adam"
        string_val: "batch_normalization_17/beta/Adam_1"
        string_val: "batch_normalization_17/gamma"
        string_val: "batch_normalization_17/gamma/Adam"
        string_val: "batch_normalization_17/gamma/Adam_1"
        string_val: "batch_normalization_17/moving_mean"
        string_val: "batch_normalization_17/moving_variance"
        string_val: "batch_normalization_18/beta"
        string_val: "batch_normalization_18/beta/Adam"
        string_val: "batch_normalization_18/beta/Adam_1"
        string_val: "batch_normalization_18/gamma"
        string_val: "batch_normalization_18/gamma/Adam"
        string_val: "batch_normalization_18/gamma/Adam_1"
        string_val: "batch_normalization_18/moving_mean"
        string_val: "batch_normalization_18/moving_variance"
        string_val: "batch_normalization_19/beta"
        string_val: "batch_normalization_19/beta/Adam"
        string_val: "batch_normalization_19/beta/Adam_1"
        string_val: "batch_normalization_19/gamma"
        string_val: "batch_normalization_19/gamma/Adam"
        string_val: "batch_normalization_19/gamma/Adam_1"
        string_val: "batch_normalization_19/moving_mean"
        string_val: "batch_normalization_19/moving_variance"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/beta/Adam"
        string_val: "batch_normalization_2/beta/Adam_1"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/gamma/Adam"
        string_val: "batch_normalization_2/gamma/Adam_1"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "batch_normalization_20/beta"
        string_val: "batch_normalization_20/beta/Adam"
        string_val: "batch_normalization_20/beta/Adam_1"
        string_val: "batch_normalization_20/gamma"
        string_val: "batch_normalization_20/gamma/Adam"
        string_val: "batch_normalization_20/gamma/Adam_1"
        string_val: "batch_normalization_20/moving_mean"
        string_val: "batch_normalization_20/moving_variance"
        string_val: "batch_normalization_21/beta"
        string_val: "batch_normalization_21/beta/Adam"
        string_val: "batch_normalization_21/beta/Adam_1"
        string_val: "batch_normalization_21/gamma"
        string_val: "batch_normalization_21/gamma/Adam"
        string_val: "batch_normalization_21/gamma/Adam_1"
        string_val: "batch_normalization_21/moving_mean"
        string_val: "batch_normalization_21/moving_variance"
        string_val: "batch_normalization_22/beta"
        string_val: "batch_normalization_22/beta/Adam"
        string_val: "batch_normalization_22/beta/Adam_1"
        string_val: "batch_normalization_22/gamma"
        string_val: "batch_normalization_22/gamma/Adam"
        string_val: "batch_normalization_22/gamma/Adam_1"
        string_val: "batch_normalization_22/moving_mean"
        string_val: "batch_normalization_22/moving_variance"
        string_val: "batch_normalization_23/beta"
        string_val: "batch_normalization_23/beta/Adam"
        string_val: "batch_normalization_23/beta/Adam_1"
        string_val: "batch_normalization_23/gamma"
        string_val: "batch_normalization_23/gamma/Adam"
        string_val: "batch_normalization_23/gamma/Adam_1"
        string_val: "batch_normalization_23/moving_mean"
        string_val: "batch_normalization_23/moving_variance"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/beta/Adam"
        string_val: "batch_normalization_3/beta/Adam_1"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/gamma/Adam"
        string_val: "batch_normalization_3/gamma/Adam_1"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/beta/Adam"
        string_val: "batch_normalization_4/beta/Adam_1"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/gamma/Adam"
        string_val: "batch_normalization_4/gamma/Adam_1"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "batch_normalization_5/beta"
        string_val: "batch_normalization_5/beta/Adam"
        string_val: "batch_normalization_5/beta/Adam_1"
        string_val: "batch_normalization_5/gamma"
        string_val: "batch_normalization_5/gamma/Adam"
        string_val: "batch_normalization_5/gamma/Adam_1"
        string_val: "batch_normalization_5/moving_mean"
        string_val: "batch_normalization_5/moving_variance"
        string_val: "batch_normalization_6/beta"
        string_val: "batch_normalization_6/beta/Adam"
        string_val: "batch_normalization_6/beta/Adam_1"
        string_val: "batch_normalization_6/gamma"
        string_val: "batch_normalization_6/gamma/Adam"
        string_val: "batch_normalization_6/gamma/Adam_1"
        string_val: "batch_normalization_6/moving_mean"
        string_val: "batch_normalization_6/moving_variance"
        string_val: "batch_normalization_7/beta"
        string_val: "batch_normalization_7/beta/Adam"
        string_val: "batch_normalization_7/beta/Adam_1"
        string_val: "batch_normalization_7/gamma"
        string_val: "batch_normalization_7/gamma/Adam"
        string_val: "batch_normalization_7/gamma/Adam_1"
        string_val: "batch_normalization_7/moving_mean"
        string_val: "batch_normalization_7/moving_variance"
        string_val: "batch_normalization_8/beta"
        string_val: "batch_normalization_8/beta/Adam"
        string_val: "batch_normalization_8/beta/Adam_1"
        string_val: "batch_normalization_8/gamma"
        string_val: "batch_normalization_8/gamma/Adam"
        string_val: "batch_normalization_8/gamma/Adam_1"
        string_val: "batch_normalization_8/moving_mean"
        string_val: "batch_normalization_8/moving_variance"
        string_val: "batch_normalization_9/beta"
        string_val: "batch_normalization_9/beta/Adam"
        string_val: "batch_normalization_9/beta/Adam_1"
        string_val: "batch_normalization_9/gamma"
        string_val: "batch_normalization_9/gamma/Adam"
        string_val: "batch_normalization_9/gamma/Adam_1"
        string_val: "batch_normalization_9/moving_mean"
        string_val: "batch_normalization_9/moving_variance"
        string_val: "global_step"
        string_val: "input_layer_c0_b"
        string_val: "input_layer_c0_b/Adam"
        string_val: "input_layer_c0_b/Adam_1"
        string_val: "input_layer_c0_w"
        string_val: "input_layer_c0_w/Adam"
        string_val: "input_layer_c0_w/Adam_1"
        string_val: "output_fc_b"
        string_val: "output_fc_b/Adam"
        string_val: "output_fc_b/Adam_1"
        string_val: "output_fc_w"
        string_val: "output_fc_w/Adam"
        string_val: "output_fc_w/Adam_1"
        string_val: "stage1_block1_c1_b"
        string_val: "stage1_block1_c1_b/Adam"
        string_val: "stage1_block1_c1_b/Adam_1"
        string_val: "stage1_block1_c1_w"
        string_val: "stage1_block1_c1_w/Adam"
        string_val: "stage1_block1_c1_w/Adam_1"
        string_val: "stage1_block1_c2_b"
        string_val: "stage1_block1_c2_b/Adam"
        string_val: "stage1_block1_c2_b/Adam_1"
        string_val: "stage1_block1_c2_w"
        string_val: "stage1_block1_c2_w/Adam"
        string_val: "stage1_block1_c2_w/Adam_1"
        string_val: "stage1_block2_c1_b"
        string_val: "stage1_block2_c1_b/Adam"
        string_val: "stage1_block2_c1_b/Adam_1"
        string_val: "stage1_block2_c1_w"
        string_val: "stage1_block2_c1_w/Adam"
        string_val: "stage1_block2_c1_w/Adam_1"
        string_val: "stage1_block2_c2_b"
        string_val: "stage1_block2_c2_b/Adam"
        string_val: "stage1_block2_c2_b/Adam_1"
        string_val: "stage1_block2_c2_w"
        string_val: "stage1_block2_c2_w/Adam"
        string_val: "stage1_block2_c2_w/Adam_1"
        string_val: "stage1_block3_c1_b"
        string_val: "stage1_block3_c1_b/Adam"
        string_val: "stage1_block3_c1_b/Adam_1"
        string_val: "stage1_block3_c1_w"
        string_val: "stage1_block3_c1_w/Adam"
        string_val: "stage1_block3_c1_w/Adam_1"
        string_val: "stage1_block3_c2_b"
        string_val: "stage1_block3_c2_b/Adam"
        string_val: "stage1_block3_c2_b/Adam_1"
        string_val: "stage1_block3_c2_w"
        string_val: "stage1_block3_c2_w/Adam"
        string_val: "stage1_block3_c2_w/Adam_1"
        string_val: "stage1_block4_c1_b"
        string_val: "stage1_block4_c1_b/Adam"
        string_val: "stage1_block4_c1_b/Adam_1"
        string_val: "stage1_block4_c1_w"
        string_val: "stage1_block4_c1_w/Adam"
        string_val: "stage1_block4_c1_w/Adam_1"
        string_val: "stage1_block4_c2_b"
        string_val: "stage1_block4_c2_b/Adam"
        string_val: "stage1_block4_c2_b/Adam_1"
        string_val: "stage1_block4_c2_w"
        string_val: "stage1_block4_c2_w/Adam"
        string_val: "stage1_block4_c2_w/Adam_1"
        string_val: "stage2_block1_c1_b"
        string_val: "stage2_block1_c1_b/Adam"
        string_val: "stage2_block1_c1_b/Adam_1"
        string_val: "stage2_block1_c1_w"
        string_val: "stage2_block1_c1_w/Adam"
        string_val: "stage2_block1_c1_w/Adam_1"
        string_val: "stage2_block1_c2_b"
        string_val: "stage2_block1_c2_b/Adam"
        string_val: "stage2_block1_c2_b/Adam_1"
        string_val: "stage2_block1_c2_w"
        string_val: "stage2_block1_c2_w/Adam"
        string_val: "stage2_block1_c2_w/Adam_1"
        string_val: "stage2_block2_c1_b"
        string_val: "stage2_block2_c1_b/Adam"
        string_val: "stage2_block2_c1_b/Adam_1"
        string_val: "stage2_block2_c1_w"
        string_val: "stage2_block2_c1_w/Adam"
        string_val: "stage2_block2_c1_w/Adam_1"
        string_val: "stage2_block2_c2_b"
        string_val: "stage2_block2_c2_b/Adam"
        string_val: "stage2_block2_c2_b/Adam_1"
        string_val: "stage2_block2_c2_w"
        string_val: "stage2_block2_c2_w/Adam"
        string_val: "stage2_block2_c2_w/Adam_1"
        string_val: "stage2_block3_c1_b"
        string_val: "stage2_block3_c1_b/Adam"
        string_val: "stage2_block3_c1_b/Adam_1"
        string_val: "stage2_block3_c1_w"
        string_val: "stage2_block3_c1_w/Adam"
        string_val: "stage2_block3_c1_w/Adam_1"
        string_val: "stage2_block3_c2_b"
        string_val: "stage2_block3_c2_b/Adam"
        string_val: "stage2_block3_c2_b/Adam_1"
        string_val: "stage2_block3_c2_w"
        string_val: "stage2_block3_c2_w/Adam"
        string_val: "stage2_block3_c2_w/Adam_1"
        string_val: "stage2_block4_c1_b"
        string_val: "stage2_block4_c1_b/Adam"
        string_val: "stage2_block4_c1_b/Adam_1"
        string_val: "stage2_block4_c1_w"
        string_val: "stage2_block4_c1_w/Adam"
        string_val: "stage2_block4_c1_w/Adam_1"
        string_val: "stage2_block4_c2_b"
        string_val: "stage2_block4_c2_b/Adam"
        string_val: "stage2_block4_c2_b/Adam_1"
        string_val: "stage2_block4_c2_w"
        string_val: "stage2_block4_c2_w/Adam"
        string_val: "stage2_block4_c2_w/Adam_1"
        string_val: "stage3_block1_c1_b"
        string_val: "stage3_block1_c1_b/Adam"
        string_val: "stage3_block1_c1_b/Adam_1"
        string_val: "stage3_block1_c1_w"
        string_val: "stage3_block1_c1_w/Adam"
        string_val: "stage3_block1_c1_w/Adam_1"
        string_val: "stage3_block1_c2_b"
        string_val: "stage3_block1_c2_b/Adam"
        string_val: "stage3_block1_c2_b/Adam_1"
        string_val: "stage3_block1_c2_w"
        string_val: "stage3_block1_c2_w/Adam"
        string_val: "stage3_block1_c2_w/Adam_1"
        string_val: "stage3_block2_c1_b"
        string_val: "stage3_block2_c1_b/Adam"
        string_val: "stage3_block2_c1_b/Adam_1"
        string_val: "stage3_block2_c1_w"
        string_val: "stage3_block2_c1_w/Adam"
        string_val: "stage3_block2_c1_w/Adam_1"
        string_val: "stage3_block2_c2_b"
        string_val: "stage3_block2_c2_b/Adam"
        string_val: "stage3_block2_c2_b/Adam_1"
        string_val: "stage3_block2_c2_w"
        string_val: "stage3_block2_c2_w/Adam"
        string_val: "stage3_block2_c2_w/Adam_1"
        string_val: "stage3_block3_c1_b"
        string_val: "stage3_block3_c1_b/Adam"
        string_val: "stage3_block3_c1_b/Adam_1"
        string_val: "stage3_block3_c1_w"
        string_val: "stage3_block3_c1_w/Adam"
        string_val: "stage3_block3_c1_w/Adam_1"
        string_val: "stage3_block3_c2_b"
        string_val: "stage3_block3_c2_b/Adam"
        string_val: "stage3_block3_c2_b/Adam_1"
        string_val: "stage3_block3_c2_w"
        string_val: "stage3_block3_c2_w/Adam"
        string_val: "stage3_block3_c2_w/Adam_1"
        string_val: "stage3_block4_c1_b"
        string_val: "stage3_block4_c1_b/Adam"
        string_val: "stage3_block4_c1_b/Adam_1"
        string_val: "stage3_block4_c1_w"
        string_val: "stage3_block4_c1_w/Adam"
        string_val: "stage3_block4_c1_w/Adam_1"
        string_val: "stage3_block4_c2_b"
        string_val: "stage3_block4_c2_b/Adam"
        string_val: "stage3_block4_c2_b/Adam_1"
        string_val: "stage3_block4_c2_w"
        string_val: "stage3_block4_c2_w/Adam"
        string_val: "stage3_block4_c2_w/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 351
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "batch_normalization/beta"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "batch_normalization/beta/Adam"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "batch_normalization/beta/Adam_1"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "batch_normalization/gamma/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "batch_normalization/moving_mean"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "batch_normalization/moving_variance"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta/Adam"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta/Adam_1"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma/Adam"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma/Adam_1"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "batch_normalization_10/beta"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "batch_normalization_10/beta/Adam"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "batch_normalization_10/beta/Adam_1"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "batch_normalization_10/gamma"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "batch_normalization_10/gamma/Adam"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "batch_normalization_10/gamma/Adam_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "batch_normalization_10/moving_mean"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "batch_normalization_10/moving_variance"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "batch_normalization_11/beta"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "batch_normalization_11/beta/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "batch_normalization_11/beta/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "batch_normalization_11/gamma"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "batch_normalization_11/gamma/Adam"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "batch_normalization_11/gamma/Adam_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "batch_normalization_11/moving_mean"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "batch_normalization_11/moving_variance"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "batch_normalization_12/beta"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "batch_normalization_12/beta/Adam"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "batch_normalization_12/beta/Adam_1"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "batch_normalization_12/gamma"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "batch_normalization_12/gamma/Adam"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "batch_normalization_12/gamma/Adam_1"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "batch_normalization_12/moving_mean"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "batch_normalization_12/moving_variance"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "batch_normalization_13/beta"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "batch_normalization_13/beta/Adam"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "batch_normalization_13/beta/Adam_1"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "batch_normalization_13/gamma"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "batch_normalization_13/gamma/Adam"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "batch_normalization_13/gamma/Adam_1"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "batch_normalization_13/moving_mean"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "batch_normalization_13/moving_variance"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "batch_normalization_14/beta"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "batch_normalization_14/beta/Adam"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "batch_normalization_14/beta/Adam_1"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "batch_normalization_14/gamma"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "batch_normalization_14/gamma/Adam"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "batch_normalization_14/gamma/Adam_1"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "batch_normalization_14/moving_mean"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "batch_normalization_14/moving_variance"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "batch_normalization_15/beta"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "batch_normalization_15/beta/Adam"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "batch_normalization_15/beta/Adam_1"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "batch_normalization_15/gamma"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "batch_normalization_15/gamma/Adam"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "batch_normalization_15/gamma/Adam_1"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "batch_normalization_15/moving_mean"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "batch_normalization_15/moving_variance"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "batch_normalization_16/beta"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "batch_normalization_16/beta/Adam"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "batch_normalization_16/beta/Adam_1"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "batch_normalization_16/gamma"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "batch_normalization_16/gamma/Adam"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "batch_normalization_16/gamma/Adam_1"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "batch_normalization_16/moving_mean"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "batch_normalization_16/moving_variance"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "batch_normalization_17/beta"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "batch_normalization_17/beta/Adam"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "batch_normalization_17/beta/Adam_1"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "batch_normalization_17/gamma"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "batch_normalization_17/gamma/Adam"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "batch_normalization_17/gamma/Adam_1"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "batch_normalization_17/moving_mean"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "batch_normalization_17/moving_variance"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "batch_normalization_18/beta"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "batch_normalization_18/beta/Adam"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "batch_normalization_18/beta/Adam_1"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "batch_normalization_18/gamma"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "batch_normalization_18/gamma/Adam"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "batch_normalization_18/gamma/Adam_1"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "batch_normalization_18/moving_mean"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "batch_normalization_18/moving_variance"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "batch_normalization_19/beta"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "batch_normalization_19/beta/Adam"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "batch_normalization_19/beta/Adam_1"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "batch_normalization_19/gamma"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "batch_normalization_19/gamma/Adam"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "batch_normalization_19/gamma/Adam_1"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "batch_normalization_19/moving_mean"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "batch_normalization_19/moving_variance"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta/Adam"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta/Adam_1"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma/Adam"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma/Adam_1"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "batch_normalization_20/beta"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "batch_normalization_20/beta/Adam"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "batch_normalization_20/beta/Adam_1"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "batch_normalization_20/gamma"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "batch_normalization_20/gamma/Adam"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "batch_normalization_20/gamma/Adam_1"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "batch_normalization_20/moving_mean"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "batch_normalization_20/moving_variance"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "batch_normalization_21/beta"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "batch_normalization_21/beta/Adam"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "batch_normalization_21/beta/Adam_1"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "batch_normalization_21/gamma"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "batch_normalization_21/gamma/Adam"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "batch_normalization_21/gamma/Adam_1"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "batch_normalization_21/moving_mean"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "batch_normalization_21/moving_variance"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "batch_normalization_22/beta"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "batch_normalization_22/beta/Adam"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "batch_normalization_22/beta/Adam_1"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "batch_normalization_22/gamma"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "batch_normalization_22/gamma/Adam"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "batch_normalization_22/gamma/Adam_1"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "batch_normalization_22/moving_mean"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "batch_normalization_22/moving_variance"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "batch_normalization_23/beta"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "batch_normalization_23/beta/Adam"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "batch_normalization_23/beta/Adam_1"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "batch_normalization_23/gamma"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "batch_normalization_23/gamma/Adam"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "batch_normalization_23/gamma/Adam_1"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "batch_normalization_23/moving_mean"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "batch_normalization_23/moving_variance"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta/Adam"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta/Adam_1"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma/Adam"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma/Adam_1"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta/Adam"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta/Adam_1"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma/Adam"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma/Adam_1"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta/Adam"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta/Adam_1"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma/Adam"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma/Adam_1"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "batch_normalization_6/beta"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "batch_normalization_6/beta/Adam"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "batch_normalization_6/beta/Adam_1"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "batch_normalization_6/gamma"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "batch_normalization_6/gamma/Adam"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "batch_normalization_6/gamma/Adam_1"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "batch_normalization_6/moving_mean"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "batch_normalization_6/moving_variance"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "batch_normalization_7/beta"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "batch_normalization_7/beta/Adam"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "batch_normalization_7/beta/Adam_1"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "batch_normalization_7/gamma"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "batch_normalization_7/gamma/Adam"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "batch_normalization_7/gamma/Adam_1"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "batch_normalization_7/moving_mean"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "batch_normalization_7/moving_variance"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "batch_normalization_8/beta"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "batch_normalization_8/beta/Adam"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "batch_normalization_8/beta/Adam_1"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "batch_normalization_8/gamma"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "batch_normalization_8/gamma/Adam"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "batch_normalization_8/gamma/Adam_1"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "batch_normalization_8/moving_mean"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "batch_normalization_8/moving_variance"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "batch_normalization_9/beta"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "batch_normalization_9/beta/Adam"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "batch_normalization_9/beta/Adam_1"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "batch_normalization_9/gamma"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "batch_normalization_9/gamma/Adam"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "batch_normalization_9/gamma/Adam_1"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "batch_normalization_9/moving_mean"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "batch_normalization_9/moving_variance"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "input_layer_c0_b"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "input_layer_c0_b/Adam"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "input_layer_c0_b/Adam_1"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "input_layer_c0_w"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "input_layer_c0_w/Adam"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "input_layer_c0_w/Adam_1"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_layer_c0_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "output_fc_b"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "output_fc_b/Adam"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "output_fc_b/Adam_1"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "output_fc_w"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "output_fc_w/Adam"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "output_fc_w/Adam_1"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_fc_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "stage1_block1_c1_b"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "stage1_block1_c1_b/Adam"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "stage1_block1_c1_b/Adam_1"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "stage1_block1_c1_w"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "stage1_block1_c1_w/Adam"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "stage1_block1_c1_w/Adam_1"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "stage1_block1_c2_b"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "stage1_block1_c2_b/Adam"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "stage1_block1_c2_b/Adam_1"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "stage1_block1_c2_w"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "stage1_block1_c2_w/Adam"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "stage1_block1_c2_w/Adam_1"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "stage1_block2_c1_b"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "stage1_block2_c1_b/Adam"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "stage1_block2_c1_b/Adam_1"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "stage1_block2_c1_w"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "stage1_block2_c1_w/Adam"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "stage1_block2_c1_w/Adam_1"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "stage1_block2_c2_b"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "stage1_block2_c2_b/Adam"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "stage1_block2_c2_b/Adam_1"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "stage1_block2_c2_w"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "stage1_block2_c2_w/Adam"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "stage1_block2_c2_w/Adam_1"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "stage1_block3_c1_b"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "stage1_block3_c1_b/Adam"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "stage1_block3_c1_b/Adam_1"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "stage1_block3_c1_w"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "stage1_block3_c1_w/Adam"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "stage1_block3_c1_w/Adam_1"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "stage1_block3_c2_b"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "stage1_block3_c2_b/Adam"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "stage1_block3_c2_b/Adam_1"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "stage1_block3_c2_w"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "stage1_block3_c2_w/Adam"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "stage1_block3_c2_w/Adam_1"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "stage1_block4_c1_b"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "stage1_block4_c1_b/Adam"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "stage1_block4_c1_b/Adam_1"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "stage1_block4_c1_w"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "stage1_block4_c1_w/Adam"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "stage1_block4_c1_w/Adam_1"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "stage1_block4_c2_b"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "stage1_block4_c2_b/Adam"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "stage1_block4_c2_b/Adam_1"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "stage1_block4_c2_w"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "stage1_block4_c2_w/Adam"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "stage1_block4_c2_w/Adam_1"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage1_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "stage2_block1_c1_b"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "stage2_block1_c1_b/Adam"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "stage2_block1_c1_b/Adam_1"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "stage2_block1_c1_w"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "stage2_block1_c1_w/Adam"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "stage2_block1_c1_w/Adam_1"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "stage2_block1_c2_b"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "stage2_block1_c2_b/Adam"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "stage2_block1_c2_b/Adam_1"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "stage2_block1_c2_w"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "stage2_block1_c2_w/Adam"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "stage2_block1_c2_w/Adam_1"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "stage2_block2_c1_b"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "stage2_block2_c1_b/Adam"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "stage2_block2_c1_b/Adam_1"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "stage2_block2_c1_w"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "stage2_block2_c1_w/Adam"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "stage2_block2_c1_w/Adam_1"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "stage2_block2_c2_b"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "stage2_block2_c2_b/Adam"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "stage2_block2_c2_b/Adam_1"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "stage2_block2_c2_w"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "stage2_block2_c2_w/Adam"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "stage2_block2_c2_w/Adam_1"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "stage2_block3_c1_b"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "stage2_block3_c1_b/Adam"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "stage2_block3_c1_b/Adam_1"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "stage2_block3_c1_w"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "stage2_block3_c1_w/Adam"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "stage2_block3_c1_w/Adam_1"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "stage2_block3_c2_b"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "stage2_block3_c2_b/Adam"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "stage2_block3_c2_b/Adam_1"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "stage2_block3_c2_w"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "stage2_block3_c2_w/Adam"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "stage2_block3_c2_w/Adam_1"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "stage2_block4_c1_b"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "stage2_block4_c1_b/Adam"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "stage2_block4_c1_b/Adam_1"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "stage2_block4_c1_w"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "stage2_block4_c1_w/Adam"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "stage2_block4_c1_w/Adam_1"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "stage2_block4_c2_b"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "stage2_block4_c2_b/Adam"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "stage2_block4_c2_b/Adam_1"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "stage2_block4_c2_w"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "stage2_block4_c2_w/Adam"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "stage2_block4_c2_w/Adam_1"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage2_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "stage3_block1_c1_b"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "stage3_block1_c1_b/Adam"
  input: "save/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "stage3_block1_c1_b/Adam_1"
  input: "save/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "stage3_block1_c1_w"
  input: "save/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "stage3_block1_c1_w/Adam"
  input: "save/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "stage3_block1_c1_w/Adam_1"
  input: "save/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "stage3_block1_c2_b"
  input: "save/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "stage3_block1_c2_b/Adam"
  input: "save/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "stage3_block1_c2_b/Adam_1"
  input: "save/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "stage3_block1_c2_w"
  input: "save/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "stage3_block1_c2_w/Adam"
  input: "save/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "stage3_block1_c2_w/Adam_1"
  input: "save/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block1_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "stage3_block2_c1_b"
  input: "save/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "stage3_block2_c1_b/Adam"
  input: "save/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "stage3_block2_c1_b/Adam_1"
  input: "save/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "stage3_block2_c1_w"
  input: "save/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "stage3_block2_c1_w/Adam"
  input: "save/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "stage3_block2_c1_w/Adam_1"
  input: "save/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "stage3_block2_c2_b"
  input: "save/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "stage3_block2_c2_b/Adam"
  input: "save/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "stage3_block2_c2_b/Adam_1"
  input: "save/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "stage3_block2_c2_w"
  input: "save/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "stage3_block2_c2_w/Adam"
  input: "save/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "stage3_block2_c2_w/Adam_1"
  input: "save/RestoreV2:324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block2_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "stage3_block3_c1_b"
  input: "save/RestoreV2:325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "stage3_block3_c1_b/Adam"
  input: "save/RestoreV2:326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "stage3_block3_c1_b/Adam_1"
  input: "save/RestoreV2:327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "stage3_block3_c1_w"
  input: "save/RestoreV2:328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "stage3_block3_c1_w/Adam"
  input: "save/RestoreV2:329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "stage3_block3_c1_w/Adam_1"
  input: "save/RestoreV2:330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "stage3_block3_c2_b"
  input: "save/RestoreV2:331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "stage3_block3_c2_b/Adam"
  input: "save/RestoreV2:332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "stage3_block3_c2_b/Adam_1"
  input: "save/RestoreV2:333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "stage3_block3_c2_w"
  input: "save/RestoreV2:334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "stage3_block3_c2_w/Adam"
  input: "save/RestoreV2:335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "stage3_block3_c2_w/Adam_1"
  input: "save/RestoreV2:336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block3_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "stage3_block4_c1_b"
  input: "save/RestoreV2:337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "stage3_block4_c1_b/Adam"
  input: "save/RestoreV2:338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "stage3_block4_c1_b/Adam_1"
  input: "save/RestoreV2:339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "stage3_block4_c1_w"
  input: "save/RestoreV2:340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "stage3_block4_c1_w/Adam"
  input: "save/RestoreV2:341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "stage3_block4_c1_w/Adam_1"
  input: "save/RestoreV2:342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c1_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "stage3_block4_c2_b"
  input: "save/RestoreV2:343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "stage3_block4_c2_b/Adam"
  input: "save/RestoreV2:344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "stage3_block4_c2_b/Adam_1"
  input: "save/RestoreV2:345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "stage3_block4_c2_w"
  input: "save/RestoreV2:346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "stage3_block4_c2_w/Adam"
  input: "save/RestoreV2:347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "stage3_block4_c2_w/Adam_1"
  input: "save/RestoreV2:348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stage3_block4_c2_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "train/beta1_power"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "train/beta2_power"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^batch_normalization/beta/Adam/Assign"
  input: "^batch_normalization/beta/Adam_1/Assign"
  input: "^batch_normalization/beta/Assign"
  input: "^batch_normalization/gamma/Adam/Assign"
  input: "^batch_normalization/gamma/Adam_1/Assign"
  input: "^batch_normalization/gamma/Assign"
  input: "^batch_normalization/moving_mean/Assign"
  input: "^batch_normalization/moving_variance/Assign"
  input: "^batch_normalization_1/beta/Adam/Assign"
  input: "^batch_normalization_1/beta/Adam_1/Assign"
  input: "^batch_normalization_1/beta/Assign"
  input: "^batch_normalization_1/gamma/Adam/Assign"
  input: "^batch_normalization_1/gamma/Adam_1/Assign"
  input: "^batch_normalization_1/gamma/Assign"
  input: "^batch_normalization_1/moving_mean/Assign"
  input: "^batch_normalization_1/moving_variance/Assign"
  input: "^batch_normalization_10/beta/Adam/Assign"
  input: "^batch_normalization_10/beta/Adam_1/Assign"
  input: "^batch_normalization_10/beta/Assign"
  input: "^batch_normalization_10/gamma/Adam/Assign"
  input: "^batch_normalization_10/gamma/Adam_1/Assign"
  input: "^batch_normalization_10/gamma/Assign"
  input: "^batch_normalization_10/moving_mean/Assign"
  input: "^batch_normalization_10/moving_variance/Assign"
  input: "^batch_normalization_11/beta/Adam/Assign"
  input: "^batch_normalization_11/beta/Adam_1/Assign"
  input: "^batch_normalization_11/beta/Assign"
  input: "^batch_normalization_11/gamma/Adam/Assign"
  input: "^batch_normalization_11/gamma/Adam_1/Assign"
  input: "^batch_normalization_11/gamma/Assign"
  input: "^batch_normalization_11/moving_mean/Assign"
  input: "^batch_normalization_11/moving_variance/Assign"
  input: "^batch_normalization_12/beta/Adam/Assign"
  input: "^batch_normalization_12/beta/Adam_1/Assign"
  input: "^batch_normalization_12/beta/Assign"
  input: "^batch_normalization_12/gamma/Adam/Assign"
  input: "^batch_normalization_12/gamma/Adam_1/Assign"
  input: "^batch_normalization_12/gamma/Assign"
  input: "^batch_normalization_12/moving_mean/Assign"
  input: "^batch_normalization_12/moving_variance/Assign"
  input: "^batch_normalization_13/beta/Adam/Assign"
  input: "^batch_normalization_13/beta/Adam_1/Assign"
  input: "^batch_normalization_13/beta/Assign"
  input: "^batch_normalization_13/gamma/Adam/Assign"
  input: "^batch_normalization_13/gamma/Adam_1/Assign"
  input: "^batch_normalization_13/gamma/Assign"
  input: "^batch_normalization_13/moving_mean/Assign"
  input: "^batch_normalization_13/moving_variance/Assign"
  input: "^batch_normalization_14/beta/Adam/Assign"
  input: "^batch_normalization_14/beta/Adam_1/Assign"
  input: "^batch_normalization_14/beta/Assign"
  input: "^batch_normalization_14/gamma/Adam/Assign"
  input: "^batch_normalization_14/gamma/Adam_1/Assign"
  input: "^batch_normalization_14/gamma/Assign"
  input: "^batch_normalization_14/moving_mean/Assign"
  input: "^batch_normalization_14/moving_variance/Assign"
  input: "^batch_normalization_15/beta/Adam/Assign"
  input: "^batch_normalization_15/beta/Adam_1/Assign"
  input: "^batch_normalization_15/beta/Assign"
  input: "^batch_normalization_15/gamma/Adam/Assign"
  input: "^batch_normalization_15/gamma/Adam_1/Assign"
  input: "^batch_normalization_15/gamma/Assign"
  input: "^batch_normalization_15/moving_mean/Assign"
  input: "^batch_normalization_15/moving_variance/Assign"
  input: "^batch_normalization_16/beta/Adam/Assign"
  input: "^batch_normalization_16/beta/Adam_1/Assign"
  input: "^batch_normalization_16/beta/Assign"
  input: "^batch_normalization_16/gamma/Adam/Assign"
  input: "^batch_normalization_16/gamma/Adam_1/Assign"
  input: "^batch_normalization_16/gamma/Assign"
  input: "^batch_normalization_16/moving_mean/Assign"
  input: "^batch_normalization_16/moving_variance/Assign"
  input: "^batch_normalization_17/beta/Adam/Assign"
  input: "^batch_normalization_17/beta/Adam_1/Assign"
  input: "^batch_normalization_17/beta/Assign"
  input: "^batch_normalization_17/gamma/Adam/Assign"
  input: "^batch_normalization_17/gamma/Adam_1/Assign"
  input: "^batch_normalization_17/gamma/Assign"
  input: "^batch_normalization_17/moving_mean/Assign"
  input: "^batch_normalization_17/moving_variance/Assign"
  input: "^batch_normalization_18/beta/Adam/Assign"
  input: "^batch_normalization_18/beta/Adam_1/Assign"
  input: "^batch_normalization_18/beta/Assign"
  input: "^batch_normalization_18/gamma/Adam/Assign"
  input: "^batch_normalization_18/gamma/Adam_1/Assign"
  input: "^batch_normalization_18/gamma/Assign"
  input: "^batch_normalization_18/moving_mean/Assign"
  input: "^batch_normalization_18/moving_variance/Assign"
  input: "^batch_normalization_19/beta/Adam/Assign"
  input: "^batch_normalization_19/beta/Adam_1/Assign"
  input: "^batch_normalization_19/beta/Assign"
  input: "^batch_normalization_19/gamma/Adam/Assign"
  input: "^batch_normalization_19/gamma/Adam_1/Assign"
  input: "^batch_normalization_19/gamma/Assign"
  input: "^batch_normalization_19/moving_mean/Assign"
  input: "^batch_normalization_19/moving_variance/Assign"
  input: "^batch_normalization_2/beta/Adam/Assign"
  input: "^batch_normalization_2/beta/Adam_1/Assign"
  input: "^batch_normalization_2/beta/Assign"
  input: "^batch_normalization_2/gamma/Adam/Assign"
  input: "^batch_normalization_2/gamma/Adam_1/Assign"
  input: "^batch_normalization_2/gamma/Assign"
  input: "^batch_normalization_2/moving_mean/Assign"
  input: "^batch_normalization_2/moving_variance/Assign"
  input: "^batch_normalization_20/beta/Adam/Assign"
  input: "^batch_normalization_20/beta/Adam_1/Assign"
  input: "^batch_normalization_20/beta/Assign"
  input: "^batch_normalization_20/gamma/Adam/Assign"
  input: "^batch_normalization_20/gamma/Adam_1/Assign"
  input: "^batch_normalization_20/gamma/Assign"
  input: "^batch_normalization_20/moving_mean/Assign"
  input: "^batch_normalization_20/moving_variance/Assign"
  input: "^batch_normalization_21/beta/Adam/Assign"
  input: "^batch_normalization_21/beta/Adam_1/Assign"
  input: "^batch_normalization_21/beta/Assign"
  input: "^batch_normalization_21/gamma/Adam/Assign"
  input: "^batch_normalization_21/gamma/Adam_1/Assign"
  input: "^batch_normalization_21/gamma/Assign"
  input: "^batch_normalization_21/moving_mean/Assign"
  input: "^batch_normalization_21/moving_variance/Assign"
  input: "^batch_normalization_22/beta/Adam/Assign"
  input: "^batch_normalization_22/beta/Adam_1/Assign"
  input: "^batch_normalization_22/beta/Assign"
  input: "^batch_normalization_22/gamma/Adam/Assign"
  input: "^batch_normalization_22/gamma/Adam_1/Assign"
  input: "^batch_normalization_22/gamma/Assign"
  input: "^batch_normalization_22/moving_mean/Assign"
  input: "^batch_normalization_22/moving_variance/Assign"
  input: "^batch_normalization_23/beta/Adam/Assign"
  input: "^batch_normalization_23/beta/Adam_1/Assign"
  input: "^batch_normalization_23/beta/Assign"
  input: "^batch_normalization_23/gamma/Adam/Assign"
  input: "^batch_normalization_23/gamma/Adam_1/Assign"
  input: "^batch_normalization_23/gamma/Assign"
  input: "^batch_normalization_23/moving_mean/Assign"
  input: "^batch_normalization_23/moving_variance/Assign"
  input: "^batch_normalization_3/beta/Adam/Assign"
  input: "^batch_normalization_3/beta/Adam_1/Assign"
  input: "^batch_normalization_3/beta/Assign"
  input: "^batch_normalization_3/gamma/Adam/Assign"
  input: "^batch_normalization_3/gamma/Adam_1/Assign"
  input: "^batch_normalization_3/gamma/Assign"
  input: "^batch_normalization_3/moving_mean/Assign"
  input: "^batch_normalization_3/moving_variance/Assign"
  input: "^batch_normalization_4/beta/Adam/Assign"
  input: "^batch_normalization_4/beta/Adam_1/Assign"
  input: "^batch_normalization_4/beta/Assign"
  input: "^batch_normalization_4/gamma/Adam/Assign"
  input: "^batch_normalization_4/gamma/Adam_1/Assign"
  input: "^batch_normalization_4/gamma/Assign"
  input: "^batch_normalization_4/moving_mean/Assign"
  input: "^batch_normalization_4/moving_variance/Assign"
  input: "^batch_normalization_5/beta/Adam/Assign"
  input: "^batch_normalization_5/beta/Adam_1/Assign"
  input: "^batch_normalization_5/beta/Assign"
  input: "^batch_normalization_5/gamma/Adam/Assign"
  input: "^batch_normalization_5/gamma/Adam_1/Assign"
  input: "^batch_normalization_5/gamma/Assign"
  input: "^batch_normalization_5/moving_mean/Assign"
  input: "^batch_normalization_5/moving_variance/Assign"
  input: "^batch_normalization_6/beta/Adam/Assign"
  input: "^batch_normalization_6/beta/Adam_1/Assign"
  input: "^batch_normalization_6/beta/Assign"
  input: "^batch_normalization_6/gamma/Adam/Assign"
  input: "^batch_normalization_6/gamma/Adam_1/Assign"
  input: "^batch_normalization_6/gamma/Assign"
  input: "^batch_normalization_6/moving_mean/Assign"
  input: "^batch_normalization_6/moving_variance/Assign"
  input: "^batch_normalization_7/beta/Adam/Assign"
  input: "^batch_normalization_7/beta/Adam_1/Assign"
  input: "^batch_normalization_7/beta/Assign"
  input: "^batch_normalization_7/gamma/Adam/Assign"
  input: "^batch_normalization_7/gamma/Adam_1/Assign"
  input: "^batch_normalization_7/gamma/Assign"
  input: "^batch_normalization_7/moving_mean/Assign"
  input: "^batch_normalization_7/moving_variance/Assign"
  input: "^batch_normalization_8/beta/Adam/Assign"
  input: "^batch_normalization_8/beta/Adam_1/Assign"
  input: "^batch_normalization_8/beta/Assign"
  input: "^batch_normalization_8/gamma/Adam/Assign"
  input: "^batch_normalization_8/gamma/Adam_1/Assign"
  input: "^batch_normalization_8/gamma/Assign"
  input: "^batch_normalization_8/moving_mean/Assign"
  input: "^batch_normalization_8/moving_variance/Assign"
  input: "^batch_normalization_9/beta/Adam/Assign"
  input: "^batch_normalization_9/beta/Adam_1/Assign"
  input: "^batch_normalization_9/beta/Assign"
  input: "^batch_normalization_9/gamma/Adam/Assign"
  input: "^batch_normalization_9/gamma/Adam_1/Assign"
  input: "^batch_normalization_9/gamma/Assign"
  input: "^batch_normalization_9/moving_mean/Assign"
  input: "^batch_normalization_9/moving_variance/Assign"
  input: "^global_step/Assign"
  input: "^input_layer_c0_b/Adam/Assign"
  input: "^input_layer_c0_b/Adam_1/Assign"
  input: "^input_layer_c0_b/Assign"
  input: "^input_layer_c0_w/Adam/Assign"
  input: "^input_layer_c0_w/Adam_1/Assign"
  input: "^input_layer_c0_w/Assign"
  input: "^output_fc_b/Adam/Assign"
  input: "^output_fc_b/Adam_1/Assign"
  input: "^output_fc_b/Assign"
  input: "^output_fc_w/Adam/Assign"
  input: "^output_fc_w/Adam_1/Assign"
  input: "^output_fc_w/Assign"
  input: "^stage1_block1_c1_b/Adam/Assign"
  input: "^stage1_block1_c1_b/Adam_1/Assign"
  input: "^stage1_block1_c1_b/Assign"
  input: "^stage1_block1_c1_w/Adam/Assign"
  input: "^stage1_block1_c1_w/Adam_1/Assign"
  input: "^stage1_block1_c1_w/Assign"
  input: "^stage1_block1_c2_b/Adam/Assign"
  input: "^stage1_block1_c2_b/Adam_1/Assign"
  input: "^stage1_block1_c2_b/Assign"
  input: "^stage1_block1_c2_w/Adam/Assign"
  input: "^stage1_block1_c2_w/Adam_1/Assign"
  input: "^stage1_block1_c2_w/Assign"
  input: "^stage1_block2_c1_b/Adam/Assign"
  input: "^stage1_block2_c1_b/Adam_1/Assign"
  input: "^stage1_block2_c1_b/Assign"
  input: "^stage1_block2_c1_w/Adam/Assign"
  input: "^stage1_block2_c1_w/Adam_1/Assign"
  input: "^stage1_block2_c1_w/Assign"
  input: "^stage1_block2_c2_b/Adam/Assign"
  input: "^stage1_block2_c2_b/Adam_1/Assign"
  input: "^stage1_block2_c2_b/Assign"
  input: "^stage1_block2_c2_w/Adam/Assign"
  input: "^stage1_block2_c2_w/Adam_1/Assign"
  input: "^stage1_block2_c2_w/Assign"
  input: "^stage1_block3_c1_b/Adam/Assign"
  input: "^stage1_block3_c1_b/Adam_1/Assign"
  input: "^stage1_block3_c1_b/Assign"
  input: "^stage1_block3_c1_w/Adam/Assign"
  input: "^stage1_block3_c1_w/Adam_1/Assign"
  input: "^stage1_block3_c1_w/Assign"
  input: "^stage1_block3_c2_b/Adam/Assign"
  input: "^stage1_block3_c2_b/Adam_1/Assign"
  input: "^stage1_block3_c2_b/Assign"
  input: "^stage1_block3_c2_w/Adam/Assign"
  input: "^stage1_block3_c2_w/Adam_1/Assign"
  input: "^stage1_block3_c2_w/Assign"
  input: "^stage1_block4_c1_b/Adam/Assign"
  input: "^stage1_block4_c1_b/Adam_1/Assign"
  input: "^stage1_block4_c1_b/Assign"
  input: "^stage1_block4_c1_w/Adam/Assign"
  input: "^stage1_block4_c1_w/Adam_1/Assign"
  input: "^stage1_block4_c1_w/Assign"
  input: "^stage1_block4_c2_b/Adam/Assign"
  input: "^stage1_block4_c2_b/Adam_1/Assign"
  input: "^stage1_block4_c2_b/Assign"
  input: "^stage1_block4_c2_w/Adam/Assign"
  input: "^stage1_block4_c2_w/Adam_1/Assign"
  input: "^stage1_block4_c2_w/Assign"
  input: "^stage2_block1_c1_b/Adam/Assign"
  input: "^stage2_block1_c1_b/Adam_1/Assign"
  input: "^stage2_block1_c1_b/Assign"
  input: "^stage2_block1_c1_w/Adam/Assign"
  input: "^stage2_block1_c1_w/Adam_1/Assign"
  input: "^stage2_block1_c1_w/Assign"
  input: "^stage2_block1_c2_b/Adam/Assign"
  input: "^stage2_block1_c2_b/Adam_1/Assign"
  input: "^stage2_block1_c2_b/Assign"
  input: "^stage2_block1_c2_w/Adam/Assign"
  input: "^stage2_block1_c2_w/Adam_1/Assign"
  input: "^stage2_block1_c2_w/Assign"
  input: "^stage2_block2_c1_b/Adam/Assign"
  input: "^stage2_block2_c1_b/Adam_1/Assign"
  input: "^stage2_block2_c1_b/Assign"
  input: "^stage2_block2_c1_w/Adam/Assign"
  input: "^stage2_block2_c1_w/Adam_1/Assign"
  input: "^stage2_block2_c1_w/Assign"
  input: "^stage2_block2_c2_b/Adam/Assign"
  input: "^stage2_block2_c2_b/Adam_1/Assign"
  input: "^stage2_block2_c2_b/Assign"
  input: "^stage2_block2_c2_w/Adam/Assign"
  input: "^stage2_block2_c2_w/Adam_1/Assign"
  input: "^stage2_block2_c2_w/Assign"
  input: "^stage2_block3_c1_b/Adam/Assign"
  input: "^stage2_block3_c1_b/Adam_1/Assign"
  input: "^stage2_block3_c1_b/Assign"
  input: "^stage2_block3_c1_w/Adam/Assign"
  input: "^stage2_block3_c1_w/Adam_1/Assign"
  input: "^stage2_block3_c1_w/Assign"
  input: "^stage2_block3_c2_b/Adam/Assign"
  input: "^stage2_block3_c2_b/Adam_1/Assign"
  input: "^stage2_block3_c2_b/Assign"
  input: "^stage2_block3_c2_w/Adam/Assign"
  input: "^stage2_block3_c2_w/Adam_1/Assign"
  input: "^stage2_block3_c2_w/Assign"
  input: "^stage2_block4_c1_b/Adam/Assign"
  input: "^stage2_block4_c1_b/Adam_1/Assign"
  input: "^stage2_block4_c1_b/Assign"
  input: "^stage2_block4_c1_w/Adam/Assign"
  input: "^stage2_block4_c1_w/Adam_1/Assign"
  input: "^stage2_block4_c1_w/Assign"
  input: "^stage2_block4_c2_b/Adam/Assign"
  input: "^stage2_block4_c2_b/Adam_1/Assign"
  input: "^stage2_block4_c2_b/Assign"
  input: "^stage2_block4_c2_w/Adam/Assign"
  input: "^stage2_block4_c2_w/Adam_1/Assign"
  input: "^stage2_block4_c2_w/Assign"
  input: "^stage3_block1_c1_b/Adam/Assign"
  input: "^stage3_block1_c1_b/Adam_1/Assign"
  input: "^stage3_block1_c1_b/Assign"
  input: "^stage3_block1_c1_w/Adam/Assign"
  input: "^stage3_block1_c1_w/Adam_1/Assign"
  input: "^stage3_block1_c1_w/Assign"
  input: "^stage3_block1_c2_b/Adam/Assign"
  input: "^stage3_block1_c2_b/Adam_1/Assign"
  input: "^stage3_block1_c2_b/Assign"
  input: "^stage3_block1_c2_w/Adam/Assign"
  input: "^stage3_block1_c2_w/Adam_1/Assign"
  input: "^stage3_block1_c2_w/Assign"
  input: "^stage3_block2_c1_b/Adam/Assign"
  input: "^stage3_block2_c1_b/Adam_1/Assign"
  input: "^stage3_block2_c1_b/Assign"
  input: "^stage3_block2_c1_w/Adam/Assign"
  input: "^stage3_block2_c1_w/Adam_1/Assign"
  input: "^stage3_block2_c1_w/Assign"
  input: "^stage3_block2_c2_b/Adam/Assign"
  input: "^stage3_block2_c2_b/Adam_1/Assign"
  input: "^stage3_block2_c2_b/Assign"
  input: "^stage3_block2_c2_w/Adam/Assign"
  input: "^stage3_block2_c2_w/Adam_1/Assign"
  input: "^stage3_block2_c2_w/Assign"
  input: "^stage3_block3_c1_b/Adam/Assign"
  input: "^stage3_block3_c1_b/Adam_1/Assign"
  input: "^stage3_block3_c1_b/Assign"
  input: "^stage3_block3_c1_w/Adam/Assign"
  input: "^stage3_block3_c1_w/Adam_1/Assign"
  input: "^stage3_block3_c1_w/Assign"
  input: "^stage3_block3_c2_b/Adam/Assign"
  input: "^stage3_block3_c2_b/Adam_1/Assign"
  input: "^stage3_block3_c2_b/Assign"
  input: "^stage3_block3_c2_w/Adam/Assign"
  input: "^stage3_block3_c2_w/Adam_1/Assign"
  input: "^stage3_block3_c2_w/Assign"
  input: "^stage3_block4_c1_b/Adam/Assign"
  input: "^stage3_block4_c1_b/Adam_1/Assign"
  input: "^stage3_block4_c1_b/Assign"
  input: "^stage3_block4_c1_w/Adam/Assign"
  input: "^stage3_block4_c1_w/Adam_1/Assign"
  input: "^stage3_block4_c1_w/Assign"
  input: "^stage3_block4_c2_b/Adam/Assign"
  input: "^stage3_block4_c2_b/Adam_1/Assign"
  input: "^stage3_block4_c2_b/Assign"
  input: "^stage3_block4_c2_w/Adam/Assign"
  input: "^stage3_block4_c2_w/Adam_1/Assign"
  input: "^stage3_block4_c2_w/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
}
versions {
  producer: 38
}
